@using Newtonsoft.Json;
@using Microsoft.AspNetCore.Http;
@inject IHttpContextAccessor HttpContextAccessor
@model DGRA_V1.Models.DailyGenSummary

@{
    ViewData["Title"] = "Wind Power Curve";
}
@{
    string windSiteList = "";

    var usermodel = JsonConvert.DeserializeObject<UserAccess>(@HttpContextAccessor.HttpContext.Session.GetString("UserAccess"));

}
@for (int i = 0; i < @usermodel.access_list.Count; i++)
{

    if (@usermodel.access_list[i].page_type == 3 && @usermodel.access_list[i].site_type == 1)
    {
        windSiteList += @usermodel.access_list[i].identity.ToString() + ",";
    }


}

<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700&display=fallback">
<!-- Font Awesome -->
<link rel="stylesheet" href="~/Content/theme/plugins/fontawesome-free/css/all.min.css">
<!-- daterange picker -->
<link rel="stylesheet" href="~/Content/theme/plugins/daterangepicker/daterangepicker.css">
<!-- DataTables -->
<link rel="stylesheet" href="~/Content/theme/plugins/datatables-bs4/css/dataTables.bootstrap4.min.css">
<link rel="stylesheet" href="~/Content/theme/plugins/datatables-responsive/css/responsive.bootstrap4.min.css">
<link rel="stylesheet" href="~/Content/theme/plugins/datatables-buttons/css/buttons.bootstrap4.min.css">
<link rel="stylesheet" href="~/Content/theme/plugins/multiple-select/dist/multiple-select.min.css" />
<link href="~/Content/theme/dist/css/adminlte.css" rel="stylesheet" />
<!-- dropdown search -->
<link href="https://unpkg.com/multiple-select@1.5.2/dist/multiple-select.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/jquery/dist/jquery.min.js"></script>
<script src="https://unpkg.com/multiple-select@1.5.2/dist/multiple-select.min.js"></script>
<style>
    .anychart-credits {
        display: none !important;
    }
</style>

<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
    <section class="content">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title text-center">Wind Power Curve</h3>
            </div>
            <div class="card-body">
                <div class="row">

                    <div class="col-md-4">
                        <div class="input-group row">
                            <label class="col-sm-3.1 col-form-label">Date Range :&nbsp;&nbsp;</label>
                            <div class="input-group-prepend">
                                <span class="input-group-text">
                                    <i class="far fa-calendar-alt"></i>
                                </span>
                            </div>
                            <input type="text" class="form-control float-right col-sm-6" id="daterange" name="daterange">
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <div class="row">
                                <label class="col-sm-2 col-form-label text-right">Site : </label>
                                <select class="form-control  col-sm-8" id="site" name="site[]" value="" onchange="GetWTG(true)" multiple></select>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-3">

                        <div class="form-group">
                            <div class="row">
                                <label class="col-sm-3 col-form-label text-right">WTG : </label>
                                <select class="form-control  col-sm-8" id="wtg" name="wtg[]" multiple></select>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div style="display: flex; flex-direction: row; justify-content: center; gap: 10%">
                            <button type="button" class="btn btn-block btn-primary" onclick="getReport()" style="margin-left:-5rem; width: 5rem;">Search</button>
                            <!--<button type="button" class="btn btn-block btn-danger" onclick="clearRecords()" style="margin-left:-5rem; width: 5rem;">Clear</button>-->
                        </div>
                    </div>
                    <div class="col-md-1"></div>
                </div>
                <br>
                <hr>
                <br>
                <div class="row">
                    <div class="col-md-1"></div>
                    <div class="col-sm-10">
                        <canvas id="scatterChart" style="min-height: 350px; height: 350px; max-height: 350px; max-width: 100%; width: 100%;"></canvas>

                    </div>
                    <div class="col-md-1"></div>
                </div>
                <hr>
                @*<div id="PowerCurveView" style="" class="PowerCurveView"></div>
                <div id="TMLView" style="" class="TMLView"></div>*@
                <div id="loader" class="loader  center" style="display:none"></div>
            </div>
        </div>
    </section>

</div>
<!-- /.content-wrapper -->
<script src="~/Content/theme/plugins/jquery/jquery.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.0/jquery.min.js"></script>

<!--Date Range -->
<script src="~/Content/theme/plugins/moment/moment.min.js"></script>
<script src="~/Content/theme/plugins/multiple-select/dist/multiple-select.min.js" defer></script>
<script src="~/Content/theme/plugins/inputmask/jquery.inputmask.min.js"></script>
<script src="~/Content/theme/plugins/daterangepicker/daterangepicker.js" defer></script>
<script src="~/Content/theme/plugins/bootstrap/js/bootstrap.bundle.min.js"></script>


<!-- DataTables  & Plugins -->
<script src="~/Content/theme/plugins/datatables/jquery.dataTables.min.js"></script>
<script src="~/Content/theme/plugins/datatables/jquery.dataTables.js" defer></script>
<script src="~/Content/theme/plugins/datatables-buttons/js/dataTables.buttons.min.js" defer></script>
<script src="~/Content/theme/plugins/jszip/jszip.min.js" defer></script>
<script src="~/Content/theme/plugins/datatables-buttons/js/buttons.html5.min.js" defer></script>
<script src="~/Content/theme/plugins/datatables-buttons/js/buttons.colVis.min.js" defer></script>
<script src="~/Content/theme/plugins/jszip/jszip.min.js" defer></script>
<script src="~/Content/theme/plugins/pdfmake/pdfmake.min.js" defer></script>
<script src="~/Content/theme/plugins/datatables-buttons/js/buttons.colVis.min.js" defer></script>
<script src="~/Content/theme/dist/js/comman.js"></script>
<script src="~/Content/theme/plugins/chart.js/Chart.min.js"></script>
<script src="~/Content/theme/plugins/multiple-select/dist/multiple-select.min.js" defer></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js@3.0.0/dist/chart.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@2.0.0-rc"></script>
<!--<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.5.0/Chart.min.js"></script>-->
<script src="https://cdn.anychart.com/releases/8.9.0/js/anychart-core.min.js"></script>
<script src="https://cdn.anychart.com/releases/8.9.0/js/anychart-waterfall.min.js"></script>
<script src="https://cdn.anychart.com/releases/8.7.1/js/anychart-base.min.js"></script>
<script src="https://cdn.anychart.com/releases/8.10.0/js/anychart-bundle.min.js"></script>
<script src="https://cdn.plot.ly/plotly-latest.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

@*------------------------------------------------------------------------------------------------------------------------------------------------*@
<script type="text/javascript">
    $(document).ready(function () {
        $('#daterange').daterangepicker(
            {
                maxDate: new Date(),
                locale: {
                    format: 'DD/MM/YYYY',
                }
            });

        $("#hide").click(function () {
            $("#chart").hide();
            $("#show").css('display', 'block');
        });
        $("#show").click(function () {
            $("chart").show();
            $("#hide").css('display', 'none');
        });

    });

    window.onload = function () {
        var state = "";
        var spv = "";
        var site_ids = "@Html.Raw(windSiteList.TrimEnd(','))";
        $.ajax({
            type: "POST",
            //url: "/WindReport/GetSiteList",
            url: '@Url.Action("GetSiteList", "WindReport")' + '?sitelist=' + site_ids,
            contentType: "application/json; charset=utf-8",
            // data: '{"state":"' + val + '"}',
            datatype: "html",
            success: function (result, status, xhr) {
                var options = "";
                for (var k = 0; k < result.length; k++) {
                    options += '<option value="' + result[k].site_master_id + '">' + result[k].site + '</option>';
                }
                $("#site").html(options);
                $('select#site').multipleSelect({
                    "minimumCountSelected": 1,
                    "placeholder": "Select Site(s)",
                    filter:true
                });
                GetWTG(false);
            }
        });
    }
    let pc_data = [];
    let tml_data = [];
    function getTmlData(site_id, fromDate, toDate, wtgs) {
        console.log(wtgs);
        $.ajax({
            type: "GET",
            url: '@Url.Action("GetWindTmlPowerCurveData", "WindReport")' + '?site='+ site_id + '&fromDate=' + fromDate + '&toDate=' + toDate + '&wtgs=' + wtgs,
            contentType: "application/json; charset=utf-8",
            datatype: "JSON",

            success: function (result, status, xhr) {
                //console.log(result);
                console.log("GetWindTmlData fetched successfully.");
                //document.getElementById("loader").style.display = 'none';

                if (result.length > 0) {
                    for (var i = 0; i < result.length; i++) {
                        tml_data.push({ x: result[i].avg_wind_speed, y: result[i].avg_active_power});
                    }
                }
                else {
                    alert("No Data in TML");
                }
                //var tbl = '<table id="example2" class="table table-bordered table-striped" style="">';
                //tbl += '<thead class="tbl-head"><tr>';
                //tbl += '<th>Date</th>';
                //tbl += '<th>Site</th>';
                //tbl += '<th>Wind Speed</th>';
                //tbl += '<th>Active Power</th>';
                //tbl += '</tr></thead>';

                if (result.length > 0) {
                    for (var i = 0; i < result.length; i++) {
                        //pc_data.clear();
                        pc_data.push({ x: result[i].wind_speed, y: result[i].active_power });
                        //tbl += '<tr>';
                        //tbl += '<td  class="text-center">' + result[i].date + '</td>';
                        //tbl += '<td  class="text-center">' + result[i].site + '</td>';
                        //tbl += '<td  class="text-center">' + result[i].avg_wind_speed + '</td>';
                        //tbl += '<td  class="text-center">' + result[i].avg_active_power + '</td>';
                        //tbl += '</tr>';
                    }
                }
                else {

                    // tbl += '<tr><th colspan="19" style="text-align:center">Data Not Available <th></tr>';
                }
                //tbl += '</table>';
                //// $("#PowerCurveView").html(tbl);
                //$("#TMLView").html("").html(tbl);
                //$('#example2').DataTable({
                //    dom: 'Bfrtip',
                //    responsive: false,
                //    lengthChange: false,
                //    autoWidth: true,
                //    paging: true,
                //    lengthChange: false,
                //    searching: true,
                //    ordering: true,
                //    info: true,
                //    autoWidth: true,
                //    responsive: false,
                //    pageLength: 50,
                //    buttons: [
                //        {
                //            extend: 'excel',
                //            title: 'TML Data',
                //            exportOptions: {
                //                columns: ':visible'
                //            }
                //        },
                //        {
                //            extend: 'csv',
                //            title: 'TML Data',
                //            exportOptions: {
                //                columns: ':visible'
                //            }
                //        },
                //        'colvis'
                //    ]
                //});
                //$(".dt-buttons").addClass('btn-group flex-wrap');
                //$(".dt-buttons > button").addClass('btn btn-secondary');
                //$(".dataTables_filter> label >input").addClass('form-control form-control-sm');
                //$('#example2').wrap("<div class='scrolledTable'></div>");
            }
        });
    }

    function getReport() {
        
        let site_id = "";
        var site = $('select#site option:selected').each(function () {
            site_id += $(this).val() + ",";
        });
        site_id = site_id != "" ? site_id.slice(0, -1) : site_id;
        if (site_id == "" || site_id == null) {
            alert("Please select site ");
            return false;
        }
        let wtg = "";
        $('select#wtg option:selected').each(function () {
            wtg += "'" + $(this).val() + "',";
        });
        wtg = wtg != "" ? wtg.slice(0, -1) : wtg;
        console.log(wtg);
        document.getElementById("loader").style.display = 'flex';
        console.log(site_id);
        var daterange = $('#daterange').val();
        var arr1 = new Array();
        arr1 = daterange.split("-");
        var fromDate = moment(arr1[0], 'DD/MM/YYYY').format('YYYY-MM-DD');
        var toDate = moment(arr1[1], 'DD/MM/YYYY').format('YYYY-MM-DD');

        getTmlData(site_id, fromDate, toDate, wtg);

        $.ajax({
            type: "GET",
            url: '@Url.Action("GetWindPowerCurveData", "WindReport")' + '?site='+ site_id + '&fromDate=' + fromDate + '&toDate=' + toDate,
            contentType: "application/json; charset=utf-8",
            datatype: "JSON",

            success: function (result, status, xhr) {
                //console.log(result);
                console.log("GetWindTmlData fetched successfully.");
                document.getElementById("loader").style.display = 'none';

                //var tbl = '<table id="example1" class="table table-bordered table-striped" style="">';
                //tbl += '<thead class="tbl-head"><tr>';
                //tbl += '<th  style="width: 10%;">Site</th>';
                //tbl += '<th>Wind Speed</th>';
                //tbl += '<th>Active Power</th>';
                //tbl += '</tr></thead>';

                if (result.length > 0) {
                    for (var i = 0; i < result.length; i++) {
                        pc_data.push({ x: result[i].wind_speed, y: result[i].active_power });
                        //tbl += '<tr>';
                        //tbl += '<td  class="text-center">' + result[i].site + '</td>';
                        //tbl += '<td  class="text-center">' + result[i].wind_speed + '</td>';
                        //tbl += '<td  class="text-center">' + result[i].active_power + '</td>';
                        //tbl += '</tr>';
                    }
                }
                else {

                    // tbl += '<tr><th colspan="19" style="text-align:center">Data Not Available <th></tr>';
                }
               // tbl += '</table>';
               //// $("#PowerCurveView").html(tbl);
               // $("#PowerCurveView").html("").html(tbl);
               // $('#example1').DataTable({
               //     dom: 'Bfrtip',
               //     responsive: false,
               //     lengthChange: false,
               //     autoWidth: true,
               //     paging: true,
               //     lengthChange: false,
               //     searching: true,
               //     ordering: true,
               //     info: true,
               //     autoWidth: true,
               //     responsive: false,
               //     pageLength: 50,
               //     buttons: [
               //         {
               //             extend: 'excel',
               //             title: 'Wind Power Curve',
               //             exportOptions: {
               //                 columns: ':visible'
               //             }
               //         },
               //         {
               //             extend: 'csv',
               //             title: 'Wind Power Curve',
               //             exportOptions: {
               //                 columns: ':visible'
               //             }
               //         },
               //         'colvis'
               //     ]
               // });
               // $(".dt-buttons").addClass('btn-group flex-wrap');
               // $(".dt-buttons > button").addClass('btn btn-secondary');
               // $(".dataTables_filter> label >input").addClass('form-control form-control-sm');
               // $('#example1').wrap("<div class='scrolledTable'></div>");

                createChart();
            }
        });
    }

    function createChart() {
        console.log("arrays : -");
        //console.log(pc_data);
        //console.log(tml_data);

        var ctx = document.getElementById('scatterChart').getContext('2d');
        var scatterChart = new Chart(ctx, {
            type: 'scatter',
            data: {
                datasets: [
                    {
                        label: 'Power',
                        data: pc_data,
                    },
                    {
                        label: 'AW',
                        data: tml_data,
                    }
                ]
            },
            options: {
                //responsive: true,
                //maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: 'bottom',
                        display: true,
                    }
                },
                scales: {
                    //y: {
                    //    suggestedMin: 0
                    //}

                    x: {
                        min: 0,         // Start at 1
                        max: 20,
                        ticks: {       
                            stepSize: 1     // Increment by 1
                        }
                    },

                    y: {
                        min: 0,
                        ticks: {
                            beginAtZero: true,
                            stepSize: 100
                        }
                    }
                }
            }
        });
    }

    function GetWTG(fliterVal) {
        let siteid = "";
        //$('select#site option:selected').each(function () {
        //    siteid += $(this).val() + ",";
        //});
        //siteid = siteid != "" ? siteid.slice(0, -1) : siteid;

         if (fliterVal == false) {
             siteid = "@Html.Raw(windSiteList.TrimEnd(','))";
            }
            else {
             $('select#site option:selected').each(function () {
                 siteid += $(this).val() + ",";
                 });
                siteid = siteid != "" ? siteid.slice(0, -1) : siteid;
            }
        $.ajax({
            type: "GET",
            url: '@Url.Action("GetWTGList", "WindReport")' + '?siteid=' + siteid,
            contentType: "application/json; charset=utf-8",
            // data: '{"state":"' + val + '"}',
            datatype: "html",
            success: function (result, status, xhr) {
                var options = "";
                for (var k = 0; k < result.length; k++) {
                    options += '<option value="' + result[k].wtg + '">' + result[k].wtg + '</option>';
                }
                $("#wtg").multipleSelect('destroy');
                $("#wtg").html("").html(options);
                $('select#wtg').multipleSelect({
                    "minimumCountSelected": 2,
                    "placeholder": "Select WTG(s)",
                    filter:true
                });

            }
        });
    }

    var data = [];
    @*function getChartData(site_id, fromDate, toDate) {
        var expected_final = 0.0;
        var lineloss_final = 0.0;
        var target_final = 0.0;
        var lossUSMH_final = 0.0;
        var lossSMH_final = 0.0;
        var lossNC_final = 0.0;
        var lossIGBD_final = 0.0;
        var lossEGBD_final = 0.0;
        var lossLULL_final = 0.0;
        var lossPCD_final = 0.0;
        var actual_final = 0.0;
        console.log("Inside getChartData function.");
        $.ajax({
            type: "GET",
            url: '@Url.Action("GetWindTMLGraphData", "WindView")' + '?site='+ site_id + '&fromDate=' + fromDate + '&toDate=' + toDate,
            contentType: "application/json; charset=utf-8",
            datatype: "JSON",

            success: function (result, status, xhr) {
                console.log(result);
                document.getElementById("loader").style.display = 'none';

                if (result.length > 0) {
                    for (var i = 0; i < result.length; i++) {
                        console.log("Expected : ", result[i].expected_final);
                        console.log("LineLoss : ", result[i].lineloss_final);
                        console.log("Target : ",result[i].target_final);
                        console.log("USHM : ",result[i].lossUSMH_final);
                        console.log("SMH : ",result[i].lossSMH_final);
                        console.log("NC : ",result[i].lossNC_final);
                        console.log("IGBD : ",result[i].lossIGBD_final);
                        console.log("EGBD : ",result[i].lossLULL_final);
                        console.log("LULL : ",result[i].lossPCD_final);
                        console.log("Actual : ",result[i].actual_final);

                        expected_final = result[i].expected_final;
                        lineloss_final = result[i].lineloss_final;
                        target_final = result[i].target_final /1000000;
                        lossUSMH_final = result[i].lossUSMH_final;
                        lossSMH_final = result[i].lossSMH_final;
                        lossNC_final = result[i].lossNC_final;
                        lossIGBD_final = result[i].lossIGBD_final;
                        lossEGBD_final = result[i].lossEGBD_final;
                        lossLULL_final = result[i].lossLULL_final;
                        lossPCD_final = result[i].lossPCD_final;
                        actual_final = result[i].actual_final;

                        console.log("-------------------------------------------");
                        console.log("Expected : ", expected_final);
                        console.log("LineLoss : ", lineloss_final);
                        console.log("Target : ", target_final);
                        console.log("USHM : ", lossUSMH_final);
                        console.log("SMH : ", lossSMH_final);
                        console.log("NC : ", lossNC_final);
                        console.log("IGBD : ", lossIGBD_final);
                        console.log("EGBD : ", lossEGBD_final);
                        console.log("LULL : ", lossLULL_final);
                        console.log("PCD : ", lossPCD_final);
                        console.log("Actual : ", actual_final);
                        data = [
                            { x: 'Target', value: target_final.toFixed(1) },
                            { x: 'Expected', value: expected_final.toFixed(1) },
                            { x: 'USMH', value: lossUSMH_final.toFixed(1) },
                            { x: 'SMH', value: lossSMH_final.toFixed(1) },
                            { x: 'Other', value: lossNC_final.toFixed(1) },
                            { x: 'IGBD', value: lossIGBD_final.toFixed(1) },
                            { x: 'EGBD', value: lossEGBD_final.toFixed(1) },
                            { x: 'LULL', value: lossLULL_final.toFixed(1) },
                            { x: 'PCD', value: lossPCD_final.toFixed(1) },
                            { x: 'LineLoss', value: lineloss_final.toFixed(1) },
                            { x: 'Actual', value: actual_final.toFixed(1) },
                        ];
                    }
                }
                else {

                    // tbl += '<tr><th colspan="19" style="text-align:center">Data Not Available <th></tr>';
                }
            }
        });


        console.log("target : ", target_final, " Expected : ", expected_final, " USMH : ", lossUSMH_final, " SMH : ", lossSMH_final, " Other ", lossNC_final, " IGBD : " + lossIGBD_final, " EGBD : ", lossEGBD_final, " LULL : ", lossLULL_final, " PCD : ", lossPCD_final, "Lineloss : ", lineloss_final, " Actual : ", actual_final);
        monthlychart(data);
    }*@

    function monthlychart(data) {
        console.log("Inside Monthly chart function and data received is : " + data + " hello : " + data[0]);
        let chartStatus = Chart.getChart("Waterfall"); // <canvas> id
        if (chartStatus != undefined) {
            chartStatus.destroy();
        }
        anychart.onDocumentReady(function () {
            //create a waterfall chart with the data
        var dataRef = [
            { x: "Starting Value", value: 100 },
            { x: "Positive 1", value: 50 },
            { x: "Positive 2", value: 20 },
            { x: "Negative 1", value: -30 },
            { x: "Negative 2", value: -40 },
            { x: "Ending Value", value: 100 }
        ];
            var chart = anychart.waterfall();
            //set the chart title
            chart.title('TML Data');
            //legend disabled
            chart.legend(false);
            //tooltips disabled
            chart.tooltip(false);
            chart.yScale().minimum(0);
            chart.yScale().maximum(200);
            // create a series and set the data
            var chart = anychart.waterfall(data, { base: 0 });
            var series = chart.waterfall(dataRef);
            // set color
            //series.normal().relative(0, 0);
            //series.normal().risingRelativeToPrevious(false);
            //series.normal().risingRelativeTo(0,0);
            //series.normal().relativeStart(0).relativeEnd(0);
            series.rising('relative');
            series.normal().fill('#77CAE7');
            series.normal().hatchFill('forward-diagonal', '#77CAE7');

            // second, falling columns
            series.normal().fallingFill('#EE403D');
            series.normal().fallingStroke('#EE403D');

            // third, rising columns
            series.normal().risingFill('#77CAE7');
            series.normal().risingStroke('#77CAE7');

            chart.container('Waterfall');

            //draw the resulting chart
            chart.draw();
        });
    }

    /*
    function monthlychart(data) {
        console.log("Inside Monthly chart function and data received is : ", data);
        var dataRef = [
            { x: "Starting Value", value: 100 },
            { x: "Positive 1", value: 50 },
            { x: "Positive 2", value: 20 },
            { x: "Negative 1", value: -30 },
            { x: "Negative 2", value: -40 },
            { x: "Ending Value", value: 100 }
        ];
        let chartStatus = Chart.getChart("Waterfall"); // <canvas> id

        if (chartStatus != undefined) {
            chartStatus.destroy();
        }

        anychart.onDocumentReady(function () {
            // create a waterfall chart with the data
            var chart = anychart.waterfall(dataRef);

            // set chart title, legend, and tooltip
            chart.title('TML Data');
            chart.legend(false);
            chart.tooltip(false);
            var series = chart.waterfall(dataRef);
            // set fill and stroke colors for rising and falling columns
            series.normal().fill('#77CAE7');
            series.normal().hatchFill('forward-diagonal', '#77CAE7');
            series.fallingFill('#EE403D');
            series.fallingStroke('#EE403D');
            series.risingFill('#77CAE7');
            series.risingStroke('#77CAE7');

            // set the chart container
            chart.container('Waterfall');

            // draw the chart
            chart.draw();
        });
    }
    */

    function clearRecords() {
        console.log("Inside clear onclick function.");
        var table = document.getElementById("example1");
        table.innerHTML = "";

        const dataTable = $('#example1').DataTable();

        // clear the DataTable
        dataTable.clear().draw();
    }


</script>




