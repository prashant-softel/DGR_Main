@using Newtonsoft.Json;
@using Microsoft.AspNetCore.Http;
@inject IHttpContextAccessor HttpContextAccessor
@model DGRA_V1.Models.DailyGenSummary

@{
    ViewData["Title"] = "Solar Gen Summary";
}
@{
    string solarSiteList = "";

    var usermodel = JsonConvert.DeserializeObject<UserAccess>(@HttpContextAccessor.HttpContext.Session.GetString("UserAccess"));

}
@for (int i = 0; i < @usermodel.access_list.Count; i++)
{

    if (@usermodel.access_list[i].page_type == 3 && @usermodel.access_list[i].site_type == 2)
    {
        solarSiteList += @usermodel.access_list[i].identity.ToString() + ",";
    }


}

<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700&display=fallback">
<!-- Font Awesome -->
<link rel="stylesheet" href="~/Content/theme/plugins/fontawesome-free/css/all.min.css">
<!-- daterange picker -->
<link rel="stylesheet" href="~/Content/theme/plugins/daterangepicker/daterangepicker.css">
<!-- DataTables set -->
<link rel="stylesheet" href="~/Content/theme/plugins/datatables-bs4/css/dataTables.bootstrap4.min.css">
<link rel="stylesheet" href="~/Content/theme/plugins/datatables-responsive/css/responsive.bootstrap4.min.css">
<link rel="stylesheet" href="https://cdn.datatables.net/fixedcolumns/4.3.0/css/fixedColumns.dataTables.min.css" />
<link rel="stylesheet" href="~/Content/theme/plugins/datatables-buttons/css/buttons.bootstrap4.min.css">
<link rel="stylesheet" href="~/Content/theme/plugins/multiple-select/dist/multiple-select.min.css" />
<!--<link href="~/Content/theme/plugins/datatables/fixedHeader.dataTables.min.css" rel="stylesheet" />-->
<link href="~/Content/theme/dist/css/adminlte.css" rel="stylesheet" />
<!-- dropdown search -->
<link href="https://unpkg.com/multiple-select@1.5.2/dist/multiple-select.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/jquery/dist/jquery.min.js"></script>
<script src="https://unpkg.com/multiple-select@1.5.2/dist/multiple-select.min.js"></script>

@*<style>
        .tbodydata {
            font-size: 12px;
        }

        .theaddata {
            font-size: 12px;
            font-weight: bold;
        }
    </style>*@
@*<style>
    .dataTables_scrollBody {
        margin-top: -8px;
    }
    .scrolledTable > table > thead > tr {
        visibility: collapse;
        height: 0px !important;
    }
    </style>*@
<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
    <section class="content-header">
    </section>
    <section class="content">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title text-center">Solar Generation Summary</h3>
            </div>
            <div class="card-body">
                <div class="row" >
                    <div class="col-md-4">
                        <div class="input-group row">
                            <label class="col-sm-4 col-form-label text-right">Date Range : </label>
                            <div class="input-group-prepend">
                                <span class="input-group-text">
                                    <i class="far fa-calendar-alt"></i>
                                </span>
                            </div>
                            <input type="text" class="form-control float-right col-sm-6" id="daterange" name="daterange">
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <div class="row">
                                <label class="col-sm-2 col-form-label text-rigth">Site : </label>
                                <select class="form-control  col-sm-9" id="site" name="site[]" multiple>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-1"></div>
                    <div class="col-md-2">
                        <button type="button" class="btn btn-block btn-primary" onclick="getReport()" style="margin-left:-5rem; width: 5rem;">Search</button>
                    </div>
                    <div class="col-md-1"></div>
                </div>

                <hr>
                <div id="DailyGenView" style="overflow-x: auto;" class="DailyGenView"></div>
                <div id="loader" class="loader  center" style="display:none"></div>
            </div>
        </div>
    </section>

</div>
<!-- /.content-wrapper -->
<script src="~/Content/theme/plugins/jquery/jquery.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.0/jquery.min.js"></script>

<!--Date Range -->
<script src="~/Content/theme/plugins/moment/moment.min.js"></script>
<script src="~/Content/theme/plugins/multiple-select/dist/multiple-select.min.js" defer></script>
<script src="~/Content/theme/plugins/inputmask/jquery.inputmask.min.js"></script>
<script src="~/Content/theme/plugins/daterangepicker/daterangepicker.js" defer></script>
<script src="~/Content/theme/plugins/bootstrap/js/bootstrap.bundle.min.js"></script>


<!-- DataTables  & Plugins -->
<script src="~/Content/theme/plugins/datatables/jquery.dataTables.min.js"></script>
<script src="~/Content/theme/plugins/datatables/jquery.dataTables.js" defer></script>
<script src="~/Content/theme/plugins/datatables/dataTables.fixedHeader.min.js" defer></script>
<script src="https://cdn.datatables.net/fixedcolumns/4.3.0/js/dataTables.fixedColumns.min.js" defer></script>
<script src="~/Content/theme/plugins/datatables-buttons/js/dataTables.buttons.min.js" defer></script>
<script src="~/Content/theme/plugins/jszip/jszip.min.js" defer></script>
<script src="~/Content/theme/plugins/datatables-buttons/js/buttons.html5.min.js" defer></script>
<script src="~/Content/theme/plugins/datatables-buttons/js/buttons.colVis.min.js" defer></script>
<script src="~/Content/theme/plugins/jszip/jszip.min.js" defer></script>
<script src="~/Content/theme/plugins/pdfmake/pdfmake.min.js" defer></script>
<script src="~/Content/theme/plugins/datatables-buttons/js/buttons.colVis.min.js" defer></script>
<!--<script src="~/Content/theme/plugins/datatables/dataTables.fixedHeader.min.js" defer></script>-->
<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.5/xlsx.full.min.js"></script>
@*------------------------------------------------------------------------------------------------------------------------------------------------*@
<script type="text/javascript">
    var userIdFromSession = "@Html.Raw(@HttpContextAccessor.HttpContext.Session.GetString("userid"))";
    var userRoles = "@Html.Raw(@HttpContextAccessor.HttpContext.Session.GetString("role"))";
    var isAdmin = 0;
    if (userRoles == "Admin") {
        isAdmin = 1;
    }
    const columnMap = {};
    const userColumnId = [];

    var exceldata;
    $(document).ready(function () {
        $('#daterange').daterangepicker(
            {
                maxDate: new Date(),
                locale: {
                    format: 'DD/MM/YYYY',
                }
            });
    });
    window.onload = function () {
        console.log("User Id from session" + userIdFromSession);
        getPageColumns();
        getUserGroupColumns();
        var state = "";
        var spv = "";
        var site_ids = "@Html.Raw(solarSiteList.TrimEnd(','))";
        $.ajax({
            type: "POST",
            //url: "/WindReport/GetSiteList",
            url: '@Url.Action("GetSiteList", "SolarReport")' + '?sitelist=' + site_ids,
            contentType: "application/json; charset=utf-8",
            // data: '{"state":"' + val + '"}',
            datatype: "html",
            success: function (result, status, xhr) {
                var options = "";
                for (var k = 0; k < result.length; k++) {
                    options += '<option value="' + result[k].site_master_solar_id + '">' + result[k].site + '</option>';
                }
                $("#site").html(options);
                $('select#site').multipleSelect({
                    "minimumCountSelected": 2,
                    "placeholder": "Select Site(s)",
                    filter:true
                });
            }

        });
    }
    function getPageColumns() {
        $.ajax({
        type: "GET",
       // url: "/WindReport/GetSiteMaster",
          url: '@Url.Action("GetPageColumns", "Home")' + '?page_id=13',
        contentType: "application/json; charset=utf-8",
        //data: '{"countryname":"' + selcountry + '"}',
        datatype: "html",
        success: function (result, status, xhr) {
            if (result.length > 0) {
                console.log(result);
                result.forEach(item => {
                    columnMap[item.column_name] = [item.column_id, item.required];
                });
                console.log(columnMap);
                console.log(columnMap["Country"], " : ", columnMap["Country"][0], "  :  ", columnMap["Country"][1]);
            }
            else {
            }
        }
    });
    }
    function getUserGroupColumns() {
        $.ajax({
        type: "GET",
            // url: "/WindReport/GetSiteMaster",
            url: '@Url.Action("GetUserGroupColumns", "Home")' + '?page_id=13&userId=' + userIdFromSession,
        contentType: "application/json; charset=utf-8",
        //data: '{"countryname":"' + selcountry + '"}',
        datatype: "html",
        success: function (result, status, xhr) {
            if (result.length > 0) {
                console.log(result);
                result.forEach(item => {
                    userColumnId.push(item.column_id);
                });
                console.log(userColumnId);
            }
            else {
            }
        }
    });
    }

    function exportToExcel() {

        console.log(exceldata)
        result = exceldata;

        var columns = [
            "Date", "State", "Site","Inverter", "GHI", "POA",
            "Expected_kwh", "INV_kwh", "Plant_kwh", "INV_PR (%)",
            "Plant_PR (%)", "MA(%)", "IGA(%)", "EGA_A (%)",
            "EGA_B (%)", "EGA_C (%)", "INV_PLF_AC (%)", "PLANT_PLF_AC (%)","PI","Pro_hrs","Lull_hrs",
            "USMH", "SMH", "others", "IGBDH","EGDBH","LS","Total_BD_hrs","USMH_Loss","SMH_Loss","Others_Loss",
            "IGBDH_Loss", "EGBDH_Loss", "LS_Loss", "Total_Losses"
        ];

        var rows = [];

        for (var i = 0; i < result.length; i++) {
            var row = [];
            var formattedDate = moment(result[i].date, 'YYYY/MM/DD').format('DD-MM-YYYY');
            row.push(formattedDate);
            row.push(result[i].state);
            row.push(result[i].site);
            row.push(result[i].location_name);
            row.push(result[i].ghi);
            row.push(result[i].poa);
            row.push(result[i].expected_kwh);
            row.push(result[i].inv_kwh);
            row.push(result[i].plant_kwh);
            row.push(result[i].inv_pr);
            row.push(result[i].plant_pr);
            row.push(result[i].ma);
            row.push(result[i].iga);
            row.push(result[i].ega);
            row.push(result[i].ega_b);
            row.push(result[i].ega_c);
            row.push(result[i].inv_plf_ac);
            row.push(result[i].plant_plf_ac);
            row.push(result[i].pi);
            row.push(result[i].prod_hrs);
            row.push(result[i].lull_hrs_bd);
            row.push(result[i].usmh_bs);
            row.push(result[i].smh_bd);
            row.push(result[i].oh_bd);
            row.push(result[i].igbdh_bd);
            row.push(result[i].egbdh_bd);
            row.push(result[i].load_shedding_bd);
            row.push(result[i].total_bd_hrs);
            row.push(result[i].usmh);
            row.push(result[i].smh);
            row.push(result[i].oh);
            row.push(result[i].igbdh);
            row.push(result[i].egbdh);
            row.push(result[i].load_shedding);
            row.push(result[i].total_losses);
            rows.push(row);
        }

        var data = [columns].concat(rows);

        var ws = XLSX.utils.aoa_to_sheet(data);
        var wb = XLSX.utils.book_new();
        XLSX.utils.book_append_sheet(wb, ws, "Solar Generation Summary");
        var wbout = XLSX.write(wb, { bookType: 'xlsx', type: 'binary' });

        function s2ab(s) {
            var buf = new ArrayBuffer(s.length);
            var view = new Uint8Array(buf);
            for (var i = 0; i !== s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;
            return buf;
        }

        saveAs(new Blob([s2ab(wbout)], { type: "application/octet-stream" }), "Solar Generation Summary.xlsx");

    }


    function getReport() {

        let site_id = "";
        var site = $('select#site option:selected').each(function () {
            site_id += $(this).val() + ",";
        });
        site_id = site_id != "" ? site_id.slice(0, -1) : site_id;
        if (site_id == "" || site_id == null) {
            alert("Please select site ");
            return false;
        }
        document.getElementById("loader").style.display = 'flex';
        console.log(site_id);
        var daterange = $('#daterange').val();
        var arr1 = new Array();
        arr1 = daterange.split("-");
        var fromDate = moment(arr1[0], 'DD/MM/YYYY').format('YYYY-MM-DD');
        var toDate = moment(arr1[1], 'DD/MM/YYYY').format('YYYY-MM-DD');

        $.ajax({
            type: "GET",
            url: '@Url.Action("SolarGenView", "SolarView")' + '?site='+ site_id + '&fromDate=' + fromDate + '&toDate=' + toDate,
            contentType: "application/json; charset=utf-8",
            datatype: "JSON",
            success: function (result, status, xhr) {
                console.log(result);
                var tbl = '<table id="example1" class="table table-bordered table-striped" style="width: 230%;">';
                tbl += '<thead class="tbl-head"><tr>';
                if (userColumnId.includes(columnMap["Date"][0]) || columnMap["Date"][1] == 1 || isAdmin == 1) {
                    tbl += '<th>Date</th>';
                    
                }
                if (userColumnId.includes(columnMap["State"][0]) || columnMap["State"][1] == 1 || isAdmin == 1) {
                    tbl += '<th>State</th>';
                    
                }
                if (userColumnId.includes(columnMap["Site"][0]) || columnMap["Site"][1] == 1 || isAdmin == 1) {
                    tbl += '<th>Site</th>';
                    
                }
                if (userColumnId.includes(columnMap["Inverter"][0]) || columnMap["Inverter"][1] == 1 || isAdmin == 1) {
                    tbl += '<th>Inverter</th>';
                    
                }
                if (userColumnId.includes(columnMap["GHI"][0]) || columnMap["GHI"][1] == 1 || isAdmin == 1) {
                    tbl += '<th>GHI</th>';
                    
                }
                if (userColumnId.includes(columnMap["POA"][0]) || columnMap["POA"][1] == 1 || isAdmin == 1) {
                    tbl += '<th>POA</th>';
                    
                }
                if (userColumnId.includes(columnMap["Expected_Kwh"][0]) || columnMap["Expected_Kwh"][1] == 1 || isAdmin == 1) {
                    tbl += '<th>Expected_kWh</th>';
                    
                }
                if (userColumnId.includes(columnMap["INV_Kwh"][0]) || columnMap["INV_Kwh"][1] == 1 || isAdmin == 1) {
                    tbl += '<th>INV_kWh</th>';
                    
                }
                if (userColumnId.includes(columnMap["Plant_Kwh"][0]) || columnMap["Plant_Kwh"][1] == 1 || isAdmin == 1) {
                    tbl += '<th>Plant_kWh</th>';
                    
                }
                if (userColumnId.includes(columnMap["INV_PR"][0]) || columnMap["INV_PR"][1] == 1 || isAdmin == 1) {
                    tbl += '<th>INV_PR<br>(%)</th>';
                    
                }
                if (userColumnId.includes(columnMap["Plant_PR"][0]) || columnMap["Plant_PR"][1] == 1 || isAdmin == 1) {
                    tbl += '<th>Plant_PR<br>(%)</th>';
                    
                }
                if (userColumnId.includes(columnMap["MA"][0]) || columnMap["MA"][1] == 1 || isAdmin == 1) {
                    tbl += '<th>MA<br>(%)</th>';
                    
                }
                if (userColumnId.includes(columnMap["IGA"][0]) || columnMap["IGA"][1] == 1 || isAdmin == 1) {
                    tbl += '<th>IGA<br>(%)</th>';
                    
                }
                if (userColumnId.includes(columnMap["EGA_A"][0]) || columnMap["EGA_A"][1] == 1 || isAdmin == 1) {
                    tbl += '<th>EGA_A<br>(%) <span class="information">i<span></th>';
                    
                }
                if (userColumnId.includes(columnMap["EGA_B"][0]) || columnMap["EGA_B"][1] == 1 || isAdmin == 1) {
                    tbl += '<th>EGA_B<br>(%) <span class="information">i<span></th>';
                    
                }
                if (userColumnId.includes(columnMap["EGA_C"][0]) || columnMap["EGA_C"][1] == 1 || isAdmin == 1) {
                    tbl += '<th>EGA_C<br>(%) <span class="information">i<span></th>';
                    
                }
                if (userColumnId.includes(columnMap["INV_PLF_AC"][0]) || columnMap["INV_PLF_AC"][1] == 1 || isAdmin == 1) {
                    tbl += '<th>INV_PLF_AC<br>(%)</th>';
                    
                }
                if (userColumnId.includes(columnMap["Plant_PLF_AC"][0]) || columnMap["Plant_PLF_AC"][1] == 1 || isAdmin == 1) {
                    tbl += '<th>Plant_PLF_AC<br>(%)</th>';
                    
                }
                if (userColumnId.includes(columnMap["PI"][0]) || columnMap["PI"][1] == 1 || isAdmin == 1) {
                    tbl += '<th>PI</th>';
                    
                }
                if (userColumnId.includes(columnMap["Pro_hrs"][0]) || columnMap["Pro_hrs"][1] == 1 || isAdmin == 1) {
                    tbl += '<th>Pro_hrs</th>';
                    
                }
                if (userColumnId.includes(columnMap["Lull_hrs"][0]) || columnMap["Lull_hrs"][1] == 1 || isAdmin == 1) {
                    tbl += '<th>Lull_hrs</th>';
                    
                }
                if (userColumnId.includes(columnMap["USMH"][0]) || columnMap["USMH"][1] == 1 || isAdmin == 1) {
                    tbl += '<th>USMH</th>';
                    
                }
                if (userColumnId.includes(columnMap["SMH"][0]) || columnMap["SMH"][1] == 1 || isAdmin == 1) {
                    tbl += '<th>SMH</th>';
                }
                if (userColumnId.includes(columnMap["Others"][0]) || columnMap["Others"][1] == 1 || isAdmin == 1) {
                    tbl += '<th>Others</th>';
                }
                if (userColumnId.includes(columnMap["IGBDH"][0]) || columnMap["IGBDH"][1] == 1 || isAdmin == 1) {
                    tbl += '<th>IGBDH</th>';
                    
                }
                if (userColumnId.includes(columnMap["EGBDH"][0]) || columnMap["EGBDH"][1] == 1 || isAdmin == 1) {
                    tbl += '<th>EGBDH</th>';
                    
                }
                if (userColumnId.includes(columnMap["LS"][0]) || columnMap["LS"][1] == 1 || isAdmin == 1) {
                    tbl += '<th>LS</th>';
                    
                }
                if (userColumnId.includes(columnMap["Total_BD_Hrs"][0]) || columnMap["Total_BD_Hrs"][1] == 1 || isAdmin == 1) {
                    tbl += '<th>Total_BD_Hrs</th>';
                    
                }
                if (userColumnId.includes(columnMap["USMH_Loss"][0]) || columnMap["USMH_Loss"][1] == 1 || isAdmin == 1) {
                    tbl += '<th>USMH_Loss</th>';
                    
                }
                if (userColumnId.includes(columnMap["SMH_Loss"][0]) || columnMap["SMH_Loss"][1] == 1 || isAdmin == 1) {
                    tbl += '<th>SMH_Loss</th>';
                    
                }
                if (userColumnId.includes(columnMap["Others_Loss"][0]) || columnMap["Others_Loss"][1] == 1 || isAdmin == 1) {
                    tbl += '<th>Others_Loss</th>';
                    
                }
                if (userColumnId.includes(columnMap["IGBDH_Loss"][0]) || columnMap["IGBDH_Loss"][1] == 1 || isAdmin == 1) {
                    tbl += '<th>IGBDH_Loss</th>';
                    
                }
                if (userColumnId.includes(columnMap["EGBDH_Loss"][0]) || columnMap["EGBDH_Loss"][1] == 1 || isAdmin == 1) {
                    tbl += '<th>EGBDH_Loss</th>';
                    
                }
                if (userColumnId.includes(columnMap["LS_Loss"][0]) || columnMap["LS_Loss"][1] == 1 || isAdmin == 1) {
                    tbl += '<th>LS_Loss</th>';
                    
                }
                if (userColumnId.includes(columnMap["Total_Loss"][0]) || columnMap["Total_Loss"][1] == 1 || isAdmin == 1) {
                    tbl += '<th>Total_Losses</th>';
                }
                tbl += '</tr></thead>';

                if (result.length > 0) {
                    exceldata = result;
                    for (var i = 0; i < result.length; i++) {

                        //var tempDate = new Date(result[i].date);
                        //var formattedDate = [tempDate.getDate(), tempDate.getMonth() + 1, tempDate.getFullYear()].join('-');
                        var formattedDate = moment(result[i].date, 'YYYY/MM/DD').format('DD-MM-YYYY');
                        tbl += '<tr>';
                        if (userColumnId.includes(columnMap["Date"][0]) || columnMap["Date"][1] == 1 || isAdmin == 1) {
                            tbl += '<td  class="text-left" style="text-wrap: nowrap;">' + formattedDate + '</td>';
                        }
                        if (userColumnId.includes(columnMap["State"][0]) || columnMap["State"][1] == 1 || isAdmin == 1) {
                            tbl += '<td  class="text-left">' + result[i].state + '</td>';                            
                        }
                        if (userColumnId.includes(columnMap["Site"][0]) || columnMap["Site"][1] == 1 || isAdmin == 1) {
                            tbl += '<td  class="text-left">' + result[i].site + '</td>';                            
                        }
                        if (userColumnId.includes(columnMap["Inverter"][0]) || columnMap["Inverter"][1] == 1 || isAdmin == 1) {
                            tbl += '<td  class="text-left"  style="text-wrap: nowrap;">' + result[i].location_name + '</td>';                            
                        }
                        if (userColumnId.includes(columnMap["GHI"][0]) || columnMap["GHI"][1] == 1 || isAdmin == 1) {
                            tbl += '<td class="text-right">' + result[i].ghi.toFixed(2) + '</td>';                            
                        }
                        if (userColumnId.includes(columnMap["POA"][0]) || columnMap["POA"][1] == 1 || isAdmin == 1) {
                            tbl += '<td class="text-right">' + result[i].poa.toFixed(2) + '</td>';                            
                        }
                        if (userColumnId.includes(columnMap["Expected_Kwh"][0]) || columnMap["Expected_Kwh"][1] == 1 || isAdmin == 1) {
                            tbl += '<td class="text-right">' + result[i].expected_kwh.toFixed(2) + '</td>';                            
                        }
                        if (userColumnId.includes(columnMap["INV_Kwh"][0]) || columnMap["INV_Kwh"][1] == 1 || isAdmin == 1) {
                            tbl += '<td class="text-right">' + result[i].inv_kwh.toFixed(2) + '</td>';                            
                        }
                        if (userColumnId.includes(columnMap["Plant_Kwh"][0]) || columnMap["Plant_Kwh"][1] == 1 || isAdmin == 1) {
                            tbl += '<td class="text-right">' + result[i].plant_kwh.toFixed(2) + '</td>';                            
                        }
                        if (userColumnId.includes(columnMap["INV_PR"][0]) || columnMap["INV_PR"][1] == 1 || isAdmin == 1) {
                            tbl += '<td class="text-right">' + result[i].inv_pr.toFixed(2) + '</td>';                            
                        }
                        if (userColumnId.includes(columnMap["Plant_PR"][0]) || columnMap["Plant_PR"][1] == 1 || isAdmin == 1) {
                            tbl += '<td class="text-right">' + result[i].plant_pr.toFixed(2) + '</td>';                            
                        }
                        if (userColumnId.includes(columnMap["MA"][0]) || columnMap["MA"][1] == 1 || isAdmin == 1) {
                            tbl += '<td class="text-right">' + result[i].ma.toFixed(2) + '</td>';                            
                        }
                        if (userColumnId.includes(columnMap["IGA"][0]) || columnMap["IGA"][1] == 1 || isAdmin == 1) {
                            tbl += '<td class="text-right">' + result[i].iga.toFixed(2) + '</td>';                            
                        }
                        if (userColumnId.includes(columnMap["EGA_A"][0]) || columnMap["EGA_A"][1] == 1 || isAdmin == 1) {
                            tbl += '<td class="text-right">' + result[i].ega.toFixed(2) + '</td>';                            
                        }
                        if (userColumnId.includes(columnMap["EGA_B"][0]) || columnMap["EGA_B"][1] == 1 || isAdmin == 1) {
                            tbl += '<td class="text-right">' + result[i].ega_b.toFixed(2) + '</td>';                            
                        }
                        if (userColumnId.includes(columnMap["EGA_C"][0]) || columnMap["EGA_C"][1] == 1 || isAdmin == 1) {
                            tbl += '<td class="text-right">' + result[i].ega_c.toFixed(2) + '</td>';                            
                        }
                        if (userColumnId.includes(columnMap["INV_PLF_AC"][0]) || columnMap["INV_PLF_AC"][1] == 1 || isAdmin == 1) {
                            tbl += '<td class="text-right">' + result[i].inv_plf_ac.toFixed(2) + '</td>';                            
                        }
                        if (userColumnId.includes(columnMap["Plant_PLF_AC"][0]) || columnMap["Plant_PLF_AC"][1] == 1 || isAdmin == 1) {
                            tbl += '<td class="text-right">' + result[i].plant_plf_ac.toFixed(2) + '</td>';                            
                        }
                        if (userColumnId.includes(columnMap["PI"][0]) || columnMap["PI"][1] == 1 || isAdmin == 1) {
                            tbl += '<td class="text-right">' + result[i].pi + '</td>';
                        }
                        if (userColumnId.includes(columnMap["Pro_hrs"][0]) || columnMap["Pro_hrs"][1] == 1 || isAdmin == 1) {
                            tbl += '<td class="text-right">' + result[i].prod_hrs.toFixed(2) + '</td>';                            
                        }
                        if (userColumnId.includes(columnMap["Lull_hrs"][0]) || columnMap["Lull_hrs"][1] == 1 || isAdmin == 1) {
                            tbl += '<td class="text-right">' + result[i].lull_hrs_bd.toFixed(2) + '</td>';
                        }
                        if (userColumnId.includes(columnMap["USMH"][0]) || columnMap["USMH"][1] == 1 || isAdmin == 1) {
                            tbl += '<td class="text-right">' + result[i].usmh_bs.toFixed(2) + '</td>';
                        }
                        if (userColumnId.includes(columnMap["SMH"][0]) || columnMap["SMH"][1] == 1 || isAdmin == 1) {
                            tbl += '<td class="text-right">' + result[i].smh_bd.toFixed(2) + '</td>';
                        }
                        if (userColumnId.includes(columnMap["Others"][0]) || columnMap["Others"][1] == 1 || isAdmin == 1) {
                            tbl += '<td class="text-right">' + result[i].oh_bd.toFixed(2) + '</td>';                            
                        }
                        if (userColumnId.includes(columnMap["IGBDH"][0]) || columnMap["IGBDH"][1] == 1 || isAdmin == 1) {
                            tbl += '<td class="text-right">' + result[i].igbdh_bd.toFixed(2) + '</td>';                            
                        }
                        if (userColumnId.includes(columnMap["EGBDH"][0]) || columnMap["EGBDH"][1] == 1 || isAdmin == 1) {
                            tbl += '<td class="text-right">' + result[i].egbdh_bd.toFixed(2) + '</td>';                            
                        }
                        if (userColumnId.includes(columnMap["LS"][0]) || columnMap["LS"][1] == 1 || isAdmin == 1) {
                            tbl += '<td class="text-right">' + result[i].load_shedding_bd.toFixed(2) + '</td>';                            
                        }
                        if (userColumnId.includes(columnMap["Total_BD_Hrs"][0]) || columnMap["Total_BD_Hrs"][1] == 1 || isAdmin == 1) {
                            tbl += '<td class="text-right">' + result[i].total_bd_hrs.toFixed(2) + '</td>';                            
                        }
                        if (userColumnId.includes(columnMap["USMH_Loss"][0]) || columnMap["USMH_Loss"][1] == 1 || isAdmin == 1) {
                            tbl += '<td class="text-right">' + result[i].usmh.toFixed(2) + '</td>';                            
                        }
                        if (userColumnId.includes(columnMap["SMH_Loss"][0]) || columnMap["SMH_Loss"][1] == 1 || isAdmin == 1) {
                            tbl += '<td class="text-right">' + result[i].smh.toFixed(2) + '</td>';                            
                        }
                        if (userColumnId.includes(columnMap["Others_Loss"][0]) || columnMap["Others_Loss"][1] == 1 || isAdmin == 1) {
                            tbl += '<td class="text-right">' + result[i].oh.toFixed(2) + '</td>';                            
                        }
                        if (userColumnId.includes(columnMap["IGBDH_Loss"][0]) || columnMap["IGBDH_Loss"][1] == 1 || isAdmin == 1) {
                            tbl += '<td class="text-right">' + result[i].igbdh.toFixed(2) + '</td>';                            
                        }
                        if (userColumnId.includes(columnMap["EGBDH_Loss"][0]) || columnMap["EGBDH_Loss"][1] == 1 || isAdmin == 1) {
                            tbl += '<td class="text-right">' + result[i].egbdh.toFixed(2) + '</td>';                            
                        }
                        if (userColumnId.includes(columnMap["LS_Loss"][0]) || columnMap["LS_Loss"][1] == 1 || isAdmin == 1) {
                            tbl += '<td class="text-right">' + result[i].load_shedding.toFixed(2) + '</td>';                            
                        }
                        if (userColumnId.includes(columnMap["Total_Loss"][0]) || columnMap["Total_Loss"][1] == 1 || isAdmin == 1) {                            
                            tbl += '<td class="text-right">' + result[i].total_losses.toFixed(2) + '</td>';
                        }
                        
                        tbl += '</tr>';
                    }
                }
                else {

                    // tbl += '<tr><th colspan="19" style="text-align:center">Data Not Available <th></tr>';
                }
                tbl += '</table>';
               // $("#DailyGenView").html(tbl);
                $("#DailyGenView").html("").html(tbl);
                $('#example1').DataTable({
                    dom: 'Bfrtip',
                    fixedHeader: true,
                    responsive: true,
                    scrollX: true,
                    lengthChange: false,
                    autoWidth: true,
                    paging: true,
                    lengthChange: false,
                    searching: true,
                    ordering: true,
                    info: true,
                    autoWidth: true,
                    fixedColumns: {
                        left: 4
                    },
                    pageLength: 50,
                    buttons: [
                        {
                            extend: 'excel',
                            title: 'Solar Generation Summary',
                            exportOptions: {
                                columns: ':visible'
                            }
                        },
                        {
                            extend: 'csv',
                            title: 'Solar Generation Summary',
                            exportOptions: {
                                columns: ':visible'
                            }
                        },

                        'colvis',
                        {
                            text: '<span class="fas fa-file-excel" title="Download from DB up to six decimal"></span>',
                            className: 'btn ml-1   ',
                            action: function () {
                                exportToExcel();
                            }
                        },
                    ],
                    initComplete: function () {
                        this.api().columns().header().to$().each(function () {
                            //$(this).attr('title', 'title for ' + $(this).text())
                            if ($(this).text() == "EGA_A(%) i") {
                                $(this).attr('title', 'External Grid Breakdown, Shutdown & Load Shedding')
                            }
                            if ($(this).text() == "EGA_B(%) i") {
                                $(this).attr('title', 'External Grid Breakdown & Shutdown')
                            }
                            if ($(this).text() == "EGA_C(%) i") {
                                $(this).attr('title', 'Load Shedding')
                            }
                        })
                    }
                });
                $(".dt-buttons").addClass('btn-group flex-wrap');
                $(".dt-buttons > button").addClass('btn btn-secondary');
                $(".dataTables_filter> label >input").addClass('form-control form-control-sm');
                $(document).on("click", "div.dt-button-collection > div > button", function () {
                    if ($(this).hasClass("active")) {
                        $(this).css("background-color", "white");
                    } else {
                        $(this).css("background-color", "#31576d");
                    }
                });
               // $('#example1').wrap("<div class='scrolledTable'></div>");
                document.getElementById("loader").style.display = 'none';
                //$('#example1').removeClass('dataTable');
            }
        });
    }



</script>




