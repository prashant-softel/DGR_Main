﻿@using Newtonsoft.Json;
@using Microsoft.AspNetCore.Http;
@inject IHttpContextAccessor HttpContextAccessor

@{
    ViewData["Title"] = "ColumnAccess";
}

@{
    // Get the current year and month
    var currentYearMonth = DateTime.Now.ToString("yyyy-MM");
}
@{
    string windSiteList = "";

    var usermodel = JsonConvert.DeserializeObject<UserAccess>(@HttpContextAccessor.HttpContext.Session.GetString("UserAccess"));
}

@for (int i = 0; i < @usermodel.access_list.Count; i++)
{
    if (@usermodel.access_list[i].page_type == 3 && @usermodel.access_list[i].site_type == 1)
    {
        windSiteList += @usermodel.access_list[i].identity.ToString() + ",";
    }
}

<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700&display=fallback">
<!-- Font Awesome -->
<link rel="stylesheet" href="~/Content/theme/plugins/fontawesome-free/css/all.min.css">
<!-- daterange picker -->
<link rel="stylesheet" href="~/Content/theme/plugins/daterangepicker/daterangepicker.css">
<!-- DataTables -->
<link rel="stylesheet" href="~/Content/theme/plugins/datatables-bs4/css/dataTables.bootstrap4.min.css">
<link rel="stylesheet" href="~/Content/theme/plugins/datatables-responsive/css/responsive.bootstrap4.min.css">
<link rel="stylesheet" href="~/Content/theme/plugins/datatables-buttons/css/buttons.bootstrap4.min.css">
<link rel="stylesheet" href="~/Content/theme/plugins/multiple-select/dist/multiple-select.min.css" />
<link href="~/Content/theme/dist/css/adminlte.css" rel="stylesheet" />
<!-- dropdown search -->
<link href="https://unpkg.com/multiple-select@1.5.2/dist/multiple-select.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/jquery/dist/jquery.min.js"></script>
<script src="https://unpkg.com/multiple-select@1.5.2/dist/multiple-select.min.js"></script>
<script src="~/Content/theme/plugins/jquery/jquery.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.0/jquery.min.js"></script>


<!-- DataTables  & Plugins -->
<script src="~/Content/theme/plugins/datatables/jquery.dataTables.min.js"></script>
<script src="~/Content/theme/plugins/datatables/jquery.dataTables.js" defer></script>
<script src="~/Content/theme/plugins/datatables-buttons/js/dataTables.buttons.min.js" defer></script>
<script src="~/Content/theme/plugins/jszip/jszip.min.js" defer></script>
<script src="~/Content/theme/plugins/datatables-buttons/js/buttons.html5.min.js" defer></script>
<script src="~/Content/theme/plugins/datatables-buttons/js/buttons.colVis.min.js" defer></script>
<script src="~/Content/theme/plugins/jszip/jszip.min.js" defer></script>
<script src="~/Content/theme/plugins/pdfmake/pdfmake.min.js" defer></script>
<script src="~/Content/theme/plugins/datatables-buttons/js/buttons.colVis.min.js" defer></script>
<script src="~/Content/theme/dist/js/comman.js"></script>
<script src="~/Content/theme/plugins/chart.js/Chart.min.js"></script>
<script src="~/Content/theme/plugins/multiple-select/dist/multiple-select.min.js" defer></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js@3.0.0/dist/chart.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@2.0.0-rc"></script>
<!--<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.5.0/Chart.min.js"></script>-->
<style>

    .card-container {
        display: flex;
        flex-wrap: wrap;
        gap: 10px; /* Space between cards */
    }

    .card-custom {
        border-radius: 10px;
        padding: 5px 10px;
        display: flex;
        justify-items: center;
        gap: 2px;
        border: 1px solid #ddd;
    }

        .card-custom input {
            margin-right: 8px;
        }

        .card-custom label {
            flex: 1; /* Let the label take remaining space */
            white-space: nowrap; /* Prevent label from wrapping */
        }

        .action-button {
            padding: 5px 10px;
            background-color: #007bff;
            color: white;
            border: none;
            cursor: pointer;
            border-radius: 3px;
        }

        .action-button:hover {
            background-color: #0056b3;
        }

</style>
<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
    <section class="content">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title text-center">Column Access</h3>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-3">
                        <div class="form-group">
                            <div class="row" id="type_drop_list" style="position: relative; display: flex; justify-content: start; align-items: start;">
                                <label class="col-sm-2 col-form-label text-right" style="padding-right: 0px;">Type: </label>
                                <select class="form-control col-sm-8" id="typeDropdown" placeholder="Select Type" onchange="typeChange()" value="" style="height: 37px; margin-left: 5px;">
                                    <option value="0">Select Type</option>
                                    <option value="2">Solar</option>
                                    <option value="1">Wind</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <div class="row" id="pageType_drop_list" style="position: relative; display: flex; justify-content: start; align-items: start;">
                                <label class="col-sm-3 col-form-label text-right" style="padding-right: 0px;">Page Type: </label>
                                <select class="form-control col-sm-8" id="pageTypeDropdown" placeholder="Select Page Type" onchange="pageTypeChange()" value="" style="height: 37px; margin-left: 5px;">
                                    <option value="0">Select Page Type</option>
                                    <option value="2">Report</option>
                                    <option value="1">View</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <div class="row" id="page_drop_list" style="position: relative; display: flex; justify-content: start; align-items: start;">
                                <label class="col-sm-2 col-form-label text-right" style="padding-right: 0px;">Page : </label>
                                <select class="form-control col-sm-8" id="pageDropdown" placeholder="Select Page" onchange="pageChange()" value="" style="height: 37px; margin-left: 5px;">
                                    <option value="0">Select Page</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    @*<div class="col-md-2">
                        <div style="display: flex; flex-direction: row; justify-content: center; gap: 10%">
                            <button type="button" class="btn btn-block btn-primary" onclick="getReport()" style="margin-left:-5rem; width: 5rem;">Search</button>
                        </div>
                    </div>*@
                    <div class="col-md-1"></div>
                </div>
                <!--  Form Control Div Closed -->
                <hr>
                <div>
                    <div class="row" style="display: flex; justify-content: end;">
                        <div class="col-md-3" id="groupsPresent" style="display: none">
                            <div class="col-md-12">
                                <div class="row" id="group_drop_list" style="position: relative; display: flex; justify-content: start; align-items: start;">
                                    <label class="col-sm-2 col-form-label text-right" style="padding-right: 0px;">Group : </label>
                                    <select class="form-control col-sm-8" id="groupDropdown" placeholder="Select Group" onchange="groupChnage()" value="" style="height: 37px; margin-left: 5px;"></select>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3" id="noGroups" style="display: none">
                            No Groups Created for this page.
                        </div>
                        <div class="col-md-3" id="button_div" style="display: none; justify-content: end; ">
                            <div id="Create_group" style="width: 140px; height: 34.76px; position: relative; background: #86C466; border-radius: 5px; display: flex; align-items: center; justify-content: center; opacity: 1; margin-left: 10px; cursor: default; margin-right: 10px; " onmouseover="this.style.opacity=0.90" onmouseout="this.style.opacity= 1" onclick="createFunc()">
                                <i class="fas fa-plus" style="font-size: 18px; color: #ffffff;"></i>
                                <span style="margin-left: 5px; color: #ffffff;">CREATE GROUP</span>
                            </div>
                        </div>
                    </div>
                    <div id="tableData" style="overflow-x: auto;" class="userData"></div>
                    <div id="tableData_new" style="overflow-x: auto;" class="userData"></div>
                </div>
                <hr>
                <div id="loader" class="loader  center" style="display:none"></div>
            </div> <!-- Main Card Body Closded-->
        </div> <!--Card Closed -->
    </section>
</div>


           
<script type="text/javascript">
    //Global Variables defination START
    var type = 0;
    var pageType = 0;
    var selectedPage = 0;
    var selectedGroup = 0;
    var dataRendered = false;
    var selectedIds = [];
    var groupsSelectedIds = [];
    var rowLength = 0;
    var isCreated = 0;

    //Global Variables defination END.



    //On Page load functions to trigger START
    $(document).ready(function () { });

    window.onload = function () { }
    //On Page load functions to trigger END



    //Masters data FETCH functions START
    function getPages() {
        //trigger api through Home controller and populate it in dropdown options.
        if (type == 0 && pageType == 0) {
            alert("Please Select Type and Page Type.");
            return false;
        } else if (type == 0) {
            alert("Please Select Type.");
            return false;
        } else if (pageType == 0) {
            alert("Please Select Page Type.");
            return false;
        } else {
            console.log(type, pageType);
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetPageList_CA", "Home")' + '?type='+type+'&pageType=' + pageType,
                contentType: "application/json; charset=utf-8",
                datatype: "html",
                success: function (result, status, xhr) {
                    var options = "<option value='0'>Select Page</option>";
                    for (var j = 0; j < result.length; j++) {
                        options += '<option value="' + result[j].page_id + '">' + result[j].page_name + '</option>';
                    }
                    $('#pageDropdown').html(options);
                }
            });
        }
    }

    function getGroups() {
        //take the page_id selected by the user and fetch the groups of that particular page and populate it in dropdown options
        if (type == 0 && pageType == 0) {
            alert("Please Select Type and Page Type.");
            return false;
        } else if (type == 0) {
            alert("Please Select Type.");
            return false;
        } else if (pageType == 0) {
            alert("Please Select Page Type.");
            return false;
        } else if (selectedPage == 0) {
            alert("Please Select Page.");
            return false;
        } else {
            console.log(type, pageType);
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetGroupList_CA", "Home")' + '?page_id=' + selectedPage,
                contentType: "application/json; charset=utf-8",
                datatype: "html",
                success: function (result, status, xhr) {
                    var options = "<option value='0'>Select Group</option>";
                    if (result.length > 0) {
                        rowLength = result.length;
                        document.getElementById("noGroups").style.display = "none";
                        createTable(result);                        
                        document.getElementById("button_div").style.display = "flex";
                    } else {
                        document.getElementById("noGroups").style.display = "block";
                        document.getElementById("button_div").style.display = "flex";
                    }
                }
            });
        }
    }
    //Masters data FETCH functions END


    //On changing the pageType options function.
    function typeChange() {
        //set the selected type to the type global variable.
        type = document.getElementById("typeDropdown").value;
    }

    //On changing the pageType options function.
    function pageTypeChange() {
        //set the selected page type to the pageType global variable.
        pageType = document.getElementById("pageTypeDropdown").value;
        getPages();
    }

    //On changing the page options function.
    function pageChange() {
        //set the selected page_id to the selectedPage global variable.
        selectedPage = document.getElementById("pageDropdown").value;
        //call the getGroups function.
        document.getElementById("tableData_new").innerHTML = "";
        getGroups();
    }

    //On changing the Grouo of the selected page.
    function groupChnage() {
        //store the selected group id in the global variable selectedGroup.
        selectedGroup = document.getElementById("groupDropdown").value;
        console.log(type, pageType, selectedPage, selectedGroup);
        if (selectedGroup == 0) {
            console.log("Default option.");
        } else {

        }
    }

    //On clicking the search button function.
    function getReport() {
        //Get the particular pages's group details.
        //call the functions for creating the ui for columns as cards with checkbox.
        console.log("Clicked button.");
    }

    function createFunc() {
        var isTablePresent = document.getElementById("tableData_new").innerHTML == "" ? 1 : 0;
        if (isTablePresent == 1) {
            const tableContainer = document.getElementById('tableData_new');
            tableContainer.innerHTML = "";
            const table = document.createElement('table');
            table.className = 'table table-bordered table-striped';
            table.id = "example1";

            // Create table header
            const thead = document.createElement('thead');
            thead.className = "tbl-head";
            thead.innerHTML = `
        <tr>
            <th style="width: 250px">Group Name</th>
            <th>Group Elements</th>
            <th style="width: 250px">Action</th>
        </tr>
    `;
            table.appendChild(thead);

            // Create table body
            const tbody = document.createElement('tbody');
            const tr = document.createElement('tr');
            tbody.appendChild(tr);
            table.appendChild(tbody);
            tableContainer.appendChild(table);

        }
        $.ajax({
            type: "GET",
            url: '@Url.Action("GetCGColumns_CA", "Home")' + '?page_id=' + selectedPage,
            contentType: "application/json; charset=utf-8",
            datatype: "html",
            success: function (result, status, xhr) {
                var options = "<option value='0'>Select Group</option>";
                if (result.length > 0) {
                    var newRow = `
                <tr data-row-index="${rowLength}">
                    <td>
                        <input type="text" class="form-control" value="" id="group_name_input" placeholder="Enter Group Name">
                    </td>
                    <td>` + createColumnCards(result, 1, 0) + `</td>
                    <td style="display: flex; justify-content: center;">
                        <div id="Create_group" style="width: 100px; height: 34.76px; position: relative; background: #86C466; border-radius: 5px; display: flex; align-items: center; justify-content: center; opacity: 1; margin-left: 10px; cursor: default; margin-right: 10px;"
                            onmouseover="this.style.opacity=0.90"
                            onmouseout="this.style.opacity=1"
                            onclick="saveGroup()">
                            <i class="fas fa-plus" style="font-size: 14px; color: #ffffff;"></i>
                            <span style="margin-left: 5px; color: #ffffff;">SAVE</span>
                        </div>
                    </td>
                </tr>
            `;

                    $('#example1 tbody').append(newRow);
                    attachCheckboxEvents();
                    isCreated = 1;
                    document.getElementById("button_div").style.display = "none";
                } else {
                    
                }
            }
        });
    }
    function createColumnCards(data, display, index) {
        var cardHTML = '<div class="card-container" id="column_container">';
        var tempArr = [];
        data.forEach(function (item) {
            cardHTML += '<div class="card-custom' + (item.required === 1 ? ' blocked-card' : '') + '">';

            cardHTML += '<input type="checkbox" class="form-check-inpu" id="check' + item.column_id + '_row' + index + '" value="' + item.column_id + '"';
            if (item.required === 1) {
                cardHTML += ' checked disabled';
                if (display == 1) {
                    selectedIds.push({ column_id: item.column_id, page_id: selectedPage });
                }
            }
            if (display == 0 && item.selected == 1) {
                cardHTML += ' checked';
                tempArr.push(item.column_id);
            }
            cardHTML += '>';
            cardHTML += '<label class="form-check-labe" for="check' + item.column_id + '_row"' + index + '>' + item.column_name + '</label>';

            cardHTML += '</div>';
        });
        console.log("tempArray : " + tempArr);
        groupsSelectedIds[index] = [...tempArr];
        cardHTML += '</div>';
        return cardHTML;
    }
    function handleCheckboxChange() {
        var checkbox = $(this);
        var column_id = checkbox.val();
        var page_id = selectedPage; // Assuming `selectedPage` holds the current page ID

        if (checkbox.is(':checked')) {
            // Add the object to the array if checked
            if (!selectedIds.some(obj => obj.column_id === column_id)) {
                selectedIds.push({ column_id: column_id, page_id: page_id });
            }
        } else {
            // Remove the object from the array if unchecked
            selectedIds = selectedIds.filter(function (obj) {
                return obj.column_id !== column_id;
            });
        }
        console.log(selectedIds); // Output the IDs for debugging
    }
    function attachCheckboxEvents() {
        const rowSelector = `#example1 tbody tr[data-row-index="${rowLength}"] input[type="checkbox"]`;
        $(rowSelector).off('change').on('change', handleCheckboxChange);
    }
    function saveGroup() {
        var group_name = document.getElementById("group_name_input").value;
        if (group_name == "") {
            alert("Enter Group Name.");
            return false;
        } else {
            $.ajax({
                type: "POST",
                url: '@Url.Action("CreateGroup_CA", "Home")' + '?page_id=' + selectedPage + '&group_name=' + group_name,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: JSON.stringify(selectedIds),
                success: function (result, status, xhr) {
                    console.log("result after adding : ");
                    console.log(result);
                    if (Number(result) > 0) {
                        console.log("Success...!");
                        getGroups();
                        document.getElementById("button_div").style.display = "flex";
                    }

                },
                error: function (xhr, status, error) {
                    console.log("Error:", error);
                }
            });
        }
    }
    function createTable(data) {
        const tableContainer = document.getElementById('tableData_new');
        tableContainer.innerHTML = "";
        const table = document.createElement('table');
        table.className = 'table table-bordered table-striped';
        table.id = "example1";

        // Create table header
        const thead = document.createElement('thead');
        thead.className = "tbl-head";
        thead.innerHTML = `
        <tr>
            <th style="width: 250px">Group Name</th>
            <th>Group Elements</th>
            <th style="width: 250px">Action</th>
        </tr>
    `;
        table.appendChild(thead);

        // Create table body
        const tbody = document.createElement('tbody');

        data.forEach((group, index) => {
            const tr = document.createElement('tr');
            tr.setAttribute('data-row-index', index);

            // Group Name
            const groupNameTd = document.createElement('td');
            groupNameTd.textContent = group.page_group_name;
            tr.appendChild(groupNameTd);

            // Group Elements
            const groupElementsTd = document.createElement('td');
            groupElementsTd.innerHTML = createColumnCards(group.column_data, 0, index);
            tr.appendChild(groupElementsTd);

            // Action
            const actionTd = document.createElement('td');
            const buttonContainer = document.createElement('div');
            buttonContainer.style = "display: flex; flex-direction: row;";

            var buttonContent = group.is_active === 1 ? 'Deactivate' : 'Activate';
            var buttonColor = group.is_active === 1 ? '#EE403D' : '#86C466';

            const actionButton = document.createElement('div');
            actionButton.style = `width: 100px; height: 34.76px; position: relative; background: ${buttonColor}; border-radius: 5px; display: flex; align-items: center; justify-content: center; opacity: 1; margin-left: 10px; cursor: default; margin-right: 10px;`;
            actionButton.onmouseover = function () { this.style.opacity = 0.90; };
            actionButton.onmouseout = function () { this.style.opacity = 1; };
            actionButton.innerHTML = `<span style="margin-left: 5px; color: #ffffff;">${buttonContent}</span>`;
            actionButton.onclick = function () {
                activateDeactivate(group.page_groups_id, buttonContent);
            };

            const updateButton = document.createElement('div');
            updateButton.style = "width: 100px; height: 34.76px; position: relative; background: #86C466; border-radius: 5px; display: flex; align-items: center; justify-content: center; opacity: 1; margin-left: 10px; cursor: default; margin-right: 10px;";
            updateButton.onmouseover = function () { this.style.opacity = 0.90; };
            updateButton.onmouseout = function () { this.style.opacity = 1; };
            updateButton.innerHTML = `<i class="fas fa-plus" style="font-size: 14px; color: #ffffff;"></i><span style="margin-left: 5px; color: #ffffff;">Update</span>`;
            updateButton.onclick = function () {
                const rowIndex = this.closest('tr').getAttribute('data-row-index');
                updateGroup(rowIndex, group.page_groups_id, group.page_group_name);
            };

            buttonContainer.appendChild(actionButton);
            buttonContainer.appendChild(updateButton);
            actionTd.appendChild(buttonContainer);
            tr.appendChild(actionTd);

            tbody.appendChild(tr);
        });

        table.appendChild(tbody);
        tableContainer.appendChild(table);
    }
    function updateGroup(rowIndex, page_group_id, pageGroupName) {
        console.log("Inside updategroup function with row_id : " + rowIndex + " Page group id : " + page_group_id);
        var returnedRes = getCheckedCards(rowIndex);
        console.log("Data from object : " + groupsSelectedIds[rowIndex]);
        var isArraysame = arraysHaveSameElements(returnedRes, groupsSelectedIds[rowIndex]);
        if (isArraysame) {
            console.log("No change to Update.");
            alert("No Change to Update.");
        } else {
            //console.log("Go for update. ");
            $.ajax({
                type: "POST",
                url: '@Url.Action("UpdateGroup_CA", "Home")' + '?page_id=' + selectedPage + '&page_groups_id=' + page_group_id,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: JSON.stringify(returnedRes),
                success: function (result, status, xhr) {
                    console.log("result after adding : ");
                    console.log(result);
                    if (Number(result) > 0) {
                        console.log("Success...!");
                        alert("Successfully Updated " + pageGroupName);
                        getGroups();
                        document.getElementById("button_div").style.display = "flex";
                    }
                },
                error: function (xhr, status, error) {
                    console.log("Error:", error);
                }
            });
        }
    }

    function activateDeactivate(page_group_id, action) {
        var status = 0;

        if (action == "Deactivate") {
            status = 0;
        } else {
            status = 1;
        }
        $.ajax({
            type: "GET",
            url: '@Url.Action("ActiDeactiGroup_CA", "Home")' + '?page_groups_id=' + page_group_id + '&status=' + status,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result, status, xhr) {
                console.log("result after adding : ");
                console.log(result);
                if (Number(result) > 0) {
                    console.log("Success...!");
                    if (status == 0) {
                        alert("Activated..!");
                    } else {
                        alert("Deactivated..!");
                    }
                    getGroups();
                    document.getElementById("button_div").style.display = "flex";
                }
            },
            error: function (xhr, status, error) {
                console.log("Error:", error);
            }
        });
    }

    function getCheckedCards(rowIndex) {
        // Get the row by index
        const row = document.querySelector(`tr[data-row-index="${rowIndex}"]`);
        if (row) {
            // Get all checked checkboxes in this row
            const checkedCheckboxes = row.querySelectorAll('.form-check-inpu:checked');
            let checkedIds = [];
            checkedCheckboxes.forEach(checkbox => {
                checkedIds.push(Number(checkbox.value));
            });
            console.log('Checked cards for row index ' + rowIndex + ':', checkedIds);
            return checkedIds;
            // You can now use checkedIds array as per your requirement
        } else {
            console.error('Row not found');
        }
    }
    function arraysHaveSameElements(arr1, arr2) {
        if (arr1.length !== arr2.length) {
            return false; // Different lengths
        }
        // Sort and compare
        let sortedArr1 = [...arr1].sort();
        let sortedArr2 = [...arr2].sort();
        for (let i = 0; i < sortedArr1.length; i++) {
            if (sortedArr1[i] !== sortedArr2[i]) {
                return false; // Different elements
            }
        }
        return true; // Same elements
    }

</script>
