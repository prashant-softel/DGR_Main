@using Newtonsoft.Json;
@using Microsoft.AspNetCore.Http;
@inject IHttpContextAccessor HttpContextAccessor

@{
    ViewData["Title"] = "Heat Map";
}
@{
    string windUserSiteList = "";
    string solarUserSiteList = "";
    var usermodel = JsonConvert.DeserializeObject<UserAccess>(@HttpContextAccessor.HttpContext.Session.GetString("UserAccess"));
}
@{
    bool windAccess = false;
    bool solarAccess = false;
}

@for (int i = 0; i < @usermodel.access_list.Count; i++)
{

    if (@usermodel.access_list[i].page_type == 5 && @usermodel.access_list[i].site_type == 1)
    {
        windUserSiteList += @usermodel.access_list[i].identity.ToString() + ",";
    }

    if (@usermodel.access_list[i].page_type == 5 && @usermodel.access_list[i].site_type == 2)
    {
        solarUserSiteList += @usermodel.access_list[i].identity.ToString() + ",";
    }
}


@if (@HttpContextAccessor.HttpContext.Session.GetString("role") != "Admin")
{
    var usermodel_1 = JsonConvert.DeserializeObject<UserAccess>(@HttpContextAccessor.HttpContext.Session.GetString("UserAccess"));
    for (int i = 0; i < @usermodel_1.access_list.Count; i++)
    {
        Console.WriteLine(usermodel_1.access_list);
        if (@usermodel.access_list[i].page_type == 5 && @usermodel_1.access_list[i].site_type == 2)
        {
            windAccess = true;
        }
        if (@usermodel.access_list[i].page_type == 5 && @usermodel_1.access_list[i].site_type == 1)
        {
            solarAccess = true;
        }
    }
}

<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700&display=fallback">
<!-- Font Awesome -->
<link rel="stylesheet" href="~/Content/theme/plugins/fontawesome-free/css/all.min.css">
<!-- daterange picker -->
<link rel="stylesheet" href="~/Content/theme/plugins/daterangepicker/daterangepicker.css">
<!-- DataTables -->
<link rel="stylesheet" href="~/Content/theme/plugins/datatables-bs4/css/dataTables.bootstrap4.min.css">
<link rel="stylesheet" href="~/Content/theme/plugins/datatables-responsive/css/responsive.bootstrap4.min.css">
@*<link rel="stylesheet" href="~/Content/theme/plugins/datatables-buttons/css/buttons.bootstrap4.min.css">*@
<link rel="stylesheet" href="~/Content/theme/plugins/multiple-select/dist/multiple-select.min.css" />
<link href="~/Content/theme/dist/css/adminlte.css" rel="stylesheet" />

<link href="https://unpkg.com/multiple-select@1.5.2/dist/multiple-select.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/jquery/dist/jquery.min.js"></script>
<script src="https://unpkg.com/multiple-select@1.5.2/dist/multiple-select.min.js"></script>
<style>
    table th {
        padding: 0.5rem !important;
        font-size: 15px !important;
    }

    table td {
        padding: 0.2rem !important;
        font-size: 15px !important;
    }

    .dataTables_filter {
        margin-top: -2.6% !important;
    }

    select {
        width: 50%;
        height: 36px;
    }

    .modal {
        position: fixed !important;
    }
    .box {
        height: 20px;
        width: 20px;
        border: 1px solid #9e9e9e99;
        border-radius: 5px;
    }

    .red {
        background-color: #ff0000;
        text-align: center;
        color: white;
    }

    .green {
        background-color: #008000;
        text-align: center;
        color: white;
    }

    .orange {
        background-color: #FFAC1C;
        text-align: center;
        color: white;
    }
    .gray {
        background-color: #b1a5a0f2;
        text-align: center;
        color: white;
    }
    .black {
        background-color: #0e0e0df2;
        text-align: center;
        color: white;
    }
    .boxinfo{
        height: 20px;
    width: 20px;
    margin-bottom: 15px;
    border: 1px solid #3f51b5c2;
    border-radius: 50%;
    text-align: center;
    background: #007bff;
    color: white;
    font-size: 12px;
    font-weight: bold;
    }
    infotool {
        position: relative;
        display: inline-block;
        border-bottom: 1px dotted black;
    }

    .infotool .infotext {
        visibility: hidden;
        width: 220px;
        background-color: darkgoldenrod;
        color: #fff;
        text-align: left;
        border-radius: 6px;
        padding: 9px 0;
        position: absolute;
        z-index: 1;
        bottom: 100%;
        margin-left: -220px;
        padding-left: 10px;
        padding-right: 10px;
        border: 1px solid black;
        font-size: 13px;
        line-height: 22px;
    }
    .infotool:hover .infotext {
        visibility: visible;
    }

    infotool-td {
        position: relative;
        display: inline-block;
        border-bottom: 1px dotted black;
    }
    .infotool-td .infotable {
        visibility: hidden;
        width: 180px;
        background-color: black;
        color: #fff;
        text-align: left;
        border-radius: 6px;
        padding: 9px 0;
        position: absolute;
        z-index: 1;
        padding-left: 10px;
        padding-right: 10px;
        border: 1px solid black;
        margin-left: -150px;
    }
    .infotool-td:hover .infotable {
        visibility: visible;
    }


</style>
<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
    <section class="content">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title text-center">Daily Automation Heat Map</h3>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-3">
                        <div class="form-group">
                            <div class="row">
                                <label class="col-sm-4 col-form-label text-right">Site Type : </label>
                                <select class="form-control  col-sm-8" id="siteType" name="siteType" value="" onchange="getSiteList()">
                                    <option value="0">Select Site Type </option>
                                    @if (windAccess == true)
                                    {
                                        <option value="2">Solar</option>
                                    }
                                    @if (solarAccess == true)
                                    {
                                        <option value="1">Wind</option>
                                    }
                                    @if (@HttpContextAccessor.HttpContext.Session.GetString("role") == "Admin")
                                    {
                                        <option value="2">Solar</option>
                                        <option value="1">Wind</option>
                                    }
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="input-group row">
                            <label class="col-sm-3 col-form-label text-right">Date : </label>
                            <div class="input-group-prepend">
                                <span class="input-group-text">
                                    <i class="far fa-calendar-alt"></i>
                                </span>
                            </div>
                            <input type="text" class="form-control float-right col-sm-8" id="daterange" name="daterange">
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group" id="multple_site" style="display:none;">
                            <div class="row">
                                <label class="col-sm-4 col-form-label text-right">Site : </label>
                                <select class="form-control  col-sm-8" id="site" name="site[]" multiple>
                                </select>
                            </div>
                        </div>
                        <div class="form-group" id="normal_site" style="display:block;">
                            <div class="row">
                                <label class="col-sm-3 col-form-label text-right">Site : </label>
                                <select class="form-control  col-sm-8" id="site_n" name="site_n">
                                    <option value="">Please Select Site</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-2" style="margin-left:0rem;">
                        <div class="col-md-4"><button type="button" class="btn btn-block btn-primary" onclick="DummyGetReport()" style="float:left; width:5rem ">Search</button></div>
                    </div>
                </div>
                <br>
                <hr>
                <div class="col-sm-12">
                    <div class="row" style="float: right;">
                        <div class="boxinfo infotool">
                            i
                            <span class="infotext">
                                <ul style=" padding-left: 0px;">
                                    <li style="display: flex;"><span class="box black"> </span>&nbsp;&nbsp;&nbsp;&nbsp;All data missing </li>
                                    <li style="display: flex;"><span class="box gray"> </span>&nbsp;&nbsp;&nbsp;&nbsp;Wating for approval</li>
                                    <li style="display: flex;"><span class="box orange"> </span>&nbsp;&nbsp;&nbsp;&nbsp;Partial data uploaded</li>
                                    <li style="display: flex;"><span class="box green"> </span>&nbsp;&nbsp;&nbsp;&nbsp;Complete data uploaded</li>
                                </ul>

                                    <!--<div class='box black'>&nbsp;&nbsp;</div>All data missing <br>
                                    <div class='box gray '></div>Wating for approval <br>
                                    <div class='box orange'></div>Partial uploaded <br>
                                    <div class='box green '></div>Complete data uploaded-->
                                </span>
                            
                        </div>
                               <!-- <div class='box black infotool'>-1 <span class="infotext">All data missing</span></div>&nbsp;
                                <div class='box gray infotool'>0 <span class="infotext">Wating for approval</span></div>&nbsp;
                                <div class='box red infotool'>1 <span class="infotext">2 table data missing</span></div>&nbsp;
                                <div class='box orange infotool'>2 <span class="infotext">1 table data missing</span></div>&nbsp;
                                <div class='box green infotool'>3 <span class="infotext">Complete data uploaded </span></div>-->
                    </div>
                </div>
                <br>
                <div class="col-sm-12">
                    <div id="HeatMap" style="overflow-x: auto; width: 100%; height: 400px;"></div>
                    <!--<canvas id="Waterfall" style="min-height: 400px; height: 400px; max-height: 400px; max-width: 100%; width: 640px; margin-top: -1rem "></canvas>-->
                </div>

                <div class="col-sm-12">
                    <div id="HeatMapTest" style="overflow-x: auto; width: 100%; height: 400px;"></div>
                    <!--<canvas id="Waterfall" style="min-height: 400px; height: 400px; max-height: 400px; max-width: 100%; width: 640px; margin-top: -1rem "></canvas>-->
                </div>

                <div id="LogData"></div>

                <div id="loader" class="loader  center" style="display:none"></div>
            </div>
        </div>

    </section>

</div>
<style>
  
   
    </style>
<!-- /.content-wrapper -->
<script src="~/Content/theme/plugins/jquery/jquery.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.0/jquery.min.js"></script>

<script src="~/Content/theme/plugins/multiple-select/dist/multiple-select.min.js" defer></script>
<!--Date Range -->
<script src="~/Content/theme/plugins/moment/moment.min.js"></script>
<script src="~/Content/theme/plugins/inputmask/jquery.inputmask.min.js"></script>
<script src="~/Content/theme/plugins/daterangepicker/daterangepicker.js" defer></script>

<script src="~/Content/theme/plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
<!-- DataTables  & Plugins -->
<script src="~/Content/theme/plugins/datatables/jquery.dataTables.min.js"></script>
<script src="~/Content/theme/plugins/datatables/jquery.dataTables.js" defer></script>

<script src="~/Content/theme/plugins/datatables-buttons/js/dataTables.buttons.min.js" defer></script>
<script src="~/Content/theme/plugins/jszip/jszip.min.js" defer></script>
<script src="~/Content/theme/plugins/datatables-buttons/js/buttons.html5.min.js" defer></script>
<script src="~/Content/theme/plugins/pdfmake/pdfmake.min.js" defer></script>
<script src="~/Content/theme/plugins/datatables-buttons/js/buttons.colVis.min.js" defer></script>
<script src="~/Content/theme/dist/js/comman.js"></script>
<script src='https://cdn.plot.ly/plotly-2.27.0.min.js'></script>

<script type="text/javascript">

 $(document).ready(function () {
        $('#daterange').daterangepicker(
            {
                maxDate: new Date(),
                locale: {
                    format: 'DD/MM/YYYY',
                }
            });
    });

    function getSiteList() {
        var siteType = $('select#siteType option:selected').val();
        if (siteType == 2) {
            console.log("siteType", siteType);
            GetSolarSite();
            document.getElementById("normal_site").style.display = 'none';
            document.getElementById("multple_site").style.display = 'block';

        }
        else if (siteType == 1) {
            document.getElementById("normal_site").style.display = 'none';
            document.getElementById("multple_site").style.display = 'block';
            GetWindSite();
            console.log("siteType", siteType);
        }
    }
     function GetWindSite() {

         var state = "";
        var spv = "";
         var site_ids = "@Html.Raw(windUserSiteList.TrimEnd(','))";
        $.ajax({
            type: "GET",
           // url: "/WindReport/GetSiteList",
            url: '@Url.Action("GetSiteList", "WindReport")' + '?sitelist=' + site_ids,
            contentType: "application/json; charset=utf-8",
            //data: '{"state":"' + val + '"}',
            datatype: "html",
            success: function (result, status, xhr) {
                var options = "";
                //options += '<option value="">Select Site</option>';
                //options += '<option value="0">All Site</option>';
                for (var k = 0; k < result.length; k++) {
                    options += '<option value="' + result[k].site_master_id + '">' + result[k].site + '</option>';
                }
                $("#site").multipleSelect('destroy');
                $("#site").html(options);
                $('select#site').multipleSelect({
                    "minimumCountSelected": 2,
                    "placeholder": "Select Wind Site(s)",
                    filter:true
                });
            }
        });
    }
  function GetSolarSite() {
        var site_ids = "@Html.Raw(solarUserSiteList.TrimEnd(','))";
        var solar_total_mw = 0;
        $.ajax({
            type: "GET",
            url: '@Url.Action("GetSolarSiteList", "Dashboard")' + '?sitelist=' + site_ids,
            contentType: "application/json; charset=utf-8",
            datatype: "html",
            success: function (result, status, xhr) {
               // console.log(result);
                var options = "";

                for (var i = 0; i < result.length; i++) {
                    solar_total_mw += result[i].ac_capacity;
                    options += '<option value="' + result[i].site_master_solar_id + '">' + result[i].site + '</option>';
                }
                $("#site").multipleSelect('destroy');
                $("#site").html(options);
                $('select#site').multipleSelect({
                   "minimumCountSelected": 2,
                   "placeholder": "Select Solar Site(s)",
                   filter:true
                });
            }
        });
    }

    function DummyGetReport() {
        let site = "";
        $('select#site option:selected').each(function () {
            site += $(this).val() + ",";

        });
        site = site != "" ? site.slice(0, -1) : site;
        if (site == "" || site == null) {
            alert("Please select site ");
            return false;
        }
       // document.getElementById("loader").style.display = 'flex';
        /*  new fuction test */
      /*  const existingData = [
            { date: "2024-01-01", autonation: 1, pyranometer15min: 1, pyranometer1min: 1 },
            { date: "2024-01-02", autonation: 1, pyranometer15min: 1, pyranometer1min: 1 },
            { date: "2024-01-03", autonation: 0, pyranometer15min: 1, pyranometer1min: 1 },
            { date: "2024-01-04", autonation: 1, pyranometer15min: 1, pyranometer1min: 1 },
            { date: "2024-01-05", autonation: 0, pyranometer15min: 0, pyranometer1min: 1 },
            { date: "2024-01-07", autonation: 1, pyranometer15min: 1, pyranometer1min: 1 },
            { date: "2024-01-08", autonation: 0, pyranometer15min: 0, pyranometer1min: 0 },
            { date: "2024-01-09", autonation: 1, pyranometer15min: 1, pyranometer1min: 1 }
        ];

        // Array to store missing dates
        const missingDates = [];
        for (let i = 1; i <= 10; i++) {
            const currentDate = new Date(`2024-01-${i < 10 ? '0' + i : i}`).toISOString().split('T')[0];

            // Check if the date is present in existing data
            const dateExists = existingData.some(item => item.date === currentDate);

            // If the date is missing, add it to the missingDates array
            if (!dateExists) {
                missingDates.push({
                    date: currentDate,
                    autonation: -1,  // default values for autonation, pyranometer15min, and pyranometer1min
                    pyranometer15min: -1,
                    pyranometer1min: -1
                });
            }
        }

        // Concatenate existing data with missing dates
        const newData = existingData.concat(missingDates);

        // Display the result
        console.log(newData);
        newData.sort((a, b) => new Date(a.date) - new Date(b.date));

        // Display the sorted array
        console.log(newData);
        */
        var siteType = $('select#siteType option:selected').val();
        var daterange = $('#daterange').val();
        var arr1 = new Array();
        arr1 = daterange.split("-");
        var fromDate = moment(arr1[0], 'DD/MM/YYYY').format('YYYY-MM-DD');
        var toDate = moment(arr1[1], 'DD/MM/YYYY').format('YYYY-MM-DD');
        var isAdmin = 1;
        const d1 = new Date(fromDate);
        const d2 = new Date(toDate);
        var datelist = getDatesInRange(d1, d2);
        var datalengh = datelist.length;
        var fdate = "";
        console.log("selected data count :" + datalengh);
        $.ajax({
            type: "GET",
            url: '@Url.Action("GetHeatMapData", "Dashboard")' + '?site=' + site + '&siteType=' + siteType + '&fromDate=' + fromDate + '&toDate=' + toDate + "&isAdmin=" + isAdmin,
            contentType: "application/json; charset=utf-8",
            datatype: "html",
            success: function (result, status, xhr) {
                //console.log(result);
                var tbl = '<table id="example1" class="table table-bordered table-striped dataTable dtr-inline">';
                tbl += '<thead  class="tbl-head">';
                tbl += '<tr><th >Site</th>';
                for (var h = 0; h < datelist.length; h++) {
                    tbl += '<th>' + moment(datelist[h]).format('DD-MMM'); + '</th>';

                    fdate = moment(datelist[0]).format('YYYY-MM');
                }
                tbl += '</tr></thead>';
                for (var i = 0; i < result.length; i++) {
                    let sitedata = result[i].data;
                    tbl += '<tr><td>' + result[i].site + '</td>';
                    const missingDates = [];
                    for (let i = 1; i <= datalengh; i++) {
                        const currentDate = new Date(fdate+`-${i < datalengh ? '0' + i : i}`).toISOString().split('T')[0];

                        // Check if the date is present in existing data
                        const dateExists = sitedata.some(item => item.date === currentDate);

                        // If the date is missing, add it to the missingDates array
                        if (!dateExists) {
                            if (siteType == 1) {
                                missingDates.push({
                                    date: currentDate,
                                    autonation: -1,  // default values for autonation, pyranometer15min, and pyranometer1min
                                    uploded_tml: -1,
                                    actual_tml: -1,
                                    expected_tml: -1
                                });
                            }
                            else {
                                missingDates.push({
                                    date: currentDate,
                                    autonation: -1,  // default values for autonation, pyranometer15min, and pyranometer1min
                                    pyranometer15min: -1,
                                    pyranometer1min: -1
                                });
                            }
                            
                        }
                    }
                    const newData = sitedata.filter(Boolean).concat(missingDates);

                    if (siteType == 1) {
                        newData.sort((a, b) => new Date(a.date) - new Date(b.date));
                        Object.entries(newData).forEach(entry => {
                            const [key, value] = entry;
                            if (typeof (value) == "object") {

                                let status_count = 0;
                                let tooltopmsg = "";
                                if (Object(value).autonation == 1) {
                                    status_count++;
                                }
                                else {
                                    tooltopmsg = "Generation data missing";
                                }
                                if (Object(value).uploded_tml == 1) {
                                    status_count++;
                                    if (Object(value).actual_tml == Object(value).expected_tml) {
                                        status_count++;
                                    }
                                    else {
                                        tooltopmsg = "TML sample are partial uploded ";
                                    }
                                }
                                else {
                                    tooltopmsg = "TML data missing";
                                }
                                if (Object(value).autonation == -1 && Object(value).uploded_tml == -1) {
                                    status_count = -1;
                                }

                                if ((Object(value).autonation == 0 && Object(value).uploded_tml == 1) && (Object(value).actual_tml != Object(value).expected_tml)) {
                                    tooltopmsg = "1- Generation data missing. <br> 2- TML sample are partial uploded";
                                }
                                let applyclass = "black";
                                if (status_count == 2 || status_count == 1) { applyclass = "orange"; }
                                if (status_count == 0) { applyclass = "gray"; tooltopmsg = "Wating for approval"; }
                                if (status_count == -1) { applyclass = "black"; tooltopmsg = "All data missing"; }
                                if (status_count == 3) {
                                    tbl += '<td class="green">&nbsp;</td>';
                                }
                                else {
                                    tbl += '<td class="' + applyclass + ' infotool-td"><span class="infotable">' + tooltopmsg + '</span></td>';
                                }
                            }
                        });
                    }
                    else {
                         newData.sort((a, b) => new Date(a.date) - new Date(b.date));
                       
                        //let tooltopmsg = "";
                         Object.entries(newData).forEach(entry => {
                            const [key, value] = entry;
                            if (typeof (value) == "object") {
                                let tooltopmsg = "";
                                let status_count = 0;
                                if (Object(value).autonation == 1) {
                                    status_count++;
                                }
                                else {
                                    tooltopmsg = "Generation data missing";
                                }
                                if (Object(value).pyranometer15min == 1) {
                                    status_count++;
                                }
                                else {
                                    tooltopmsg = "Pyranometer 15 min data missing";
                                }
                                if (Object(value).pyranometer1min == 1) {
                                    status_count++;
                                }
                               
                                else {
                                    tooltopmsg = "Pyranometer 1 min data missing";
                                }

                                if (Object(value).pyranometer15min == 0 && Object(value).pyranometer1min == 0) {
                                    tooltopmsg = "1- Pyranometer 1 min data missing. <br>2- Pyranometer 15 min data missing";
                                }
                                if (Object(value).autonation == 0 && Object(value).pyranometer1min == 0) {
                                    tooltopmsg = "1- Generation data missing. <br>2- Pyranometer 1 min data missing";
                                }
                                if (Object(value).autonation == 0 && Object(value).pyranometer15min == 0) {
                                    tooltopmsg = "1- Generation data missing. <br>2- Pyranometer 15 min data missing";
                                }
                                if (Object(value).autonation == -1 && Object(value).pyranometer1min == -1 && Object(value).pyranometer1min == -1) {
                                    status_count = -1;
                                }
                                let applyclass = "black";
                                if (status_count == 2 || status_count == 1) { applyclass = "orange"; }
                                if (status_count == 0) { applyclass = "gray"; tooltopmsg = "Waiting for approval"; }
                                if (status_count == -1) { applyclass = "black"; tooltopmsg = "All data missing"; }
                                if (status_count == 3) {
                                    tbl += '<td class="green">&nbsp;</td>';
                                }
                                else {
                                    tbl += '<td class="' + applyclass + ' infotool-td"><span class="infotable">' + tooltopmsg + '</span></td>';
                                }
                            }
                       
                        });
                    }
                   document.getElementById("loader").style.display = 'none';
                }
                tbl += '</tbody ></table >';
                $("#HeatMap").html("").html(tbl);
            }
        });

     
    }
   
    function getDatesInRange(startDate, endDate) {
      
        if (moment(startDate, 'YYYY-MM-DD').isSame(moment(endDate, 'YYYY-MM-DD'), 'day'))
            return [endDate];
        let date = startDate
       // let date = (startDate-1);
        const dates = [date];
        while (moment(date) <= endDate) {
            dates.push(moment(date).format('YYYY-MM-DD'));
            date = moment(date).add(1, 'day');
            //dates.push(date.format('YYYY-MM-DD'));
        }
       
        dates.shift();
        return dates;
    }
</script>
