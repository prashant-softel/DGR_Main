@using Newtonsoft.Json;
@using Microsoft.AspNetCore.Http;

@inject IHttpContextAccessor HttpContextAccessor

@{
    ViewData["Title"] = "Home Page";
}
<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700&display=fallback">
<!-- Font Awesome -->
<link rel="stylesheet" href="~/Content/theme/plugins/fontawesome-free/css/all.min.css">
<!-- daterange picker -->
<link rel="stylesheet" href="~/Content/theme/plugins/daterangepicker/daterangepicker.css">
<!-- DataTables -->
<link rel="stylesheet" href="~/Content/theme/plugins/datatables-bs4/css/dataTables.bootstrap4.min.css">
<link rel="stylesheet" href="~/Content/theme/plugins/datatables-responsive/css/responsive.bootstrap4.min.css">
<link rel="stylesheet" href="~/Content/theme/plugins/multiple-select/dist/multiple-select.min.css" />
<link rel="stylesheet" href="~/Content/theme/plugins/datatables-buttons/css/buttons.bootstrap4.min.css">
<!-- dropdown search -->
<link href="https://unpkg.com/multiple-select@1.5.2/dist/multiple-select.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/jquery/dist/jquery.min.js"></script>
<script src="https://unpkg.com/multiple-select@1.5.2/dist/multiple-select.min.js"></script>
<style>
    .d-tooltip {
        position: relative;
        display: inline-block;
        /*border-bottom: 1px dotted black;*/
    }
    .d-tooltip .d-tooltiptext {
        visibility: hidden;
        width: 80px;
        background-color: black;
        text-align: center;
        border-radius: 6px;
        padding: 0px 0;
        position: absolute;
        z-index: 1;
        margin-top: 3px;
        margin-left: -28px;
        border: 1px solid;
    }
    .d-tooltip:hover .d-tooltiptext {
        visibility: visible;
    }
    select {
        width: 50%;
        height:36px;
    }
    table td {
        padding: 0rem !important;
        font-size: 13px !important;
    }
    .switch {
        position: relative;
        display: block;
        vertical-align: top;
        width: 50px;
        height: 22px;
        padding: 0px;
        margin: 7px 10px 10px 0;
        background: linear-gradient(to bottom, #eeeeee, #FFFFFF 25px);
        background-image: -webkit-linear-gradient(top, #eeeeee, #FFFFFF 25px);
        border-radius: 18px;
        box-shadow: inset 0 -1px white, inset 0 1px 1px rgba(0, 0, 0, 0.05);
        cursor: pointer;
        box-sizing: content-box;
    }
    .switch-input {
        position: absolute;
        top: 0;
        left: 0;
        opacity: 0;
        box-sizing: content-box;
    }
    .switch-label {
        position: relative;
        display: block;
        height: inherit;
        font-size: 10px;
        text-transform: uppercase;
        background: #28a745;
        border-radius: inherit;
        box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.12), inset 0 0 2px rgba(0, 0, 0, 0.15);
        box-sizing: content-box;
    }
    .switch-label:before, .switch-label:after {
        position: absolute;
        top: 50%;
        margin-top: -.5em;
        line-height: 1;
        -webkit-transition: inherit;
        -moz-transition: inherit;
        -o-transition: inherit;
        transition: inherit;
        box-sizing: content-box;
    }
   .switch-label:before {
        content: attr(data-off);
        right: 11px;
        color: white;
        text-shadow: 0 1px rgba(255, 255, 255, 0.5);
    }
    .switch-label:after {
        content: attr(data-on);
        left: 11px;
        color: #FFFFFF;
        text-shadow: 0 1px rgba(0, 0, 0, 0.2);
        opacity: 0;
    }
    .switch-input:checked ~ .switch-label {
        background: #0069d9;
        box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.15), inset 0 0 3px rgba(0, 0, 0, 0.2);
    }
    .switch-input:checked ~ .switch-label:before {
        opacity: 0;
    }
    .switch-input:checked ~ .switch-label:after {
       opacity: 1;
    }
    .switch-handle {
        position: absolute;
        top: 1px;
        left: 2px;
        width: 18px;
        height: 18px;
        background: linear-gradient(to bottom, #FFFFFF 40%, #f0f0f0);
        background-image: -webkit-linear-gradient(top, #FFFFFF 40%, #f0f0f0);
        border-radius: 100%;
        box-shadow: 1px 1px 5px rgba(0, 0, 0, 0.2);
    }
    .switch-handle:before {
        content: "";
        position: absolute;
        top: 50%;
        left: 50%;
        margin: -6px 0 0 -6px;
        width: 12px;
        height: 12px;
        background: linear-gradient(to bottom, #eeeeee, #FFFFFF);
        background-image: -webkit-linear-gradient(top, #eeeeee, #FFFFFF);
        border-radius: 6px;
        box-shadow: inset 0 1px rgba(0, 0, 0, 0.02);
    }
    .switch-input:checked ~ .switch-handle {
        left: 30px;
        box-shadow: -1px 1px 5px rgba(0, 0, 0, 0.2);
    }
/* Transition========================== */
    .switch-label, .switch-handle {
        transition: All 0.3s ease;
        -webkit-transition: All 0.3s ease;
        -moz-transition: All 0.3s ease;
        -o-transition: All 0.3s ease;
    }
</style>
@{
    string windSiteList = "";
    string solarSiteList = "";
}

@if (@HttpContextAccessor.HttpContext.Session.GetString("role") != "Admin")
{
    var usermodel = JsonConvert.DeserializeObject<UserAccess>(@HttpContextAccessor.HttpContext.Session.GetString("UserAccess"));
    for (int i = 0; i < @usermodel.access_list.Count; i++)
    {
        if (@usermodel.access_list[i].page_type == 3 && @usermodel.access_list[i].site_type == 1)
        {
            windSiteList += @usermodel.access_list[i].identity.ToString() + ",";
        }
        if (@usermodel.access_list[i].page_type == 3 && @usermodel.access_list[i].site_type == 2)
        {
            solarSiteList += @usermodel.access_list[i].identity.ToString() + ",";
        }
    }
}

<link href="~/Content/theme/dist/css/adminlte.css" rel="stylesheet" />
<div class="content-wrapper">
    <section class="content-header">
    </section>
    <section class="content">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title text-center">Dashboard</h3>
            </div>
            <div class="card-body">
                <div class="row" style="margin-top:-0.9rem;">
                    <div class="col-sm-1"></div>
                    <div class="col-sm-1">
                        <div class="form-group row">
                            <label class="col-form-label text-right">FY : <span id="fyearlebel"></span> </label>
                        </div>
                    </div>
                    <div class="col-sm-3">
                        <div class="form-group">
                            <div class="row">
                                <label class="col-sm-4 col-form-label text-right">Wind Site : </label>
                                <select class="form-control multi-select col-sm-8" id="wind_site" name="wind_site" multiple onchange="changedWindSite()"></select>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-1"></div>
                    <div class="col-sm-3">
                        <div class="form-group">
                            <div class="row">
                                <label class="col-sm-4 col-form-label text-right">Solar Site : </label>
                                <select class="form-control multi-select col-sm-8" id="solar_site" name="solar_site" multiple onchange="changedSolarSite()"></select>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-2">
                        <button type="button" class="btn btn-block btn-primary" onclick="GetReport();" style=" width: 5rem;">Search</button>
                    </div>
                    <div class="col-sm-1">
                        <label class="switch">
                            <input class="switch-input" id="switchEvent" onchange="dataChange()" type="checkbox" />
                            <span class="switch-label" data-on="EXP" data-off="AOP"></span>
                            <span class="switch-handle"></span>
                        </label>
                    </div>
                </div>
                <hr style="margin-top: -0.9rem; margin-bottom: 0.2rem;">
                <div class="row">
                    <div class="col-sm-6">
                        <div class="card tbl-head" style="max-height: 135px; height:135px; width: 100%; padding: 0.5rem 1rem 0 0; border-radius: 1.5rem;">
                            <table style="border-collapse: collapse; width: 100%; margin-top: -5px">
                                <tbody>
                                    <tr style="border-bottom:2px solid lightgray">
                                        <td rowspan="2">
                                            <div style="width: 70%; float: left; text-align: center;">
                                                <img src="~/Content/img/image010.png" width="60" height="60" />
                                                <br><span>Wind <br><span id="total_mw"> (0 MW)</span></span>
                                            </div>
                                            <div style="width: 30%; float: left;">
                                                <img src="~/Content/img/image002.png" width="40" height="40" />
                                            </div>
                                        </td>
                                        <td  style=" padding: 0rem !important; font-size: 12px !important;">
                                            <span style="font-size:14px" class="d-tooltip">
                                                Last Day Energy
                                                <span class="d-tooltiptext" id="w_tar_enrgy"><b>0</b> MWH</span>
                                            </span><br>
                                            <span style="font-size:15px" id="lastday_enrgy"><b> 0</b></span>
                                            <span style="font-size:12px">MWh</span><br>
                                            <span style="font-size:12px" id="lastday_enrgy_var">(0 %)</span><br>
                                        </td>
                                        <td  style=" padding: 0rem !important; font-size: 12px !important;">
                                            <span style="font-size:14px" class="d-tooltip">
                                                MTD Energy
                                                <span class="d-tooltiptext" id="w_m_tar_enrgy"><b>0</b> GWh</span>
                                            </span><br>
                                            <span style="font-size:15px" id="manthly_enrgy"><b>0</b></span>
                                            <span style="font-size:12px">GWh</span><br>
                                            <span style="font-size:12px" id="manthly_enrgy_var">(0 %)</span><br>
                                        </td>
                                        <td  style=" padding: 0rem !important; font-size: 12px !important;">
                                            <span style="font-size:14px" class="d-tooltip">
                                                YTD Energy
                                                <span class="d-tooltiptext" id="w_y_tar_enrgy"><b>0</b> GWh</span>
                                            </span><br>
                                            <span style="font-size:15px" id="yearly_enrgy"><b>0</b></span>
                                            <span style="font-size:12px">GWh</span><br>
                                            <span style="font-size:12px" id="yearly_enrgy_var">(0 %)</span><br>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td  style=" padding: 0rem !important; font-size: 12px !important;">
                                            <span style="font-size:14px" class="d-tooltip">
                                                Last Day AWS
                                                <span class="d-tooltiptext" id="w_ws_tar"><b>0</b> m/s</span>
                                            </span><br>
                                            <span style="font-size:15px" id="lastday_wspeed"><b>0</b></span>
                                            <span style="font-size:12px">m/s</span><br>
                                            <span style="font-size:12px" id="lastday_wspeed_var">(%)</span><br>
                                        </td>
                                        <td  style=" padding: 0rem !important; font-size: 12px !important;">
                                            <span style="font-size:14px" class="d-tooltip">
                                                MTD AWS
                                                <span class="d-tooltiptext" id="w_ws_tar_m"><b>0</b> m/s</span>
                                            </span><br>
                                            <span style="font-size:15px" id="monthly_wspeed"><b>0</b></span>
                                            <span style="font-size:12px">m/s</span><br>
                                            <span style="font-size:12px" id="monthly_wspeed_var">(0 %)</span><br>
                                        </td>
                                        <td  style=" padding: 0rem !important; font-size: 12px !important;">
                                            <span style="font-size:14px" class="d-tooltip">
                                                YTD AWS
                                                <span class="d-tooltiptext" id="w_ws_tar_y"><b>0</b> m/s</span>
                                            </span><br>
                                            <span style="font-size:15px" id="yearly_wspeed"><b>0</b></span>
                                            <span style="font-size:12px">m/s</span><br>
                                            <span style="font-size:12px" id="yearly_wspeed_var">(0 %)</span><br>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="card tbl-head" style="max-height: 135px; height: 135px; width: 100%; padding: 0.5rem 1rem 0 0; border-radius: 1.5rem;">
                            <table style="border-collapse: collapse; width: 100%; margin-top:-5px">
                                <tbody>
                                    <tr style="border-bottom:2px solid lightgray">
                                        <td rowspan="2">
                                            <div style="width: 70%; float: left; text-align: center;">
                                                <img src="~/Content/img/image019.png" width="60" height="60" />
                                                <br><span>Solar <br><span id="total_ac_mw"> (0 MW)</span></span>
                                            </div>
                                            <div style="width: 30%; float: left;">
                                                <img src="~/Content/img/image020.png" width="40" height="40" />
                                            </div>
                                        </td>
                                        <td  style=" padding: 0rem !important; font-size: 13px !important;">
                                            <span style="font-size:14px" class="d-tooltip">
                                                Last Day Energy
                                                <span class="d-tooltiptext" id="s_l_tar_energy"><b>0</b> MWh</span>
                                            </span><br>
                                            <span style="font-size:15px" id="lastday_solar_enrgy"><b>0</b></span>
                                            <span style="font-size:12px">MWh</span><br>
                                            <span style="font-size:12px" id="lastday_solar_enrgy_var">(0 %)</span><br>
                                        </td>
                                        <td  style=" padding: 0rem !important; font-size: 12px !important;">
                                            <span style="font-size:14px" class="d-tooltip">
                                                    MTD Energy
                                                    <span class="d-tooltiptext" id="s_m_tar_energy"><b>0</b> GWh</span>
                                            </span><br>
                                            <span style="font-size:15px" id="monthly_solar_enrgy"><b>0</b></span>
                                            <span style="font-size:12px">GWh</span><br>
                                            <span style="font-size:12px" id="monthly_solar_enrgy_var">(0 %)</span><br>
                                        </td>
                                        <td  style=" padding: 0rem !important; font-size: 12px !important;">
                                            <span style="font-size:14px" class="d-tooltip">
                                                YTD Energy
                                                <span class="d-tooltiptext" id="s_y_tar_energy"><b>0</b> GWh</span>
                                            </span><br>
                                            <span style="font-size:15px" id="yearly_solar_enrgy"><b>0</b></span>
                                            <span style="font-size:12px">GWh</span><br>
                                            <span style="font-size:12px" id="yearly_solar_enrgy_var">(0 %)</span><br>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td  style=" padding: 0rem !important; font-size: 12px !important;">
                                            <span style="font-size:14px" class="d-tooltip">
                                                Last Day AIR
                                                <span class="d-tooltiptext" id="s_l_tar_ir"><b>0</b> kWh/m<sup>2</sup></span>
                                            </span><br>
                                            <span style="font-size:15px" id="lastday_ir"><b>0</b></span>
                                            <span style="font-size:12px">kWh/m<sup>2</sup></span><br>
                                            <span style="font-size:12px" id="lastday_ir_var">(0 %)</span><br>
                                        </td>
                                        <td  style=" padding: 0rem !important; font-size: 12px !important;">
                                            <span style="font-size:14px" class="d-tooltip">
                                                MTD AIR
                                                <span class="d-tooltiptext" id="s_m_tar_ir"><b>0</b> kWh/m<sup>2</sup></span>
                                                </span><br>
                                                <span style="font-size:15px" id="monthly_ir"><b>0</b></span>
                                                <span style="font-size:12px">kWh/m<sup>2</sup></span><br>
                                                <span style="font-size:12px" id="monthly_ir_var">(0 %)</span><br>
                                        </td>
                                        <td  style=" padding: 0rem !important; font-size: 12px !important;">
                                            <span style="font-size:14px" class="d-tooltip">
                                                YTD AIR
                                            <span class="d-tooltiptext" id="s_y_tar_ir"><b>0</b> kWh/m<sup>2</sup></span>
                                            </span><br>
                                            <span style="font-size:15px" id="yearly_ir"><b>0</b></span>
                                            <span style="font-size:12px">kWh/m<sup>2</sup></span><br>
                                            <span style="font-size:12px" id="yearly_ir_var">(0 %)</span><br>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
                <hr style="margin-top: -0.7rem; margin-bottom: 0.2rem;">
                <div class="card-header" style="padding: 0.2rem 1.25rem;">
                    <h4 class="card-title text-center">Generation Trend</h4>
                </div>
                <br>
                <div class="row" style="margin-top:-1.2rem; margin-bottom:-1rem;">
                    <div class="col-sm-4">
                        <div class="form-group row">
                            <div class="col-sm-4">
                                <div class="custom-control custom-radio ">
                                    <input class="custom-control-input" type="radio" id="customRadio1" name="customRadio" value="1" onclick="chartSelection(1)" checked>
                                    <label for="customRadio1" class="custom-control-label">Last 10 Days</label>
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="custom-control custom-radio ">
                                    <input class="custom-control-input" type="radio" id="customRadio2" name="customRadio" value="2" onclick="chartSelection(2)">
                                    <label for="customRadio2" class="custom-control-label">Monthly</label>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-8"></div>
                </div>
                <hr >
                <div class="row">
                    <div class="col-sm-6">
                        <canvas id="energy_wind" style="min-height: 360px; height: 360px; max-height: 360px; max-width: 97%; width: 575px; margin-top: -1rem "></canvas>
                    </div>
                    <div class="col-sm-6">
                        <canvas id="energy_solar" style="min-height: 360px; height: 360px; max-height:360px; max-width: 97%; width: 575px; margin-top: -1rem "></canvas>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>
<!-- /.content-wrapper -->
<script src="~/Content/theme/plugins/jquery/jquery.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.0/jquery.min.js"></script>
<script src="~/Content/theme/plugins/moment/moment.min.js"></script>
<script src="~/Content/theme/dist/js/comman.js"></script>
<script src="~/Content/theme/plugins/daterangepicker/daterangepicker.js" defer></script>
<script src="~/Content/theme/plugins/tempusdominus-bootstrap-4/js/tempusdominus-bootstrap-4.min.js"></script>
<script src="~/Content/theme/plugins/summernote/summernote-bs4.min.js"></script>
<script src="~/Content/theme/plugins/chart.js/Chart.min.js"></script>
<script src="~/Content/theme/plugins/multiple-select/dist/multiple-select.min.js" defer></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js@3.0.0/dist/chart.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@2.0.0-rc"></script>
<script type="text/javascript">
    var userRole = "@Html.Raw(@HttpContextAccessor.HttpContext.Session.GetString("role"))";
    var UserID = getCookie('userid');
    var wsite_list = "@Html.Raw(windSiteList.TrimEnd(','))";
    var ssite_list = "@Html.Raw(solarSiteList.TrimEnd(','))";
    var chartTitle = "";
    var fyear = "";
    var fdate = "";
    var monthdate = "";
    var month = "";
    var displaychart = { "wind": false, "solar": false };
    var solarChanged = 0;
    var windChanged = 0;
    var exp_flage = false;
    window.onload = function ()
    {
        updateLoginLog(UserID, "login");
        getYear();
        var today = new Date();
        fyear     = getFinancialYear(today);
        fdate     = getFinancialYearDate(fyear);
        monthdate = GetMonthDate(today);
        month     = today.getMonth() + 1;
        tendays   = GetLastTendays();
        document.getElementById("fyearlebel").innerHTML = fyear;
        if (userRole == "User" && !wsite_list && !ssite_list) {
            $('#wind_site,#solar_site').multipleSelect();
             return;
        }
        else
        {
            if (userRole == "User")
            {
                if (ssite_list)
                {
                    if (!wsite_list)
                    {
                        $('#wind_site').multipleSelect();
                    }
                    getSolarSite();
                    displaychart.solar = true;
                }
                if (wsite_list)
                {
                    if (!ssite_list)
                    {
                        $('#solar_site').multipleSelect();
                    }
                    displaychart.wind = true;
                    getWindSite();
                }
            }
            else
            {
                getWindSite();
                getSolarSite();
                displaychart.wind = true;
                displaychart.solar = true;
            }
        }
        var isOnloadGraph        = 1;
        var isOnloadGraphMonthly = 0;
        if (displaychart.solar == true)
        {
            GetSolarData(tendays, "Last 10 Days", isOnloadGraph);
            GetSolarDataMonthly(monthdate, "Monthly", isOnloadGraphMonthly);
        }
        if (displaychart.wind == true)
        {
            GetWindChartData(tendays, "Last 10 Days", isOnloadGraph);
            GetWindChartDataMonthly(monthdate, "Monthly", isOnloadGraphMonthly);
        }
    }
    //AOP Vs Exp Switch
    function dataChange()
    {
        var checkBox = document.getElementById("switchEvent");
        //console.log(checkBox.checked);
        if (checkBox.checked == true) {
            exp_flage = true;
            GetWindDataByLastDay();
            GetSolarDataByLastDay();
            var isOnloadGraph = 1;
            var isOnloadGraphMonthly = 0;
            if (displaychart.solar == true) {
                GetSolarData(tendays, "Last 10 Days", isOnloadGraph);
                GetSolarDataMonthly(monthdate, "Monthly", isOnloadGraphMonthly);
            }
            if (displaychart.wind == true) {
                GetWindChartData(tendays, "Last 10 Days", isOnloadGraph);
                GetWindChartDataMonthly(monthdate, "Monthly", isOnloadGraphMonthly);
            }
        }
        else
        {
            exp_flage = false;
            $("#customRadio2").prop('checked', false);
            $("#customRadio1").prop('checked', true);
            GetWindDataByLastDay();
            GetSolarDataByLastDay();
            var isOnloadGraph = 1;
            var isOnloadGraphMonthly = 0;
            if (displaychart.solar == true) {
                GetSolarData(tendays, "Last 10 Days", isOnloadGraph);
                GetSolarDataMonthly(monthdate, "Monthly", isOnloadGraphMonthly);
            }
            if (displaychart.wind == true) {
                GetWindChartData(tendays, "Last 10 Days", isOnloadGraph);
                GetWindChartDataMonthly(monthdate, "Monthly", isOnloadGraphMonthly);
            }
        }
        //console.log("Oncheck ::",exp_flage);
    }
    function changedSolarSite()
    {
        solarChanged = 1;
    }
    function changedWindSite()
    {
        windChanged = 1;
    }
    function getEmailReportTime()
    {
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetEmailTime", "Home")',
            contentType: "application/json; charset=utf-8",
            datatype: "html",
            success: function (result, status, xhr)
            {
                if (result > 0) {
                }
            }
        });
    }
   //updateLoginLog()
    function updateLoginLog(UserID, userRole)
    {
        $.ajax({
            type: "GET",
            url: '@Url.Action("UpdateLoginLog", "Home")' + '?userId=' + UserID + "&userRole=" + userRole ,
            contentType: "application/json; charset=utf-8",
            datatype: "html",
            success: function (result, status, xhr)
            {
                consol.log("Result " + result + " status :" + status);
            }
        });
    }
    function getYear()
    {
        $.ajax({
            type: "GET",
            url: '@Url.Action("GetFinacialYear", "Dashboard")',
            contentType: "application/json; charset=utf-8",
            datatype: "html",
            success: function (result, status, xhr)
            {
                var options = "";
                options += '<option value="">Select Financial Year</option>';
                for (var i = 0; i < result.length; i++)
                {
                    if (result[i].financial_year == fyear)
                    {
                        options += '<option value="' + result[i].financial_year + '" selected>' + result[i].financial_year + '</option>';
                    }
                    else
                    {
                        options += '<option value="' + result[i].financial_year + '">' + result[i].financial_year + '</option>';
                    }
                }
                $("#fy").html(options);
                $('select#fy').multipleSelect({
                    filter: true
                })
            }
        });
    }
    function getWindSite()
    {
        var site_ids        = "@Html.Raw(windSiteList.TrimEnd(','))";
        var wind_total_mw   = 0;
        $.ajax({
            type: "GET",
            url: '@Url.Action("GetWindSiteList", "Dashboard")' + '?sitelist=' + site_ids,
            contentType: "application/json; charset=utf-8",
            datatype: "html",
            success: function (result, status, xhr)
            {
                var options = "";
                for (var i = 0; i < result.length; i++)
                {
                    wind_total_mw += result[i].total_mw;
                    options += '<option value="' + result[i].site_master_id + '">' + result[i].site + '</option>';
                }
                $("#wind_site").html(options);
                $('select#wind_site').multipleSelect({
                    "minimumCountSelected": 2,
                    "placeholder": "Select Wind Site(s)",
                    filter:true
                });

                $('#wind_site').multipleSelect("setSelects", site_ids.split(","));
                document.getElementById("total_mw").innerHTML = "(" + wind_total_mw.toFixed(0) + " MW)";
                GetWindDataByLastDay();
            }
        });
    }
    function getSolarSite()
    {
        var site_ids = "@Html.Raw(solarSiteList.TrimEnd(','))";
        var solar_total_mw = 0;
        $.ajax({
            type: "GET",
            url: '@Url.Action("GetSolarSiteList", "Dashboard")' + '?sitelist=' + site_ids,
            contentType: "application/json; charset=utf-8",
            datatype: "html",
            success: function (result, status, xhr)
            {
                var options = "";
                for (var i = 0; i < result.length; i++)
                {
                    solar_total_mw += result[i].ac_capacity;
                    options += '<option value="' + result[i].site_master_solar_id + '">' + result[i].site + '</option>';
                }
                $("#solar_site").html(options);
                $('select#solar_site').multipleSelect({
                   "minimumCountSelected": 2,
                    "placeholder": "Select Solar Site(s)",
                    filter: true
                });
                $('#solar_site').multipleSelect("setSelects", site_ids.split(","));
                document.getElementById("total_ac_mw").innerHTML = "(" + solar_total_mw.toFixed(0) + " MW)";
                GetSolarDataByLastDay();
            }
        });
    }
    function GetReport()
    {
        if (userRole == "User" && !wsite_list && !ssite_list)
        {
            return;
        }
        else
        {
            if (userRole == "User")
            {
                if (ssite_list)
                {
                    
                    GetSolarDataByLastDay();
                    if (solarChanged == 1)
                    {
                        console.log("inside ");
                        if ($("#customRadio1").is(":checked"))
                        {
                            chartTitle        = "Last 10 Days";
                            var graphGenerate = 1;
                            GetSolarData(tendays, chartTitle, graphGenerate);
                            var graphGenerateMonthly = 0;
                        }
                        if ($("#customRadio2").is(":checked"))
                        {
                            chartTitle               = "Monthly";
                            var graphGenerateMonthly = 1;
                            GetSolarDataMonthly(monthdate, chartTitle, graphGenerateMonthly);
                            var graphGenerate = 0;
                        }
                    }
                }
                if (wsite_list)
                {
                   
                    GetWindDataByLastDay();
                    if (windChanged == 1)
                    {
                        console.log("inside2 ");
                        if ($("#customRadio1").is(":checked"))
                        {
                            chartTitle        = "Last 10 Days";
                            var graphGenerate = 1;
                            GetWindChartData(tendays, chartTitle, graphGenerate);
                            var graphGenerateMonthly = 0;
                        }
                        if ($("#customRadio2").is(":checked"))
                        {
                            chartTitle               = "Monthly";
                            var graphGenerateMonthly = 1;
                            GetWindChartDataMonthly(monthdate, chartTitle, graphGenerateMonthly);
                            var graphGenerate = 0;
                        }
                    }
                }
            }
            else
            {
               
                GetWindDataByLastDay();
                GetSolarDataByLastDay();
                if ($("#customRadio1").is(":checked"))
                {
                    chartTitle               = "Last 10 Days";
                    var graphGenerate        = 1;
                    var graphGenerateMonthly = 0;
                    if (solarChanged == 1)
                    {
                        GetSolarData(tendays, chartTitle, graphGenerate);
                    }
                    if (windChanged == 1)
                    {
                        GetWindChartData(tendays, chartTitle, graphGenerate);
                    }
                }
                if ($("#customRadio2").is(":checked"))
                {
                    chartTitle               = "Monthly";
                    var graphGenerateMonthly = 1;
                    var graphGenerate        = 0;
                    if (solarChanged == 1)
                    {
                        GetSolarDataMonthly(monthdate, chartTitle, graphGenerateMonthly);
                    }
                    if (windChanged == 1)
                    {
                        GetWindChartDataMonthly(monthdate, chartTitle, graphGenerateMonthly);
                    }
                }
            }
        }
    }
    function GetWindAndSolarMW()
    {
        let wsite = "";
        let ssite = "";
        $('select#wind_site option:selected').each(function () {
            wsite += $(this).val() + ",";
        });
        wsite = wsite != "" ? wsite.slice(0, -1) : wsite;
        $('select#solar_site option:selected').each(function () {
            ssite += $(this).val() + ",";
        });
        ssite = ssite != "" ? ssite.slice(0, -1) : ssite;
        $.ajax({
            type: "GET",
            url: '@Url.Action("GetTotalMWforDashbord", "Dashboard")' + '?w_site=' + wsite + '&s_site=' + ssite,
            contentType: "application/json; charset=utf-8",
            datatype: "html",
            success: function (result, status, xhr)
            {
                var options = "";
                for (var i = 0; i < result.length; i++)
                {
                    solar_total_mw += result[i].ac_capacity;
                }
                document.getElementById("total_ac_mw").innerHTML = "(" + solar_total_mw.toFixed(0) + " MW)";
            }
        });
    }
    // Wind call
    function GetWindDataByLastDay()
    {
        let site = "";
        $('select#wind_site option:selected').each(function ()
        {
            site += $(this).val() + ",";
        });
        site    = site != "" ? site.slice(0, -1) : site;
        var FY  = fyear;
        var date = GetPreviousDate();
        $.ajax({
            type: "GET",
            url: '@Url.Action("GetWindDashboardDataByLastDay", "Dashboard")' + '?FY=' + FY + '&sites=' + site + '&date=' + date,
            contentType: "application/json; charset=utf-8",
            datatype: "html",
            success: function (result, status, xhr)
            {
                if (result.length > 0) {
                    var wind_lastday_energy = 0;
                    var wind_lastday_energy_target = 0;
                    var wind_lastday_wspeed = 0;
                    var wind_lastday_wspeed_target = 0;
                    var wcnt = 0;
                    var lastVariant_energy = 0;
                    var lastVariant_wspeed = 0;
                    var total_capacity = 0;
                    var total_capActWind = 0;
                    var total_capTarWind = 0;
                    var last_day_exp = 0;
                    for (var i = 0; i < result.length; i++)
                    {
                        wind_lastday_energy += result[i].jmrkwh;
                        wind_lastday_energy_target += result[i].tarkwh;
                        total_capacity += result[i].total_mw;
                        total_capActWind += result[i].wind * result[i].total_mw;
                        total_capTarWind += result[i].tarwind * result[i].total_mw;
                        last_day_exp += result[i].expected_power;
                        wcnt++;
                    }
                    if (total_capacity != 0)
                    {
                        wind_lastday_wspeed = total_capActWind / total_capacity;
                        wind_lastday_wspeed_target = total_capTarWind / total_capacity;
                    }
                    if (wind_lastday_wspeed_target != 0)
                    {
                        lastVariant_wspeed = ((wind_lastday_wspeed - wind_lastday_wspeed_target) / wind_lastday_wspeed_target) * 100;
                    }
                    if (exp_flage == true)
                    {
                        if (last_day_exp != 0)
                        {
                            lastVariant_energy = (((wind_lastday_energy)) - (last_day_exp)) / (last_day_exp) * 100;
                        }
                        document.getElementById("w_tar_enrgy").innerHTML = "<b>" + (last_day_exp * 1000).toFixed(1) + "</b> MWh";
                    }
                    else
                    {
                        if (wind_lastday_energy_target != 0)
                        {
                            //lastVariant_energy = (((wind_lastday_energy / 1000)) - (wind_lastday_energy_target / 1000)) / (wind_lastday_energy_target / 1000) * 100;
                            lastVariant_energy = (((wind_lastday_energy *1000)) - (wind_lastday_energy_target *1000)) / (wind_lastday_energy_target * 1000) * 100;
                        }
                        document.getElementById("w_tar_enrgy").innerHTML = "<b>" + (wind_lastday_energy_target * 1000).toFixed(1) + "</b> MWh";
                    }
                    document.getElementById("lastday_enrgy").innerHTML = "<b>" + (wind_lastday_energy * 1000).toFixed(1) + "</b>";
                    document.getElementById("lastday_wspeed").innerHTML = "<b>" + wind_lastday_wspeed.toFixed(1) + "</b>";
                    document.getElementById("lastday_enrgy_var").innerHTML = "(" + lastVariant_energy.toFixed(1) + " %)";
                    document.getElementById("lastday_wspeed_var").innerHTML = "(" + lastVariant_wspeed.toFixed(1) + " %)";
                    document.getElementById("w_ws_tar").innerHTML = "<b>" + wind_lastday_wspeed_target.toFixed(1) + "</b> m/s";

                    //document.getElementById("lastday_enrgy").innerHTML = "<b>" + (wind_lastday_energy / 1000).toFixed(1) + "</b>";
                    //document.getElementById("lastday_wspeed").innerHTML = "<b>" + wind_lastday_wspeed.toFixed(1) + "</b>";
                    //document.getElementById("lastday_enrgy_var").innerHTML = "(" + lastVariant_energy.toFixed(1) + " %)";
                    //document.getElementById("lastday_wspeed_var").innerHTML = "(" + lastVariant_wspeed.toFixed(1) + " %)";
                    //document.getElementById("w_tar_enrgy").innerHTML = "<b>" + (wind_lastday_energy_target / 1000).toFixed(1) + "</b> MWh";
                    //document.getElementById("w_ws_tar").innerHTML = "<b>" + wind_lastday_wspeed_target.toFixed(1) + "</b> m/s";
                   
                }
                else
                {
                    document.getElementById("lastday_enrgy").innerHTML = "<b>0.0</b>";
                    document.getElementById("lastday_wspeed").innerHTML = "<b>0.0</b>";
                    document.getElementById("lastday_enrgy_var").innerHTML = "(0 %)";
                    document.getElementById("lastday_wspeed_var").innerHTML = "(0 %)";
                    document.getElementById("w_tar_enrgy").innerHTML = "<b>0.0</b> MWh";
                    document.getElementById("w_ws_tar").innerHTML = "<b>0.0</b> m/s";
                }
                GetWindDataByCurrentMonth();
            }
        });
    }
    function GetWindDataByCurrentMonth()
    {
        let site = "";
        $('select#wind_site option:selected').each(function ()
        {
            site += $(this).val() + ",";
        });
        site = site != "" ? site.slice(0, -1) : site;
        var startDate = monthdate.startdate;
        var endDate   = monthdate.enddate;
        var FY        = fyear;
        $.ajax({
            type: "GET",
            url: '@Url.Action("GetWindDashboardDataByCurrentMonth", "Dashboard")' + '?startDate=' + startDate + '&endDate=' + endDate + '&FY=' + FY + '&sites=' + site + '&month=' + month,
            contentType: "application/json; charset=utf-8",
            datatype: "html",
            success: function (result, status, xhr)
            {
                if (result.length > 0)
                {
                    var wind_monthly_energy         = 0;
                    var wind_monthly_energy_target  = 0;
                    var wind_monthly_wspeed         = 0;
                    var wind_monthly_wspeed_target  = 0;
                    var monthly_var_energy          = 0;
                    var monthly_var_wspeed          = 0;
                    var total_capacity              = 0;
                    var total_capActWind            = 0;
                    var total_capTarWind            = 0;
                    var wcnt                        = 0;
                    var wind_monthly_exp            = 0;
                    for (var i = 0; i < result.length; i++)
                    {
                        wind_monthly_energy         += result[i].jmrkwh;
                        wind_monthly_energy_target  += result[i].tarkwh;
                        total_capacity              += result[i].total_mw;
                        total_capActWind            += result[i].wind * result[i].total_mw;
                        total_capTarWind            += result[i].tarwind * result[i].total_mw;
                        wind_monthly_exp            += result[i].expected_power;
                        wcnt++;
                    }
                    if (total_capacity != 0)
                    {
                        wind_monthly_wspeed         = total_capActWind / total_capacity;
                        wind_monthly_wspeed_target  = total_capTarWind / total_capacity;
                    }
                    if (wind_monthly_wspeed_target != 0)
                    {
                        monthly_var_wspeed = ((wind_monthly_wspeed - wind_monthly_wspeed_target) / wind_monthly_wspeed_target) * 100;
                    }
                    if (exp_flage == true)
                    {
                        if (wind_monthly_exp != 0)
                        {
                            //monthly_var_energy = (((wind_monthly_energy / 1000) - (wind_monthly_exp / 1000)) / (wind_monthly_exp / 1000)) * 100;
                            monthly_var_energy = (((wind_monthly_energy) - (wind_monthly_exp)) / (wind_monthly_exp)) * 100;
                        }
                        document.getElementById("w_m_tar_enrgy").innerHTML = "<b>" + (wind_monthly_exp).toFixed(1) + "</b> GWh";
                    }
                    else
                    {
                        if (wind_monthly_energy_target != 0)
                        {
                            monthly_var_energy = (((wind_monthly_energy) - (wind_monthly_energy_target)) / (wind_monthly_energy_target)) * 100;
                        }
                        document.getElementById("w_m_tar_enrgy").innerHTML = "<b>" + (wind_monthly_energy_target).toFixed(1) + "</b> GWh";
                    }
                   
                    document.getElementById("manthly_enrgy").innerHTML = "<b>" + (wind_monthly_energy).toFixed(1) + "</b>";
                    document.getElementById("monthly_wspeed").innerHTML = "<b>" + wind_monthly_wspeed.toFixed(1) + "</b>";
                    document.getElementById("manthly_enrgy_var").innerHTML = "(" + monthly_var_energy.toFixed(1) + " %)";
                    document.getElementById("monthly_wspeed_var").innerHTML = "(" + monthly_var_wspeed.toFixed(1) + " %)";
                    document.getElementById("w_ws_tar_m").innerHTML = "<b>" + (wind_monthly_wspeed_target).toFixed(1) + "</b> m/s";

                    //document.getElementById("manthly_enrgy").innerHTML = "<b>" + (wind_monthly_energy / 1000000).toFixed(1) + "</b>";
                    //document.getElementById("monthly_wspeed").innerHTML = "<b>" + wind_monthly_wspeed.toFixed(1) + "</b>";
                    //document.getElementById("manthly_enrgy_var").innerHTML = "(" + monthly_var_energy.toFixed(1) + " %)";
                    //document.getElementById("monthly_wspeed_var").innerHTML = "(" + monthly_var_wspeed.toFixed(1) + " %)";
                    //document.getElementById("w_m_tar_enrgy").innerHTML = "<b>" + (wind_monthly_energy_target / 1000000).toFixed(1) + "</b> GWh";
                    //document.getElementById("w_ws_tar_m").innerHTML = "<b>" + (wind_monthly_wspeed_target).toFixed(1) + "</b> m/s";

                }
                else
                {
                    document.getElementById("manthly_enrgy").innerHTML = "<b>0.0</b>";
                    document.getElementById("monthly_wspeed").innerHTML = "<b>0.0</b>";
                    document.getElementById("manthly_enrgy_var").innerHTML = "(0 %)";
                    document.getElementById("monthly_wspeed_var").innerHTML = "(0 %)";
                    document.getElementById("w_m_tar_enrgy").innerHTML = "<b>0.0</b> GWh";
                    document.getElementById("w_ws_tar_m").innerHTML = "<b>0.0</b> m/s";
                }
                GetWindDataByYearly();
            }
        });
    }
    function GetWindDataByYearly()
    {
        let site = "";
        $('select#wind_site option:selected').each(function ()
        {
            site += $(this).val() + ",";
        });
        site = site != "" ? site.slice(0, -1) : site;
        var startDate = fdate.startdate;
        var endDate   = GetPreviousDate();
        var FY        = fyear;
        $.ajax({
            type: "GET",
            url: '@Url.Action("GetWindDashboardDataByYearly", "Dashboard")' + '?startDate=' + startDate + '&endDate=' + endDate + '&FY=' + FY + '&sites=' + site,
            contentType: "application/json; charset=utf-8",
            datatype: "html",
            success: function (result, status, xhr)
            {
                if (result.length > 0)
                {
                    var wind_yearly_energy        = 0;
                    var wind_yearly_wspeed        = 0;
                    var wind_yearly_energy_target = 0;
                    var wind_yearly_wspeed_target = 0;
                    var total_capacity            = 0;
                    var total_capActWind          = 0;
                    var total_capTarWind          = 0;
                    var yearly_var_energy         = 0;
                    var yearly_var_wspeed         = 0;
                    var wcnt                      = 0;
                    var wind_yearly_exp           = 0;
                    for (var i = 0; i < result.length; i++)
                    {
                        wind_yearly_energy          += result[i].jmrkwh;
                        wind_yearly_energy_target   += result[i].tarkwh;
                        total_capacity              += result[i].total_mw;
                        total_capActWind            += result[i].wind * result[i].total_mw;
                        total_capTarWind            += result[i].tarwind * result[i].total_mw;
                        wind_yearly_exp             += result[i].expected_power;
                        wcnt++;
                    }
                    if (total_capacity != 0)
                    {
                        wind_yearly_wspeed          = total_capActWind / total_capacity;
                        wind_yearly_wspeed_target   = total_capTarWind / total_capacity;
                    }
                    if (wind_yearly_wspeed_target != 0)
                    {
                        yearly_var_wspeed = ((wind_yearly_wspeed - wind_yearly_wspeed_target) / wind_yearly_wspeed_target) * 100;
                    }
                    if (exp_flage == true)
                    {
                        if (wind_yearly_exp != 0)
                        {
                            yearly_var_energy = (((wind_yearly_energy) - (wind_yearly_exp)) / (wind_yearly_exp)) * 100;
                        }
                        document.getElementById("w_y_tar_enrgy").innerHTML = "<b>" + (wind_yearly_exp).toFixed(1) + "</b> GWh";
                    }
                    else
                    {
                        if (wind_yearly_energy_target != 0)
                        {
                            yearly_var_energy = (((wind_yearly_energy) - (wind_yearly_energy_target)) / (wind_yearly_energy_target)) * 100;
                        }
                        document.getElementById("w_y_tar_enrgy").innerHTML = "<b>" + (wind_yearly_energy_target).toFixed(1) + "</b> GWh";
                    }
                    
                    document.getElementById("yearly_enrgy").innerHTML = "<b>" + (wind_yearly_energy).toFixed(1) + "</b>";
                    document.getElementById("yearly_wspeed").innerHTML = "<b>" + (wind_yearly_wspeed).toFixed(1) + "</b>";
                    //document.getElementById("w_y_tar_enrgy").innerHTML = "<b>" + (wind_yearly_energy_target / 1000).toFixed(1) + "</b> GWh";
                    document.getElementById("w_ws_tar_y").innerHTML = "<b>" + (wind_yearly_wspeed_target).toFixed(1) + "</b> m/s";
                    document.getElementById("yearly_enrgy_var").innerHTML = "(" + yearly_var_energy.toFixed(1) + " %)";
                    document.getElementById("yearly_wspeed_var").innerHTML = "(" + yearly_var_wspeed.toFixed(1) + " %)";

                    //document.getElementById("yearly_enrgy").innerHTML = "<b>" + (wind_yearly_energy / 1000000).toFixed(1) + "</b>";
                    //document.getElementById("yearly_wspeed").innerHTML = "<b>" + (wind_yearly_wspeed).toFixed(1) + "</b>";
                    //document.getElementById("w_y_tar_enrgy").innerHTML = "<b>" + (wind_yearly_energy_target / 1000000).toFixed(1) + "</b> GWh";
                    //document.getElementById("w_ws_tar_y").innerHTML = "<b>" + (wind_yearly_wspeed_target).toFixed(1) + "</b> m/s";
                    //document.getElementById("yearly_enrgy_var").innerHTML = "(" + yearly_var_energy.toFixed(1) + " %)";
                    //document.getElementById("yearly_wspeed_var").innerHTML = "(" + yearly_var_wspeed.toFixed(1) + " %)";

                }
                else
                {
                    document.getElementById("yearly_enrgy").innerHTML = "<b>0.0</b>";
                    document.getElementById("yearly_wspeed").innerHTML = "<b>0.0</b>";
                    document.getElementById("w_y_tar_enrgy").innerHTML = "<b>0.0</b> GWh";
                    document.getElementById("w_ws_tar_y").innerHTML = "<b>0.0</b> m/s";
                    document.getElementById("yearly_enrgy_var").innerHTML = "(0 %)";
                    document.getElementById("yearly_wspeed_var").innerHTML = "(0 %)";
                }
            }
        });
    }
    // Solar call
    function GetSolarDataByLastDay()
    {
        let solar_site = "";
        $('select#solar_site option:selected').each(function ()
        {
            solar_site += $(this).val() + ",";
        });
        solar_site  = solar_site != "" ? solar_site.slice(0, -1) : solar_site;
        var FY      = fyear;
        var date    = GetPreviousDate();
        $.ajax({
            type: "GET",
            url: '@Url.Action("GetSolarDashboardDataByLastDay", "Dashboard")' + '?FY=' + FY + '&sites=' + solar_site + '&date=' + date,
            contentType: "application/json; charset=utf-8",
            datatype: "html",
            success: function (result, status, xhr)
            {
                if (result.length > 0)
                {
                    var lastday_energy      = 0;
                    var lastday_ir          = 0;
                    var lastday_energy_tar  = 0;
                    var lastday_ir_tar      = 0;
                    var lastday_var_energy  = 0;
                    var lastday_var_ir      = 0;
                    var total_capacity      = 0;
                    var total_capActIr      = 0;
                    var total_capTarIr      = 0;
                    var cnt                 = 0;
                    var last_day_exp        = 0;
                    for (var i = 0; i < result.length; i++)
                    {
                        lastday_energy      += result[i].jmrkwh;
                        lastday_energy_tar  += result[i].tarkwh;
                        total_capacity      += result[i].ac_capacity;
                        last_day_exp        += result[i].expected_power;
                        total_capActIr      += result[i].ir * result[i].ac_capacity;
                        total_capTarIr      += result[i].tarIR * result[i].ac_capacity;
                        cnt++;
                    }
                    if (total_capacity != 0)
                    {
                        lastday_ir      = total_capActIr / total_capacity;
                        lastday_ir_tar  = total_capTarIr / total_capacity;
                    }
                    if (lastday_ir_tar != 0)
                    {
                        lastday_var_ir = ((lastday_ir - lastday_ir_tar) / lastday_ir_tar) * 100;
                    }
                    if (exp_flage == true)
                    {
                        if (last_day_exp != 0)
                        {
                            lastday_var_energy = (((lastday_energy *1000) - (last_day_exp * 1000)) / (last_day_exp * 1000)) * 100;
                        }
                        document.getElementById("s_l_tar_energy").innerHTML = "<b>" + (last_day_exp * 1000).toFixed(1) + "</b> MWh";
                    }
                    else
                    {
                        if (lastday_energy_tar != 0)
                        {
                            //lastday_var_energy = (((lastday_energy / 1000) - (lastday_energy_tar / 1000)) / (lastday_energy_tar / 1000)) * 100;
                            lastday_var_energy = (((lastday_energy * 1000) - (lastday_energy_tar * 1000)) / (lastday_energy_tar * 1000)) * 100;
                        }
                        document.getElementById("s_l_tar_energy").innerHTML = "<b>" + (lastday_energy_tar *1000).toFixed(1) + "</b> MWh";
                    }
                    document.getElementById("lastday_solar_enrgy").innerHTML = "<b>" + ((lastday_energy * 1000)).toFixed(1) + "</b>";
                    document.getElementById("lastday_ir").innerHTML = "<b>" + lastday_ir.toFixed(1) + "</b>";
                    document.getElementById("lastday_solar_enrgy_var").innerHTML = "(" + lastday_var_energy.toFixed(1) + " %)";
                    document.getElementById("lastday_ir_var").innerHTML = "(" + lastday_var_ir.toFixed(1) + " %)";
                    document.getElementById("s_l_tar_ir").innerHTML = "<b>" + lastday_ir_tar.toFixed(1) + "</b> kWh/m<sup>2</sup>";
                   
                    //document.getElementById("lastday_solar_enrgy").innerHTML = "<b>" + ((lastday_energy) / 1000).toFixed(1) + "</b>";
                    //document.getElementById("lastday_ir").innerHTML = "<b>" + lastday_ir.toFixed(1) + "</b>";
                    //document.getElementById("lastday_solar_enrgy_var").innerHTML = "(" + lastday_var_energy.toFixed(1) + " %)";
                    //document.getElementById("lastday_ir_var").innerHTML = "(" + lastday_var_ir.toFixed(1) + " %)";
                    //document.getElementById("s_l_tar_energy").innerHTML = "<b>" + (lastday_energy_tar / 1000).toFixed(1) + "</b> MWh";
                    //document.getElementById("s_l_tar_ir").innerHTML = "<b>" + lastday_ir_tar.toFixed(1) + "</b> kWh/m<sup>2</sup>";
                    // New api 
                    
                }
                else
                {
                    document.getElementById("lastday_solar_enrgy").innerHTML = "<b>0.0</b>";
                    document.getElementById("lastday_ir").innerHTML = "<b>0.0</b>";
                    document.getElementById("lastday_solar_enrgy_var").innerHTML = "(0 %)";
                    document.getElementById("lastday_ir_var").innerHTML = "(0 %)";
                    document.getElementById("s_l_tar_energy").innerHTML = "<b>0.0</b> GWh";
                    document.getElementById("s_l_tar_ir").innerHTML = "<b>0.0</b> kWh/m<sup>2</sup>";
                }
                setTimeout(GetSolarDataByCurrentMonth()
                    , 5000);
            }
        });
    }

    function GetSolarDataByCurrentMonth()
    {
        let solar_site = "";
        $('select#solar_site option:selected').each(function ()
        {
            solar_site += $(this).val() + ",";
        });
        solar_site = solar_site != "" ? solar_site.slice(0, -1) : solar_site;
        var startDate = monthdate.startdate;
        var endDate   = monthdate.enddate;
        var FY        = fyear;
        $.ajax({
            type: "GET",
            url: '@Url.Action("GetSolarDashboardDataByCurrentMonth", "Dashboard")' + '?startDate=' + startDate + '&endDate=' + endDate + '&FY=' + FY + '&sites=' + solar_site + '&month=' + month,
            contentType: "application/json; charset=utf-8",
            datatype: "html",
            success: function (result, status, xhr)
            {
                if (result.length > 0)
                {
                    var monthly_energy      = 0;
                    var monthly_ir          = 0;
                    var monthly_energy_tar  = 0;
                    var monthly_ir_tar      = 0;
                    var monthly_var_energy  = 0;
                    var monthly_var_ir      = 0;
                    var total_capacity      = 0;
                    var total_capActIr      = 0;
                    var total_capTarIr      = 0;
                    var cnt                 = 0;
                    var monthl_exp          = 0;
                    for (var i = 0; i < result.length; i++)
                    {
                        monthly_energy      += result[i].jmrkwh;
                        monthly_energy_tar  += result[i].tarkwh;
                        total_capacity      += result[i].ac_capacity;
                        total_capActIr      += result[i].ir * result[i].ac_capacity;
                        total_capTarIr      += result[i].tarIR * result[i].ac_capacity;
                        monthl_exp          += result[i].expected_power;
                        cnt++;
                    }
                    if (total_capacity != 0)
                    {
                        monthly_ir      = total_capActIr / total_capacity;
                        monthly_ir_tar  = total_capTarIr / total_capacity;
                    }
                    
                    if (monthly_ir_tar != 0)
                    {
                        monthly_var_ir = ((monthly_ir - monthly_ir_tar) / monthly_ir_tar) * 100;
                    }
                    if (exp_flage == true)
                    {
                        if (monthl_exp != 0)
                        {
                            monthly_var_energy = (((monthly_energy) - (monthl_exp)) / (monthl_exp)) * 100;
                        }
                        document.getElementById("s_m_tar_energy").innerHTML = "<b>" + (monthl_exp).toFixed(1) + "</b> GWh";
                    }
                    else
                    {
                        if (monthly_energy_tar != 0)
                        {
                            //monthly_var_energy = (((monthly_energy / 1000000) - (monthly_energy_tar / 1000000)) / (monthly_energy_tar / 1000000)) * 100;
                            monthly_var_energy = (((monthly_energy) - (monthly_energy_tar)) / (monthly_energy_tar)) * 100;
                        }
                        document.getElementById("s_m_tar_energy").innerHTML = "<b>" + (monthly_energy_tar).toFixed(1) + "</b> GWh";
                    }
                    
                    // New Api data
                    document.getElementById("monthly_solar_enrgy").innerHTML = "<b>" + (monthly_energy).toFixed(1) + "</b>";
                    document.getElementById("monthly_ir").innerHTML = "<b>" + monthly_ir.toFixed(1) + "</b>";
                    document.getElementById("monthly_solar_enrgy_var").innerHTML = "(" + monthly_var_energy.toFixed(1) + " %)";
                    document.getElementById("monthly_ir_var").innerHTML = "(" + monthly_var_ir.toFixed(1) + " %)";
                    document.getElementById("s_m_tar_ir").innerHTML = "<b>" + monthly_ir_tar.toFixed(1) + "</b> kWh/m<sup>2</sup>";

                    //document.getElementById("monthly_solar_enrgy").innerHTML = "<b>" + (monthly_energy/ 1000000).toFixed(1) + "</b>";
                    //document.getElementById("monthly_ir").innerHTML = "<b>" + monthly_ir.toFixed(1)  + "</b>";
                    //document.getElementById("monthly_solar_enrgy_var").innerHTML = "(" + monthly_var_energy.toFixed(1) + " %)";
                    //document.getElementById("monthly_ir_var").innerHTML = "(" + monthly_var_ir.toFixed(1) + " %)";
                    //document.getElementById("s_m_tar_energy").innerHTML = "<b>" + (monthly_energy_tar / 1000000).toFixed(1) + "</b> GWh";
                    //document.getElementById("s_m_tar_ir").innerHTML = "<b>" + monthly_ir_tar.toFixed(1) + "</b> kWh/m<sup>2</sup>";
                }
                else
                {
                    document.getElementById("monthly_solar_enrgy").innerHTML = "<b>0.0</b>";
                    document.getElementById("monthly_ir").innerHTML = "<b>0.0</b>";
                    document.getElementById("monthly_solar_enrgy_var").innerHTML = "(0 %)";
                    document.getElementById("monthly_ir_var").innerHTML = "(0 %)";
                    document.getElementById("s_m_tar_energy").innerHTML = "<b>0.0</b> GWh";
                    document.getElementById("s_m_tar_ir").innerHTML = "<b>0.0</b> kWh/m<sup>2</sup>";
                }
            }
        });
        setTimeout(GetSolarDataByYearly()
            , 5000);
    }

    function GetSolarDataByYearly()
    {
        let solar_site = "";
        $('select#solar_site option:selected').each(function ()
        {
            solar_site += $(this).val() + ",";
        });
        solar_site = solar_site != "" ? solar_site.slice(0, -1) : solar_site;
        var startDate = fdate.startdate;
        var endDate   = GetPreviousDate();
        var FY        = fyear;
        $.ajax({
            type: "GET",
            url: '@Url.Action("GetSolarDashboardDataByYearly", "Dashboard")' + '?startDate=' + startDate + '&endDate=' + endDate + '&FY=' + FY + '&sites=' + solar_site,
            contentType: "application/json; charset=utf-8",
            datatype: "html",
            success: function (result, status, xhr)
            {
                if (result.length > 0)
                {
                    var yearly_energy     = 0;
                    var yeary_ir          = 0;
                    var yearly_energy_tar = 0;
                    var yeary_ir_tar      = 0;
                    var yearly_var_energy = 0;
                    var yearly_var_ir     = 0;
                    var total_capacity    = 0;
                    var total_capActIr    = 0;
                    var total_capTarIr    = 0;
                    var cnt               = 0;
                    var yearly_exp        = 0;
                    for (var i = 0; i < result.length; i++)
                    {
                        yearly_energy       += result[i].jmrkwh;
                        yearly_energy_tar   += result[i].tarkwh;
                        total_capacity      += result[i].ac_capacity;
                        total_capActIr      += result[i].ir * result[i].ac_capacity;
                        total_capTarIr      += result[i].tarIR * result[i].ac_capacity;
                        yearly_exp          += result[i].expected_power;
                        cnt++;
                    }
                    if (total_capacity != 0)
                    {
                        yeary_ir        = total_capActIr / total_capacity;
                        yeary_ir_tar    = total_capTarIr / total_capacity;
                    }
                    if (yeary_ir_tar != 0)
                    {
                        yearly_var_ir = ((yeary_ir - yeary_ir_tar) / yeary_ir_tar) * 100;
                    }
                    
                   
                    if (exp_flage == true)
                    {
                        if (yearly_exp != 0)
                        {
                            yearly_var_energy = (((yearly_energy) - (yearly_exp)) / (yearly_exp)) * 100;
                        }
                        document.getElementById("s_y_tar_energy").innerHTML = "<b>" + (yearly_exp).toFixed(1) + "</b> GWh";
                    }
                    else
                    {
                        if (yearly_energy_tar != 0)
                        {
                            //yearly_var_energy = (((yearly_energy / 1000000) - (yearly_energy_tar / 1000000)) / (yearly_energy_tar / 1000000)) * 100;
                            yearly_var_energy = (((yearly_energy) - (yearly_energy_tar)) / (yearly_energy_tar)) * 100;
                        }
                        document.getElementById("s_y_tar_energy").innerHTML = "<b>" + (yearly_energy_tar).toFixed(1) + "</b> GWh";
                    }
                    //document.getElementById("yearly_solar_enrgy").innerHTML = "<b>" + ((yearly_energy) / 1000000).toFixed(1) + "</b>";
                    //document.getElementById("yearly_ir").innerHTML = "<b>" + (yeary_ir).toFixed(1) + "</b>";
                    //document.getElementById("yearly_solar_enrgy_var").innerHTML = "(" + yearly_var_energy.toFixed(1) + " %)";
                    //document.getElementById("yearly_ir_var").innerHTML = "(" + yearly_var_ir.toFixed(1) + " %)";
                    //document.getElementById("s_y_tar_energy").innerHTML = "<b>" + (yearly_energy_tar / 1000000).toFixed(1) + "</b> GWh";
                    //document.getElementById("s_y_tar_ir").innerHTML = "<b>" + (yeary_ir_tar).toFixed(1) + "</b> kWh/m<sup>2</sup>";

                    document.getElementById("yearly_solar_enrgy").innerHTML = "<b>" + ((yearly_energy)).toFixed(1) + "</b>";
                    document.getElementById("yearly_ir").innerHTML = "<b>" + (yeary_ir).toFixed(1) + "</b>";
                    document.getElementById("yearly_solar_enrgy_var").innerHTML = "(" + yearly_var_energy.toFixed(1) + " %)";
                    document.getElementById("yearly_ir_var").innerHTML = "(" + yearly_var_ir.toFixed(1) + " %)";
                    
                    document.getElementById("s_y_tar_ir").innerHTML = "<b>" + (yeary_ir_tar).toFixed(1) + "</b> kWh/m<sup>2</sup>";
                }
                else
                {
                    document.getElementById("yearly_solar_enrgy").innerHTML = "<b>0.0</b>";
                    document.getElementById("yearly_ir").innerHTML = "<b>0.0</b>";
                    document.getElementById("yearly_solar_enrgy_var").innerHTML = "(0 %)";
                    document.getElementById("yearly_ir_var").innerHTML = "(0 %)";
                    document.getElementById("s_y_tar_energy").innerHTML = "<b>0.0</b> GWh";
                    document.getElementById("s_y_tar_ir").innerHTML = "<b>0.0</b> kWh/m<sup>2</sup>";
                }
            }
        });
    }
    //Wind Chart data
    var wcd_title            = "";
    var wcd_taget_wind       = [];
    var wcd_actual_wind      = [];
    var wcd_target_energy    = [];
    var wcd_actual_energy    = [];
    var wcd_datelebels       = [];
    var wcd_title_md         = "";
    var wcd_taget_wind_md    = [];
    var wcd_actual_wind_md   = [];
    var wcd_target_energy_md = [];
    var wcd_actual_energy_md = [];
    var wcd_datelebels_md    = [];

    function GetWindChartData(date_arr, title, isOnloadGraph)
    {
        let site            = "";
        wcd_title           = "";
        wcd_taget_wind      = [];
        wcd_actual_wind     = [];
        wcd_target_energy   = [];
        wcd_exp_energy      = [];
        wcd_actual_energy   = [];
        wcd_datelebels      = [];
        $('select#wind_site option:selected').each(function ()
        {
            site += $(this).val() + ",";
        });
        site = site != "" ? site.slice(0, -1) : site;
        var startDate = date_arr.startdate;
        var endDate   = GetPreviousDate();
        var FY        = fyear;
        var ismonthly = false;
        wcd_title     = title;
        $.ajax({
            type: "GET",
            url: "/Dashboard/GetWindGraphData?startDate=" + startDate + "&endDate=" + endDate + "&FY=" + FY + "&sites=" + site + "&monthly=" + ismonthly,
            contentType: "application/json; charset=utf-8",
            datatype: "html",
            success: function (result, status, xhr)
            {
                if (result.length > 0)
                {

                    let previous            = "";
                    let total_tar_wind      = 0;
                    let toral_ac_wind       = 0;
                    let total_tar_kwh       = 0;
                    let total_exp_kwh       = 0;
                    let totat_act_kwh       = 0;
                    let cnt                 = 0;
                    var total_mw            = 0;
                    for (var k = 0; k < result.length; k++) {
                        total_mw += result[k].total_mw;
                    }
                    let missingDates = [];
                    const lengthOfRes       = result.length;
                    const differenceOfRes = 10 - lengthOfRes;
                    let tar_wind = 0;
                    let act_wind = 0;
                    if (differenceOfRes > 0)
                    {
                        missingDates = getMissingDates(startDate, endDate);
                        for (var i = 0; i < missingDates.length; i++)
                        {
                            var dateConString = moment(missingDates[i], 'YYYY-MM-DD').toString();
                            var formattedDate = moment(missingDates[i], 'YYYY-MM-DD').format('DD-MM-YYYY');
                            var dataFound = false; // Flag to check if data was found for the current missing date
                            for (var j = 0; j < result.length; j++)
                            {
                                if (dateConString === moment(result[j].date, 'YYYY-MM-DD').toString())
                                {
                                    //tar_wind = result[j].tarwind / total_mw;
                                    //act_wind = result[j].wind / total_mw;
                                    tar_wind = result[j].tarwind / result[j].total_mw;
                                    act_wind = result[j].wind / result[j].total_mw;
                                    wcd_datelebels.push(formattedDate);
                                    wcd_taget_wind.push(tar_wind.toFixed(1));
                                    wcd_actual_wind.push(act_wind.toFixed(1));
                                    wcd_target_energy.push((result[j].tarkwh).toFixed(1));
                                    wcd_actual_energy.push((result[j].jmrkwh).toFixed(1));
                                    wcd_exp_energy.push(result[j].expected_power.toFixed(1));
                                    //wcd_target_energy.push((result[j].tarkwh / 1000000).toFixed(1));
                                    //wcd_actual_energy.push((result[j].jmrkwh / 1000000).toFixed(1));
                                    // Set the flag to true to indicate that data was found
                                    dataFound = true;
                                    break; // No need to continue checking the remaining results for this date
                                }
                            }
                            // If no data was found for the current missing date, push zeros
                            if (!dataFound)
                            {
                                wcd_datelebels.push(formattedDate);
                                wcd_taget_wind.push(0);
                                wcd_actual_wind.push(0);
                                wcd_target_energy.push(0);
                                wcd_actual_energy.push(0);
                                wcd_exp_energy.push();
                            }
                        }
                    }
                    else
                    {
                        for (var w = 0; w < result.length; w++)
                        {
                            //tar_wind = result[w].tarwind / total_mw;
                           // act_wind = result[w].wind / total_mw;
                            tar_wind = result[w].tarwind / result[w].total_mw;
                            act_wind = result[w].wind / result[w].total_mw;
                            var formattedDate = moment(result[w].date, 'YYYY-MM-DD').format('DD-MM-YYYY');
                            wcd_datelebels.push(formattedDate);
                            wcd_taget_wind.push(tar_wind.toFixed(1));
                            wcd_actual_wind.push(act_wind .toFixed(1));
                            wcd_target_energy.push((result[w].tarkwh).toFixed(1));
                            wcd_actual_energy.push((result[w].jmrkwh).toFixed(1));
                            wcd_exp_energy.push(result[w].expected_power.toFixed(1));
                            //wcd_target_energy.push((result[w].tarkwh / 1000000).toFixed(1));
                            ///wcd_actual_energy.push((result[w].jmrkwh / 1000000).toFixed(1));
                        }
                    }
                }
                if (isOnloadGraph == 1)
                {
                    windChart(wcd_title, wcd_datelebels, wcd_taget_wind, wcd_actual_wind, wcd_target_energy, wcd_actual_energy, wcd_exp_energy);
                }
            }
        });
    }
    function GetWindChartDataMonthly(date_arr, title, createChart)
    {
        let site             = "";
        wcd_title_md         = "";
        wcd_taget_wind_md    = [];
        wcd_actual_wind_md   = [];
        wcd_target_energy_md = [];
        wcd_exp_energy_md    = [];
        wcd_actual_energy_md = [];
        wcd_datelebels_md    = [];
        $('select#wind_site option:selected').each(function ()
        {
            site += $(this).val() + ",";
        });
        site = site != "" ? site.slice(0, -1) : site;
        var startDate = date_arr.startdate;
        var endDate   = GetPreviousDate();
        var FY        = fyear;
        var ismonthly = false;
        startDate = getFinancialYearDateStartDate(fyear).startdate;
        ismonthly = true;
        wcd_title_md = title;
        $.ajax({
            type: "GET",
            url: "/Dashboard/GetWindGraphData?startDate=" + startDate + "&endDate=" + endDate + "&FY=" + FY + "&sites=" + site + "&monthly=" + ismonthly,
            contentType: "application/json; charset=utf-8",
            datatype: "html",
            success: function (result, status, xhr)
            {
                if (result.length > 0)
                {
                    let previous        = "";
                    let total_tar_wind  = 0;
                    let toral_ac_wind   = 0;
                    let total_tar_kwh   = 0;
                    let totat_act_kwh   = 0;
                    let cnt = 0;
                    var total_mw = 0;
                    let tar_wind = 0;
                    let act_wind = 0;
                    for (var k = 0; k < result.length; k++) {
                        total_mw += result[k].total_mw;
                    }
                    //console.log("Total MW :", total_mw);
                    for (var w = 0; w < result.length; w++)
                    {

                        var formattedDate = moment(result[w].date, 'YYYY-MM-DD').format('DD-MM-YYYY');
                        cnt++;
                        var oneDate       = moment(formattedDate, 'DD-MM-YYYY');
                        var monthName     = oneDate.format('MMMM');
                        if (monthName != previous)
                        {
                            wcd_datelebels_md.push(monthName);
                            previous = monthName;
                        }
                        tar_wind = result[w].tarwind / total_mw;
                        act_wind = result[w].wind / total_mw;
                        wcd_taget_wind_md.push(tar_wind.toFixed(1));
                        wcd_actual_wind_md.push(act_wind.toFixed(1));
                        wcd_target_energy_md.push((result[w].tarkwh).toFixed(1));
                        wcd_actual_energy_md.push((result[w].jmrkwh).toFixed(1));
                        wcd_exp_energy_md.push((result[w].expected_power).toFixed(1));

                        //wcd_target_energy_md.push((result[w].tarkwh / 1000000).toFixed(1));
                        //wcd_actual_energy_md.push((result[w].jmrkwh / 1000000).toFixed(1));
                    }
                    if (createChart == 1)
                    {
                        windChart(wcd_title_md, wcd_datelebels_md, wcd_taget_wind_md, wcd_actual_wind_md, wcd_target_energy_md, wcd_actual_energy_md, wcd_exp_energy_md);
                    }
                }
            }
        });
    }
    function windChart(title, datelebels, taget_wind, actual_wind, target_energy, actual_energy,exp_energy)
    {
        let chartStatus = Chart.getChart("energy_wind"); // <canvas> id
        let dataset_value = [];
        if (chartStatus != undefined)
        {
            chartStatus.destroy();
        }
        if (exp_flage == true)
        {
            dataset_value = { yAxisID: 'A', label: "Exp Energy (GWh)", type: "bar", backgroundColor: "#77CAE7", data: exp_energy, order: 1, datalabels: { anchor: 'center', align: 'top', color: 'white', labels: { title: { font: { weight: 'bold', size: 10, } }, }, } }
        }
        else
        {
            dataset_value = { yAxisID: 'A', label: "AOP Energy (GWh)", type: "bar", backgroundColor: "#77CAE7", data: target_energy, order: 1, datalabels: { anchor: 'center', align: 'top', color: 'white', labels: { title: { font: { weight: 'bold', size: 10, } }, },} }
        }
        new Chart(document.getElementById("energy_wind"), {
            type: 'bar',
            data: {
                labels: datelebels,
                datasets: [
                    dataset_value,
                    {
                        yAxisID: 'A',
                        label: "Actual Energy (GWh)",
                        type: "bar",
                        backgroundColor: "#31576D",
                        backgroundColorHover: "#3e95cd",
                        data: actual_energy,
                        order: 1,
                        datalabels: {
                            anchor: 'center',
                            align: 'top',
                            color: 'white',
                            labels: {
                                title: {
                                    font: {
                                        weight: 'bold',
                                        size:10,
                                     }
                                },
                            },
                        },
                    }, {
                        yAxisID: 'B',
                        label: "Target AWS (m/s)",
                        type: "line",
                        borderColor: "#86C466",
                        data: taget_wind,
                        order: 0,
                        fill: false,
                        datalabels: {
                            anchor: 'end',
                            align: 'top',
                            offset: 5,
                            labels: {
                                title: {
                                    font: {
                                        //weight: 'bold',
                                        size: 10,
                                    }
                                },
                            },
                        },
                    },
                    {
                        order: 0,
                        yAxisID: 'B',
                        label: "Actual AWS (m/s)",
                        type: "line",
                        borderColor: "#FFCA5A",
                        data: actual_wind,
                        fill: false,
                        datalabels: {
                            anchor: 'end',
                            align: 'top',
                            labels: {
                                title: {
                                    font: {
                                       // weight: 'bold',
                                        size: 10,
                                    }
                                },
                            },
                        },
                    }
                ]
            },
            plugins: [ChartDataLabels],
            options: {
                responsive: true,
                interaction: {
                    intersect: false,
                    mode: 'index',
                },
                plugins: {
                    title: {
                        display: true,
                         text: ""
                    },
                    legend: {
                        display: true,
                        position: "bottom",
                        labels: {
                            boxWidth: 10,
                            boxHeight:10,
                            font: {
                                size: 12
                            }
                        }
                    }
                },
                scales: {
                        A: {
                            type: 'linear',
                            position: 'left',
                            grid: { display: false }
                        },
                        B: {
                            type: 'linear',
                            position: 'right',
                            ticks: { beginAtZero: true,},
                            grid: { display: false }
                        },
                }
            }
        });
    }
    //Solar Chart Data
    var scd_title           = "";
    var scd_target_kwh      = [];
    var scd_actual_kwh      = [];
    var scd_target_ir       = [];
    var scd_actual_ir       = [];
    var scd_datelebels      = [];
    var scd_title_md        = "";
    var scd_target_kwh_md   = [];
    var scd_actual_kwh_md   = [];
    var scd_target_ir_md    = [];
    var scd_actual_ir_md    = [];
    var scd_datelebels_md   = [];
    function GetSolarData(date_arr, title, isOnloadGraph)
    {
        let solar_site  = "";
        scd_title       = "";
        scd_target_kwh  = [];
        scd_exp_kwh     = [];
        scd_actual_kwh  = [];
        scd_target_ir   = [];
        scd_actual_ir   = [];
        scd_datelebels  = [];
        $('select#solar_site option:selected').each(function ()
        {
            solar_site += $(this).val() + ",";
        });
        solar_site      = solar_site != "" ? solar_site.slice(0, -1) : solar_site;
        var startDate   = date_arr.startdate;
        var endDate     = GetPreviousDate();
        var FY          = fyear;
        var ismonthly   = false;
        scd_title       = title;
        $.ajax({
            type: "GET",
            url: "/Dashboard/GetSolarDashboardData?startDate=" + startDate + "&endDate=" + endDate + "&FY=" + FY + "&sites=" + solar_site + "&monthly=" + ismonthly,
            contentType: "application/json; charset=utf-8",
            datatype: "html",
            success: function (result, status, xhr)
            {
                if (result.length > 0)
                {
                    let missingDates        = [];
                    const lengthOfRes       = result.length;
                    const differenceOfRes = 10 - lengthOfRes;
                    var total_capacity = 0;
                    for (k = 0; k < result.length; k++) {
                        total_capacity += result[k].ac_capacity;
                    }
                    //console.log(total_capacity);
                    if (differenceOfRes > 0)
                    {
                        missingDates = getMissingDates(startDate, endDate);
                        for (var i = 0; i < missingDates.length; i++)
                        {
                            
                            var dateConString = moment(missingDates[i], 'YYYY-MM-DD').toString();
                            var formattedDate = moment(missingDates[i], 'YYYY-MM-DD').format('DD-MM-YYYY');
                            var dataFound = false; // Flag to check if data was found for the current missing date
                            var ir_act = 0;
                            var ir_tar = 0;
                            for (var j = 0; j < result.length; j++)
                            {
                                if (dateConString === moment(result[j].date, 'YYYY-MM-DD').toString())
                                {
                                    ir_act = result[j].ir / total_capacity;
                                    ir_tar = result[j].tarIR / total_capacity;
                                    scd_datelebels.push(formattedDate);
                                    //scd_actual_kwh.push((result[j].jmrkwh / 1000000).toFixed(1));
                                    //scd_target_kwh.push((result[j].tarkwh / 1000000).toFixed(1));
                                    scd_actual_kwh.push((result[j].jmrkwh).toFixed(1));
                                    scd_target_kwh.push((result[j].tarkwh).toFixed(1));
                                    scd_exp_kwh.push((result[j].expected_power).toFixed(1));
                                    scd_target_ir.push(ir_tar.toFixed(1));
                                    scd_actual_ir.push(ir_act.toFixed(1));
                                    // Set the flag to true to indicate that data was found
                                    dataFound = true;
                                    break; // No need to continue checking the remaining results for this date
                                }
                            }
                            // If no data was found for the current missing date, push zeros
                            if (!dataFound)
                            {
                                scd_datelebels.push(formattedDate);
                                scd_actual_kwh.push(0);
                                scd_target_kwh.push(0);
                                scd_exp_kwh.push(0);
                                scd_target_ir.push(0);
                                scd_actual_ir.push(0);
                            }
                        }
                    }
                    else
                    {
                        for (var s = 0; s < result.length; s++)
                        {
                            ir_act = result[s].ir / total_capacity;
                            ir_tar = result[s].tarIR / total_capacity;
                            var formattedDate = moment(result[s].date, 'YYYY-MM-DD').format('DD-MM-YYYY');
                            scd_datelebels.push(formattedDate);
                            var dateConString = moment(result[s].date, 'YYYY-MM-DD').toString();
                            scd_actual_kwh.push((result[s].jmrkwh).toFixed(1));
                            scd_target_kwh.push((result[s].tarkwh).toFixed(1));
                            scd_exp_kwh.push((result[s].expected_power).toFixed(1));
                            //scd_actual_kwh.push((result[s].jmrkwh / 1000).toFixed(1));
                            //scd_target_kwh.push((result[s].tarkwh / 1000000).toFixed(1));
                            scd_target_ir.push(ir_tar.toFixed(1));
                            scd_actual_ir.push(ir_act.toFixed(1));
                        }
                    }
                }
                if (isOnloadGraph == 1)
                {
                    solarChart(scd_title, scd_datelebels, scd_target_kwh, scd_actual_kwh, scd_target_ir, scd_actual_ir, scd_exp_kwh);
                }
            }
        });
    }
    function GetSolarDataMonthly(date_arr, title, createChart)
    {
        let solar_site      = "";
        scd_title_md        = "";
        scd_target_kwh_md   = [];
        scd_exp_kwh_md      = [];
        scd_actual_kwh_md   = [];
        scd_target_ir_md    = [];
        scd_actual_ir_md    = [];
        scd_datelebels_md   = [];
        $('select#solar_site option:selected').each(function ()
        {
            solar_site += $(this).val() + ",";
        });
        solar_site      = solar_site != "" ? solar_site.slice(0, -1) : solar_site;
        var startDate   = date_arr.startdate;
        var endDate     = GetPreviousDate();//date_arr.enddate;
        var FY          = fyear;
        var ismonthly   = false;
        startDate       = getFinancialYearDateStartDate(fyear).startdate;
        ismonthly       = true;
        scd_title_md    = title;
        $.ajax({
            type: "GET",
            url: "/Dashboard/GetSolarDashboardData?startDate=" + startDate + "&endDate=" + endDate + "&FY=" + FY + "&sites=" + solar_site + "&monthly=" + ismonthly,
            contentType: "application/json; charset=utf-8",
            datatype: "html",
            success: function (result, status, xhr)
            {
                if (result.length > 0)
                {
                    let previous        = "";
                    let total_inv_kwh   = 0;
                    let total_tar_kwh   = 0;
                    let total_ir        = 0;
                    let total_tar_ir    = 0;
                    let total_exp_kwh   = 0;
                    let scnt = 0;
                    var total_capacity = 0;
                    var ir_act = 0;
                    var ir_tar = 0;
                    for (k = 0; k < result.length; k++) {
                        total_capacity += result[k].ac_capacity;
                    }
                    for (var s = 0; s < result.length; s++)
                    {
                        ir_act = result[s].ir / total_capacity;
                        ir_tar = result[s].tarIR / total_capacity;
                        var formattedDate = moment(result[s].date, 'YYYY-MM-DD').format('DD-MM-YYYY');
                        if (title == "Monthly")
                        {
                            var oneDate     = moment(formattedDate, 'DD-MM-YYYY');
                            var monthName   = oneDate.format('MMMM');
                            scnt++;
                            if (monthName != previous)
                            {
                                scd_datelebels_md.push(monthName);
                                previous = monthName;
                            }

                            //scd_actual_kwh_md.push((result[s].jmrkwh / 1000000).toFixed(1));
                            //scd_target_kwh_md.push((result[s].tarkwh / 1000000).toFixed(1));
                            scd_actual_kwh_md.push((result[s].jmrkwh).toFixed(1));
                            scd_target_kwh_md.push((result[s].tarkwh).toFixed(1));
                            scd_exp_kwh_md.push((result[s].expected_power).toFixed(1));
                            scd_target_ir_md.push(ir_tar.toFixed(1));
                            scd_actual_ir_md.push(ir_act.toFixed(1));
                        }
                    }
                    if (createChart == 1)
                    {
                        solarChart(scd_title_md, scd_datelebels_md, scd_target_kwh_md, scd_actual_kwh_md, scd_target_ir_md, scd_actual_ir_md, scd_exp_kwh_md);
                    }
                }
            }
        });
    }

    function solarChart(title, datelebels, target_kwh, actual_kwh, target_ir, actual_ir,exp_power)
    {
        console.log("Flag Exp ::", exp_flage);
        let chartStatus = Chart.getChart("energy_solar"); // <canvas> id
        let datasets_value = [];
        if (chartStatus != undefined)
        {
            chartStatus.destroy();
        }
        if (exp_flage == true)
        {
            datasets_value = {yAxisID: 'A', label: "Exp Energy (GWh)", type: "bar",order: 1,backgroundColor: "#77CAE7", data: exp_power, datalabels: {anchor: 'center', align: 'top', color: 'white', labels: { title: { font: { weight: 'bold', size: 10, } }, },},}
        }
        else
        {
            datasets_value = { yAxisID: 'A', label: "AOP Energy (GWh)", type: "bar", order: 1, backgroundColor: "#77CAE7", data: target_kwh, datalabels: { anchor: 'center', align: 'top', color: 'white', labels: { title: { font: { weight: 'bold',size: 10, } }, }, },
            }
        }
        new Chart(document.getElementById("energy_solar"), {
            type: 'bar',
            data: {
                labels: datelebels ,
                datasets: [
                    datasets_value,
                     {
                        yAxisID: 'A',
                        label: "Actual Energy (GWh)",
                        type: "bar",
                        order: 1,
                        backgroundColor: "#31576D",
                        backgroundColorHover: "#3e95cd",
                        data: actual_kwh,
                        datalabels: {
                            anchor: 'center',
                            align: 'top',
                            color: 'white',
                            labels: {
                                title: {
                                    font: {
                                        weight: 'bold',
                                        size:10,
                                    }
                                },
                            },
                        },
                    },
                    {
                        yAxisID: 'B',
                        order: 0,
                        label: "Target AIR (kWh/m^2)",
                        type: "line",
                        borderColor: "#86C466",
                        data: target_ir,
                        fill: false,
                        datalabels: {
                            anchor: 'end',
                            align: 'top',
                            offset: 5,
                            labels: {
                                title: {
                                    font: {
                                        size: 10,
                                    }
                                },
                            },
                        },
                    }, {
                        order: 0,
                        yAxisID: 'B',
                        label: "Actual AIR (kWh/m^2)",
                        type: "line",
                        borderColor: "#FFCA5A",
                        data: actual_ir,
                        fill: false,
                         datalabels: {
                            anchor: 'end',
                             align: 'top',
                             labels: {
                                 title: {
                                     font: {
                                         size: 10,
                                     }
                                 },
                             },
                         },
                    }
                ]
            },
            plugins: [ChartDataLabels],
            options: {
                responsive: true,
                interaction: {
                    intersect: false,
                    mode: 'index',
                },
                plugins: {
                    title: {
                        display: true,
                        text: ""
                    },
                    legend: {
                        display: true,
                        position: "bottom",
                        labels: {
                            boxWidth: 10,
                            boxHeight: 10,
                            font: {
                                size: 12
                            }
                        }
                    }
                },
                scales: {
                    A: {
                        type: 'linear',
                        position: 'left',
                        grid: { display: false }
                    },
                    B: {
                        type: 'linear',
                        position: 'right',
                        ticks: { beginAtZero: true, },
                        grid: { display: false }
                    },
                }
            }
        });
    }

    function chartSelection(type)
    {
        if (type == 1)
        {
            chartTitle = "Last 10 Days";
            if (displaychart.wind)
            {
                windChart(wcd_title, wcd_datelebels, wcd_taget_wind, wcd_actual_wind, wcd_target_energy, wcd_actual_energy);
            }
            if (displaychart.solar)
            {
                solarChart(scd_title, scd_datelebels, scd_target_kwh, scd_actual_kwh, scd_target_ir, scd_actual_ir);
            }
        }
        if (type == 2)
        {
            chartTitle = "Monthly";
            if (displaychart.wind)
            {
                windChart(wcd_title_md, wcd_datelebels_md, wcd_taget_wind_md, wcd_actual_wind_md, wcd_target_energy_md, wcd_actual_energy_md);
            }
            if (displaychart.solar)
            {
                solarChart(scd_title_md, scd_datelebels_md, scd_target_kwh_md, scd_actual_kwh_md, scd_target_ir_md, scd_actual_ir_md);
            }
        }
    }

    function getCookie(cname)
    {
        let name          = cname + "=";
        let decodedCookie = decodeURIComponent(document.cookie);
        let ca            = decodedCookie.split(';');
        for (let i = 0; i < ca.length; i++)
        {
            let c = ca[i];
            while (c.charAt(0) == ' ')
            {
                c = c.substring(1);
            }
            if (c.indexOf(name) == 0)
            {
                return c.substring(name.length, c.length);
            }
        }
        return "";
    }

    function getMissingDates(startDate, endDate)
    {
        const missingDates = [];
        // Convert start and end dates to Date objects
        const currentDate  = new Date(startDate);
        const end           = new Date(endDate);
        // Iterate through dates between start and end
        while (currentDate <= end)
        {
            const currentDateString = currentDate.toISOString().split('T')[0]; // Format as YYYY-MM-DD
            missingDates.push(currentDateString);
            currentDate.setDate(currentDate.getDate() + 1); // Move to the next day
        }
        return missingDates;
    }
</script>
