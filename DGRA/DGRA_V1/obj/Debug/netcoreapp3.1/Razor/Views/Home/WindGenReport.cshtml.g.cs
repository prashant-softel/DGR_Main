#pragma checksum "G:\solarproject\Finalcode\DGR_Projects\DGRA\DGRA_V1\Views\Home\WindGenReport.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "d4cfbdc747341cdb812964a952366605e6293511"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_WindGenReport), @"mvc.1.0.view", @"/Views/Home/WindGenReport.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "G:\solarproject\Finalcode\DGR_Projects\DGRA\DGRA_V1\Views\_ViewImports.cshtml"
using DGRA_V1;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "G:\solarproject\Finalcode\DGR_Projects\DGRA\DGRA_V1\Views\_ViewImports.cshtml"
using DGRA_V1.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d4cfbdc747341cdb812964a952366605e6293511", @"/Views/Home/WindGenReport.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"aa9fc0f0a035817cf8f1fc535e299e80b45b9453", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_WindGenReport : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<DGRA_V1.Models.CountryList>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/plugins/fontawesome-free/css/all.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/plugins/daterangepicker/daterangepicker.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/plugins/datatables-bs4/css/dataTables.bootstrap4.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/plugins/datatables-responsive/css/responsive.bootstrap4.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/plugins/datatables-buttons/css/buttons.bootstrap4.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/dist/css/adminlte.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "india", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "04", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "05", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "06", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "07", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_13 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "08", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_14 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "09", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_15 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "10", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_16 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "11", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_17 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "12", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_18 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "01", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_19 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "02", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_20 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "03", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_21 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/plugins/jquery/jquery.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_22 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/plugins/moment/moment.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_23 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/plugins/daterangepicker/daterangepicker.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_24 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/plugins/tempusdominus-bootstrap-4/js/tempusdominus-bootstrap-4.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_25 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/plugins/summernote/summernote-bs4.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_26 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/plugins/datatables/jquery.dataTables.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_27 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/plugins/datatables-bs4/js/dataTables.bootstrap4.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_28 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/plugins/datatables-responsive/js/dataTables.responsive.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_29 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/plugins/datatables-responsive/js/responsive.bootstrap4.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_30 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/plugins/datatables-buttons/js/dataTables.buttons.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_31 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/plugins/datatables-buttons/js/buttons.bootstrap4.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_32 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/plugins/jszip/jszip.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_33 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/plugins/pdfmake/pdfmake.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_34 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/plugins/pdfmake/vfs_fonts.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_35 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/plugins/datatables-buttons/js/buttons.html5.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_36 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/plugins/datatables-buttons/js/buttons.print.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_37 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/plugins/datatables-buttons/js/buttons.colVis.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_38 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/plugins/bootstrap/js/bootstrap.bundle.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 2 "G:\solarproject\Finalcode\DGR_Projects\DGRA\DGRA_V1\Views\Home\WindGenReport.cshtml"
  
    ViewData["Title"] = "Wind Generation Reports";

#line default
#line hidden
#nullable disable
            WriteLiteral("<link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700&display=fallback\">\r\n<!-- Font Awesome -->\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "d4cfbdc747341cdb812964a952366605e629351117694", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n<!-- daterange picker -->\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "d4cfbdc747341cdb812964a952366605e629351118839", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n<!-- DataTables -->\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "d4cfbdc747341cdb812964a952366605e629351119978", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "d4cfbdc747341cdb812964a952366605e629351121094", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "d4cfbdc747341cdb812964a952366605e629351122210", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "d4cfbdc747341cdb812964a952366605e629351123330", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
<style>
    .tab-btn {
        font-size: 0.7rem;
        font-weight: bold;
    }
</style>

<div class=""content-wrapper"">

    <section class=""content-header"">
        <!--<div class=""container-fluid"">
        <div class=""row mb-2"">
            <div class=""col-sm-6"">

            </div>
            <div class=""col-sm-6"">
                <ol class=""breadcrumb float-sm-right"">
                    <li class=""breadcrumb-item""><a href=""#"">Home</a></li>
                    <li class=""breadcrumb-item active"">Wind Generation Reports</li>
                </ol>
            </div>
        </div>
    </div>-->
    </section>


    <section class=""content"">
        <div class=""card"">
            <div class=""card-header"">
                <h3 class=""card-title text-center"">Wind Generation Reports</h3>

                <!--<div class=""card-tools"">
        <button type=""button"" class=""btn btn-tool"" data-card-widget=""collapse"" title=""Collapse"">
            <i class=""fas fa-minus""></i>
     ");
            WriteLiteral(@"   </button>

    </div>-->
            </div>
            <div class=""card-body"">
                <div class=""row"">
                    <div class=""col-12 col-sm-12"">
                        <div class=""card card-primary card-outline card-tabs"">
                            <div class=""p-0 pt-1 border-bottom-0"">
                                <!--<div class=""card-header p-0 pt-1 border-bottom-0"">-->
                                <ul class=""nav nav-tabs"" id=""custom-tabs-three-tab"" role=""tablist"">
                                    <li class=""nav-item"">
                                        <a class=""nav-link active"" id=""custom-tabs-three-daily-tab"" data-toggle=""pill"" href=""#custom-tabs-three-daily"" role=""tab"" aria-controls=""custom-tabs-three-daily"" aria-selected=""true"">Daily Gen Report</a>
                                    </li>
                                    <li class=""nav-item"">
                                        <a class=""nav-link"" id=""custom-tabs-three-monthly-tab"" data-tog");
            WriteLiteral(@"gle=""pill"" href=""#custom-tabs-three-monthly"" role=""tab"" aria-controls=""custom-tabs-three-monthly"" aria-selected=""false"">Monthly Gen Report</a>
                                    </li>
                                    <li class=""nav-item"">
                                        <a class=""nav-link"" id=""custom-tabs-three-yearly-tab"" data-toggle=""pill"" href=""#custom-tabs-three-yearly"" role=""tab"" aria-controls=""custom-tabs-three-yearly"" aria-selected=""false"">Yearly Gen Report</a>
                                    </li>



                                </ul>

                            </div>

                                <div class=""card-body"">

                                    <div class=""tab-content"" id=""custom-tabs-three-tabContent"">
                                        <div class=""tab-pane fade show active"" id=""custom-tabs-three-daily"" role=""tabpanel"" aria-labelledby=""custom-tabs-three-daily-tab"">
                                            <div class=""row"">
                ");
            WriteLiteral(@"                                <div class=""col-sm-4"">
                                                    <div class=""input-group "" style=""margin-left: -5px; width: 104%;"">
                                                        <label class=""col-sm-4 col-form-label text-right"">Date : </label>
                                                        <div class=""input-group-prepend"">
                                                            <span class=""input-group-text"">
                                                                <i class=""far fa-calendar-alt""></i>
                                                            </span>
                                                        </div>
                                                        <input type=""text"" class=""form-control float-right"" id=""daterange"" name=""daterange"">
                                                    </div>
                                                </div>
                                                <");
            WriteLiteral(@"div class=""col-sm-4"">

                                                    <div class=""form-group"">
                                                        <div class=""row"">
                                                            <label class=""col-sm-4 col-form-label text-right"">Country : </label>
                                                            <select class=""form-control  col-sm-8"" id=""country"" name=""country""");
            BeginWriteAttribute("value", " value=\"", 5393, "\"", 5401, 0);
            EndWriteAttribute();
            WriteLiteral(">\r\n\r\n                                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d4cfbdc747341cdb812964a952366605e629351129473", async() => {
                WriteLiteral("India");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_7.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_7);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("selected", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"


                                                            </select>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class=""col-sm-4"">
                                                    <div class=""form-group"">
                                                        <div class=""row"">
                                                            <label class=""col-sm-4 col-form-label text-right"">State : </label>
                                                            <select class=""form-control  col-sm-8"" id=""state"" name=""state""");
            BeginWriteAttribute("value", " value=\"", 6248, "\"", 6256, 0);
            EndWriteAttribute();
            WriteLiteral(" onchange=\"GetSPV(this.value);\">\r\n                                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d4cfbdc747341cdb812964a952366605e629351131930", async() => {
                WriteLiteral("Select State");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_8.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                                            </select>
                                                        </div>
                                                    </div>
                                                </div>

                                            </div>
                                            <div class=""row"">
                                                <div class=""col-sm-4"">
                                                    <div class=""form-group"">
                                                        <div class=""row"">
                                                            <label class=""col-sm-4 col-form-label text-right"">SPV : </label>
                                                            <select class=""form-control  col-sm-8"" id=""spv"" name=""spv""");
            BeginWriteAttribute("value", " value=\"", 7232, "\"", 7240, 0);
            EndWriteAttribute();
            WriteLiteral(" onchange=\"getSite()\">\r\n                                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d4cfbdc747341cdb812964a952366605e629351134182", async() => {
                WriteLiteral("Select SPV");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_8.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                                            </select>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class=""col-sm-4"">

                                                    <div class=""form-group"">
                                                        <div class=""row"">
                                                            <label class=""col-sm-4 col-form-label text-right"">Site : </label>
                                                            <select class=""form-control  col-sm-8"" id=""site"" name=""site""");
            BeginWriteAttribute("value", " value=\"", 8092, "\"", 8100, 0);
            EndWriteAttribute();
            WriteLiteral(" onchange=\"GetWTG(this.value)\">\r\n                                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d4cfbdc747341cdb812964a952366605e629351136327", async() => {
                WriteLiteral("Select Site");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_8.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                                            </select>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class=""col-sm-4"">

                                                    <div class=""form-group"">
                                                        <div class=""row"">
                                                            <label class=""col-sm-4 col-form-label text-right"">WTG : </label>
                                                            <select class=""form-control  col-sm-8"" id=""wtg"" name=""wtg"">
                                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d4cfbdc747341cdb812964a952366605e629351138294", async() => {
                WriteLiteral("Select WTG");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_8.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                                            </select>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class=""row"">
                                                <div class=""col-sm-5 text-left"">
                                                    <div class=""table-responsive pad"">
                                                        <div class=""btn-group btn-group-toggle"" data-toggle=""buttons"">
                                                            <label class=""btn bg-olive"">
                                                                <input type=""radio"" name=""daily"" value=""WTG"" id=""daily_b1"" autocomplete=""off"" checked> WTG Wise Report
                                                            </label>
                                      ");
            WriteLiteral(@"                      <label class=""btn bg-olive"">
                                                                <input type=""radio"" name=""daily"" value=""Site"" id=""daily_b2"" autocomplete=""off""> Site Wise Report
                                                            </label>
                                                        </div>
                                                    </div>

                                                </div>
                                                <div class=""col-sm-2 text-center"">
                                                    <button type=""button"" class=""btn btn-block btn-primary"" onclick=""GetDailyGenReport();"">Search</button>
                                                </div>
                                                <div class=""col-sm-5 text-center""></div>
                                            </div>

                                            <hr>
                                            <div id=""reportsDaily"" s");
            WriteLiteral(@"tyle=""overflow-x: auto;"" class=""reportsDaily""></div>

                                        </div>
                                        <div class=""tab-pane fade"" id=""custom-tabs-three-monthly"" role=""tabpanel"" aria-labelledby=""custom-tabs-three-monthly-tab"">
                                            <div class=""row"">
                                                <div class=""col-sm-4"">
                                                    <div class=""form-group"">
                                                        <div class=""row"">
                                                            <label class=""col-sm-4 col-form-label text-right"">FY : </label>
                                                            <select class=""form-control  col-sm-8"" id=""fyM"" name=""fyM""");
            BeginWriteAttribute("value", " value=\"", 11909, "\"", 11917, 0);
            EndWriteAttribute();
            WriteLiteral(">\r\n                                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d4cfbdc747341cdb812964a952366605e629351142653", async() => {
                WriteLiteral("Select Financial Year");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_8.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                                            </select>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class=""col-sm-4"">

                                                    <div class=""form-group"">
                                                        <div class=""row"">
                                                            <label class=""col-sm-4 col-form-label text-right"">Month : </label>
                                                            <select class=""form-control  col-sm-8"" id=""monthM"" name=""monthM""");
            BeginWriteAttribute("value", " value=\"", 12764, "\"", 12772, 0);
            EndWriteAttribute();
            WriteLiteral(">\r\n                                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d4cfbdc747341cdb812964a952366605e629351144784", async() => {
                WriteLiteral("Select Month");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_8.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d4cfbdc747341cdb812964a952366605e629351146014", async() => {
                WriteLiteral("April");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_9.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_9);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d4cfbdc747341cdb812964a952366605e629351147237", async() => {
                WriteLiteral("May");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_10.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_10);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d4cfbdc747341cdb812964a952366605e629351148460", async() => {
                WriteLiteral("June");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_11.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_11);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d4cfbdc747341cdb812964a952366605e629351149684", async() => {
                WriteLiteral("July");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_12.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_12);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d4cfbdc747341cdb812964a952366605e629351150908", async() => {
                WriteLiteral("August");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_13.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_13);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d4cfbdc747341cdb812964a952366605e629351152134", async() => {
                WriteLiteral("September");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_14.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_14);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d4cfbdc747341cdb812964a952366605e629351153363", async() => {
                WriteLiteral("October");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_15.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_15);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d4cfbdc747341cdb812964a952366605e629351154590", async() => {
                WriteLiteral("November");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_16.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_16);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d4cfbdc747341cdb812964a952366605e629351155818", async() => {
                WriteLiteral("December");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_17.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_17);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d4cfbdc747341cdb812964a952366605e629351157046", async() => {
                WriteLiteral("January");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_18.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_18);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d4cfbdc747341cdb812964a952366605e629351158273", async() => {
                WriteLiteral("February");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_19.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_19);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d4cfbdc747341cdb812964a952366605e629351159501", async() => {
                WriteLiteral("March");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_20.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_20);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                                            </select>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class=""col-sm-4"">
                                                    <div class=""form-group"">
                                                        <div class=""row"">
                                                            <label class=""col-sm-4 col-form-label text-right"">Country : </label>
                                                            <select class=""form-control  col-sm-8"" id=""countryM"" name=""countryM""");
            BeginWriteAttribute("value", " value=\"", 14816, "\"", 14824, 0);
            EndWriteAttribute();
            WriteLiteral(">\r\n                                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d4cfbdc747341cdb812964a952366605e629351161622", async() => {
                WriteLiteral("India");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_7.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_7);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("selected", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                                            </select>
                                                        </div>
                                                    </div>
                                                </div>

                                            </div>
                                            <div class=""row"">
                                                <div class=""col-sm-4"">
                                                    <div class=""form-group"">
                                                        <div class=""row"">
                                                            <label class=""col-sm-4 col-form-label text-right"">State : </label>
                                                            <select class=""form-control  col-sm-8"" id=""stateM"" name=""stateM""");
            BeginWriteAttribute("value", " value=\"", 15784, "\"", 15792, 0);
            EndWriteAttribute();
            WriteLiteral(" onchange=\"GetSPV(this.value);\">\r\n                                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d4cfbdc747341cdb812964a952366605e629351164198", async() => {
                WriteLiteral("Select state");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_8.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                                            </select>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class=""col-sm-4"">

                                                    <div class=""form-group"">
                                                        <div class=""row"">
                                                            <label class=""col-sm-4 col-form-label text-right"">SPV : </label>
                                                            <select class=""form-control  col-sm-8"" id=""spvM"" name=""spvM""");
            BeginWriteAttribute("value", " value=\"", 16655, "\"", 16663, 0);
            EndWriteAttribute();
            WriteLiteral(" onchange=\"getSite()\">\r\n                                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d4cfbdc747341cdb812964a952366605e629351166337", async() => {
                WriteLiteral("Select SPV");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_8.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                                            </select>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class=""col-sm-4"">

                                                    <div class=""form-group"">
                                                        <div class=""row"">
                                                            <label class=""col-sm-4 col-form-label text-right"">Site : </label>
                                                            <select class=""form-control  col-sm-8"" id=""siteM"" name=""siteM""");
            BeginWriteAttribute("value", " value=\"", 17517, "\"", 17525, 0);
            EndWriteAttribute();
            WriteLiteral(" onchange=\"GetWTG(this.value)\">\r\n                                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d4cfbdc747341cdb812964a952366605e629351168486", async() => {
                WriteLiteral("Select Site");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_8.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                                            </select>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class=""row"">
                                                <div class=""col-sm-4"">
                                                    <div class=""form-group"">
                                                        <div class=""row"">
                                                            <label class=""col-sm-4 col-form-label text-right"">WTG : </label>
                                                            <select class=""form-control  col-sm-8"" id=""wtgM"" name=""wtgM"">
                                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d4cfbdc747341cdb812964a952366605e629351170572", async() => {
                WriteLiteral("Select WTG");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_8.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                                            </select>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class=""col-sm-1""></div>
                                                <div class=""col-sm-2"">
                                                    <button type=""button"" class=""btn btn-block btn-primary"" onclick=""GetMonthlyGenReport();"">Search</button>
                                                </div>
                                                <div class=""col-sm-5""></div>
                                            </div>
                                            <div class=""row"">
                                                <div class=""col-sm-5"">
                                                    <div class=""table-responsive pad"">
                                                      ");
            WriteLiteral(@"  <div class=""btn-group btn-group-toggle"" data-toggle=""buttons"">
                                                            <label class=""btn bg-olive"">
                                                                <input type=""radio"" name=""monthly"" value=""WTG"" id=""monthly_b1"" autocomplete=""off"" checked> WTG Wise Report
                                                            </label>
                                                            <label class=""btn bg-olive"">
                                                                <input type=""radio"" name=""monthly"" value=""Site"" id=""monthly_b2"" autocomplete=""off""> Site Wise Report
                                                            </label>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class=""col-sm-7""></div>
                                          ");
            WriteLiteral(@"      </div>

                                                <hr>
                                                <div id=""reportsMonthly"" style=""overflow-x: auto;"" class=""reportsMonthly""></div>
                                            </div>
                                            <div class=""tab-pane fade"" id=""custom-tabs-three-yearly"" role=""tabpanel"" aria-labelledby=""custom-tabs-three-yearly-tab"">
                                                <div class=""row"">
                                                    <div class=""col-sm-4"">
                                                        <div class=""form-group"">
                                                            <div class=""row"">
                                                                <label class=""col-sm-4 col-form-label text-right"">FY : </label>
                                                                <select class=""form-control  col-sm-8"" id=""fyY"" name=""fyY""");
            BeginWriteAttribute("value", " value=\"", 21625, "\"", 21633, 0);
            EndWriteAttribute();
            WriteLiteral(">\r\n                                                                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d4cfbdc747341cdb812964a952366605e629351175113", async() => {
                WriteLiteral("Select Financial Year");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_8.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                                                </select>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class=""col-sm-4"">
                                                        <div class=""form-group"">
                                                            <div class=""row"">
                                                                <label class=""col-sm-4 col-form-label text-right"">Country : </label>
                                                                <select class=""form-control  col-sm-8"" id=""countryY"" name=""countryY""");
            BeginWriteAttribute("value", " value=\"", 22524, "\"", 22532, 0);
            EndWriteAttribute();
            WriteLiteral(">\r\n                                                                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d4cfbdc747341cdb812964a952366605e629351177288", async() => {
                WriteLiteral("India");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_7.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_7);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("selected", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                                                </select>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class=""col-sm-4"">
                                                        <div class=""form-group"">
                                                            <div class=""row"">
                                                                <label class=""col-sm-4 col-form-label text-right"">State : </label>
                                                                <select class=""form-control  col-sm-8"" id=""stateY"" name=""stateY""");
            BeginWriteAttribute("value", " value=\"", 23415, "\"", 23423, 0);
            EndWriteAttribute();
            WriteLiteral(" onchange=\"GetSPV(this.value);\">\r\n                                                                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d4cfbdc747341cdb812964a952366605e629351179785", async() => {
                WriteLiteral("Select State");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_8.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                                                </select>
                                                            </div>
                                                        </div>
                                                    </div>

                                                </div>
                                                <div class=""row"">
                                                    <div class=""col-sm-4"">

                                                        <div class=""form-group"">
                                                            <div class=""row"">
                                                                <label class=""col-sm-4 col-form-label text-right"">SPV : </label>
                                                                <select class=""form-control  col-sm-8"" id=""spvY"" name=""spvY""");
            BeginWriteAttribute("value", " value=\"", 24451, "\"", 24459, 0);
            EndWriteAttribute();
            WriteLiteral(" onchange=\"getSite()\">\r\n                                                                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d4cfbdc747341cdb812964a952366605e629351182091", async() => {
                WriteLiteral("Select SPV");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_8.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                                                </select>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class=""col-sm-4"">
                                                        <div class=""form-group"">
                                                            <div class=""row"">
                                                                <label class=""col-sm-4 col-form-label text-right"">Site : </label>
                                                                <select class=""form-control  col-sm-8"" id=""siteY"" name=""siteY""");
            BeginWriteAttribute("value", " value=\"", 25351, "\"", 25359, 0);
            EndWriteAttribute();
            WriteLiteral(" onchange=\"GetWTG(this.value)\">\r\n                                                                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d4cfbdc747341cdb812964a952366605e629351184278", async() => {
                WriteLiteral("Select Site");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_8.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                                                </select>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class=""col-sm-4"">
                                                        <div class=""form-group"">
                                                            <div class=""row"">
                                                                <label class=""col-sm-4 col-form-label text-right"">WTG : </label>
                                                                <select class=""form-control  col-sm-8"" id=""wtgY"" name=""wtgY"">
                                                                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d4cfbdc747341cdb812964a952366605e629351186285", async() => {
                WriteLiteral("Select WTG");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_8.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                                                </select>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class=""row"">
                                                    <div class=""col-sm-5 text-left"">
                                                        <div class=""table-responsive pad"">
                                                            <div class=""btn-group btn-group-toggle"" data-toggle=""buttons"">
                                                                <label class=""btn bg-olive"">
                                                                    <input type=""radio"" name=""yearly"" value=""WTG"" id=""yearly_b1"" autocomplete=""off"" checked> WTG Wise Report
                                                            ");
            WriteLiteral(@"    </label>
                                                                <label class=""btn bg-olive"">
                                                                    <input type=""radio"" name=""yearly"" value=""Site"" id=""yearly_b2"" autocomplete=""off""> Site Wise Report
                                                                </label>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class=""col-sm-2 text-center"">
                                                        <button type=""button"" class=""btn btn-block btn-primary"" onclick=""GetYearlyGenReport();"">Search</button>
                                                    </div>
                                                    <div class=""col-sm-5 text-center""></div>
                                                </div>

                     ");
            WriteLiteral(@"                           <hr>
                                                <div id=""reportsYearly"" style=""overflow-x: auto;"" class=""reportsYearly""></div>
                                            </div>

                                        </div>
                                </div>
                                <!-- /.card -->
                            </div>
                    </div>

                    <!-- <div id=""reportsDaily"" style=""overflow-x: auto;"" class=""reportsDaily""></div>
                        <div id=""reportsMonthly"" style=""overflow-x: auto;"" class=""reportsMonthly""></div>
                        <div id=""reportsYearly"" style=""overflow-x: auto; "" class=""reportsYearly""></div>
    -->

                </div>

                <!--<div class=""card-footer"">
        Footer
    </div>-->

            </div>


    </section>

</div>
");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d4cfbdc747341cdb812964a952366605e629351190527", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_21);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.1.0/jquery.min.js\"></script>\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d4cfbdc747341cdb812964a952366605e629351191662", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_22);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d4cfbdc747341cdb812964a952366605e629351192703", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_23);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("defer", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d4cfbdc747341cdb812964a952366605e629351194052", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_24);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d4cfbdc747341cdb812964a952366605e629351195097", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_25);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n<!--Datatable -->\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d4cfbdc747341cdb812964a952366605e629351196159", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_26);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d4cfbdc747341cdb812964a952366605e629351197200", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_27);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d4cfbdc747341cdb812964a952366605e629351198241", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_28);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d4cfbdc747341cdb812964a952366605e629351199282", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_29);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d4cfbdc747341cdb812964a952366605e6293511100323", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_30);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d4cfbdc747341cdb812964a952366605e6293511101365", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_31);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d4cfbdc747341cdb812964a952366605e6293511102407", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_32);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d4cfbdc747341cdb812964a952366605e6293511103449", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_33);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d4cfbdc747341cdb812964a952366605e6293511104491", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_34);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d4cfbdc747341cdb812964a952366605e6293511105533", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_35);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d4cfbdc747341cdb812964a952366605e6293511106575", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_36);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d4cfbdc747341cdb812964a952366605e6293511107617", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_37);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d4cfbdc747341cdb812964a952366605e6293511108659", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_38);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
<script type=""text/javascript"">
    $(document).ready(function () {
        $('#daterange').daterangepicker(
            {
                locale: {
                    format: 'DD/MM/YYYY',
                }
            });
    });
    window.onload = function () {
        var selcountry = $('select#country option:selected').val();
        $.ajax({
            type: ""GET"",
            url: ""/WindReport/GetStateList?countryname="" + selcountry,
            contentType: ""application/json; charset=utf-8"",
            //data: '{""countryname"":""' + selcountry + '""}',
            datatype: ""html"",
            success: function (result, status, xhr) {
                var options = """";
                options += '<option value="""">Select State</option>';
                for (var i = 0; i < result.length; i++) {
                    options += '<option value=""' + result[i].state + '"">' + result[i].state + '</option>';
                }
                $(""#state"").html(options);
                $");
            WriteLiteral(@"(""#stateM"").html(options);
                $(""#stateY"").html(options);
            }
        });
        getYear();
    }
    function getYear() {
    $.ajax({
        type: ""GET"",
        url: ""/WindReport/GetFinacialYear"",
        contentType: ""application/json; charset=utf-8"",
        //data: '{""countryname"":""' + selcountry + '""}',
        datatype: ""html"",
        success: function (result, status, xhr) {
            var options = """";
            options += '<option value="""">Select Financial Year</option>';
            for (var i = 0; i < result.length; i++) {
                options += '<option value=""' + result[i].financial_year + '"">' + result[i].financial_year + '</option>';
            }
            $(""#fyM"").html(options);
            $(""#fyY"").html(options);
        }
    });
    }
    /*function GetCountry(val) {
        $.ajax({
            type: ""GET"",
            url: ""/WindReport/GetStateList?countryname="" + val,
            contentType: ""application/json; charset=u");
            WriteLiteral(@"tf-8"",
            //data: '{""countryname"":""' + selcountry + '""}',
            datatype: ""html"",
            success: function (result, status, xhr) {
                var options = """";
                options += '<option value="""">Select State</option>';
                for (var i = 0; i < result.length; i++) {
                    options += '<option value=""' + result[i].state + '"">' + result[i].state + '</option>';
                }
                $(""#state"").html(options);
            }
        });
    }*/

    function GetSPV(val) {
        $.ajax({
            type: ""GET"",
            url: ""/WindReport/GetSPVList?state="" + val,
            contentType: ""application/json; charset=utf-8"",
            //data: '{""state"":""' + val + '""}',
            datatype: ""html"",
            success: function (result, status, xhr) {
                var options = """";
                options += '<option value="""">Select SPV</option>';
                for (var j = 0; j < result.length; j++) {
         ");
            WriteLiteral(@"           options += '<option value=""' + result[j].spv + '"">' + result[j].spv + '</option>';
                }
                $(""#spv"").html(options);
                $(""#spvM"").html(options);
                $(""#spvY"").html(options);
            }
        });
        getSite();
    }
    function getSite() {
        var state = $('select#state option:selected').val();
        var spv = $('select#spv option:selected').val();

        $.ajax({
            type: ""POST"",
            url: ""/WindReport/GetSiteList?state="" + state + ""&spv="" + spv,
            contentType: ""application/json; charset=utf-8"",
            // data: '{""state"":""' + val + '""}',
            datatype: ""html"",
            success: function (result, status, xhr) {
                var options = """";
                options += '<option value="""">Select Site</option>';
                for (var k = 0; k < result.length; k++) {
                    options += '<option value=""' + result[k].site_master_id + '"">' + result[k].site");
            WriteLiteral(@" + '</option>';
                }
                $(""#site"").html(options);
                $(""#siteM"").html(options);
                $(""#siteY"").html(options);
            }
        });
    }
    function GetWTG(siteid) {
        $.ajax({
            type: ""GET"",
            url: ""/WindReport/GetWTGList?siteid="" + siteid,
            contentType: ""application/json; charset=utf-8"",
            // data: '{""state"":""' + val + '""}',
            datatype: ""html"",
            success: function (result, status, xhr) {
                var options = """";
                options += '<option value="""">Select WTG</option>';
                for (var k = 0; k < result.length; k++) {
                    options += '<option value=""' + result[k].wtg + '"">' + result[k].wtg + '</option>';
                }
                $(""#wtg"").html(options);
                $(""#wtgM"").html(options);
                $(""#wtgY"").html(options);
            }
        });
    }
   

    function GetDailyGenReport() {");
            WriteLiteral(@"

        var ReportType = $(""input[name='daily']:checked"").val();
        if (ReportType == ""WTG"") {
            GetDailyGenReportWTGWise();
        }
        else {
            GetDailyGenReportSiteWise();
        }
    }
    // Daily Gen Report WTG WIse 
    function GetDailyGenReportWTGWise() {
        var daterange = $('#daterange').val();
        var arr1 = new Array();
        arr1 = daterange.split(""-"");
        var fromDate = moment(arr1[0], 'DD/MM/YYYY').format('YYYY-MM-DD');
        var toDate = moment(arr1[1], 'DD/MM/YYYY').format('YYYY-MM-DD');
        var country = $('select#country option:selected').val();
        var state = $('select#state option:selected').val();
        var spv = $('select#spv option:selected').val();
        var site = $('select#site option:selected').val();
        var wtg = $('select#wtg option:selected').val();
        var reportType = ""WTG"";
        var reporthead = ""WTG Wise Report"";
        $.ajax({
            type: ""GET"",
            url: """);
            WriteLiteral(@"/WindReport/GetWindDailyGenerationReportWTGWise?fromDate="" + fromDate + ""&toDate="" + toDate + ""&country="" + country + ""&state="" + state + ""&spv="" + spv + ""&site="" + site + ""&wtg="" + wtg,
            contentType: ""application/json; charset=utf-8"",
           
            datatype: ""JSON"",
            success: function (result, status, xhr) {
                
                var tbl = '<div class=""text-center""><h5>' + reporthead+'</h5></div>';
                tbl += '<table id=""example1""  class=""table table-bordered table-striped"">';
                tbl += '<thead class=""tbl-head""><tr>';
                tbl += '<th style=""width:80px;"">Date</th>';
                tbl += '<th>Country</th>';
                tbl += '<th>State</th>';
                tbl += '<th>SPV</th>';
                tbl += '<th>Site</th>';
                tbl += '<th>WTG</th>';
                tbl += '<th>Wind (m/s)</th>';
                tbl += '<th>kWh</th>';
                tbl += '<th>PLF(%)</th>';
                tbl += '");
            WriteLiteral(@"<th>MA(%)(ACT)</th>';
                tbl += '<th>MA(%)(CON)</th>';
                tbl += '<th>IGA(%)</th>';
                tbl += '<th>EGA(%)</th>';
                tbl += '<th>Gen Hrs</th>';
                tbl += '<th>Lull Hrs</th>';
                tbl += '<th>USMH</th>';
                tbl += '<th>SMH</th>';
                tbl += '<th>OH</th>';
                tbl += '<th>IGBD</th>';
                tbl += '<th>EGBD</th>';
                tbl += '<th>Load Shedding</th>';
                tbl += '</tr></thead>';
                console.log(result.length);
                if (result.length > 0) {
                    console.log(""Datatable"");
                    for (var i = 0; i < result.length; i++) {
                        var formattedDate = moment(result[i].date, 'YYYY/MM/DD').format('DD-MM-YYYY');
                        tbl += '<tr>';
                        tbl += '<td>' + formattedDate + '</td>';
                        tbl += '<td>' + result[i].country + '</td>';
         ");
            WriteLiteral(@"               tbl += '<td>' + result[i].state + '</td>';
                        tbl += '<td>' + result[i].spv + '</td>';
                        tbl += '<td>' + result[i].site + '</td>';
                        tbl += '<td>' + result[i].wtg + '</td>';
                        tbl += '<td>' + result[i].wind_speed.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].kwh.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].plf.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].ma_actual.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].ma_contractual.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].iga.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].ega.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].grid_hrs.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].lull_hrs.toFixed(2) + '</td>';
                        tbl += '<td>' +");
            WriteLiteral(@" result[i].unschedule_hrs.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].schedule_hrs.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].others.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].igbdh.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].egbdh.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].load_shedding.toFixed(2) + '</td>';
                       
                        tbl += '</tr>';
                    }
                }
                else {
                    console.log(""Data not available"");
                  
                }
                tbl += '</table>';
                $(""#reportsDaily"").html(tbl);
                $.noConflict();
                $('#example1').DataTable({
                    ""responsive"": true, ""lengthChange"": false, ""autoWidth"": false,
                    ""buttons"": [""copy"", ""csv"", ""excel"", ""pdf"", ""print"", ""colvis""],
         ");
            WriteLiteral(@"           ""paging"": true,
                    ""lengthChange"": false,
                    ""searching"": true,
                    ""ordering"": true,
                    ""info"": true,
                    ""autoWidth"": false,
                    ""responsive"": true,
                }).buttons().container().appendTo('#example1_wrapper .col-md-6:eq(0)');

                //document.getElementById(""reportsDaily"").style.display = 'block';
                ///document.getElementById(""reportsMonthly"").style.display = 'block';
               // document.getElementById(""reportsYearly"").style.display = 'block';
            }
        });

    }
   // -----------------------------------------------

    // Daily Gen Report Site WIse 
    function GetDailyGenReportSiteWise() {
        var daterange = $('#daterange').val();
        var arr1 = new Array();
        arr1 = daterange.split(""-"");
        var fromDate = moment(arr1[0], 'DD/MM/YYYY').format('YYYY-MM-DD');
        var toDate = moment(arr1[1], 'DD");
            WriteLiteral(@"/MM/YYYY').format('YYYY-MM-DD');
        var country = $('select#country option:selected').val();
        var state = $('select#state option:selected').val();
        var spv = $('select#spv option:selected').val();
        var site = $('select#site option:selected').val();
        var wtg = $('select#wtg option:selected').val();
        var reportType = ""WTG"";
        var reporthead = ""Site Wise Report"";
        $.ajax({
            type: ""GET"",
            url: ""/WindReport/GetWindDailyGenerationReportSiteWise?fromDate="" + fromDate + ""&toDate="" + toDate + ""&country="" + country + ""&state="" + state + ""&spv="" + spv + ""&site="" + site + ""&wtg="" + wtg + ""&reportType="" + reportType,
            contentType: ""application/json; charset=utf-8"",

            datatype: ""JSON"",
            success: function (result, status, xhr) {
                console.log(result);
                var tbl = '<div class=""text-center""><h5>' + reporthead + '</h5></div>';
                tbl += '<table id=""example1""  clas");
            WriteLiteral(@"s=""table table-bordered table-striped"">';
                tbl += '<thead class=""tbl-head""><tr>';
                tbl += '<th style=""width:80px;"">Date</th>';
                tbl += '<th>Country</th>';
                tbl += '<th>State</th>';
                tbl += '<th>SPV</th>';
                tbl += '<th>Site</th>';
                tbl += '<th>Capacity(MW)</th>';
                tbl += '<th>Wind (m/s)</th>';
                tbl += '<th>kWh</th>';
                tbl += '<th>PLF(%)</th>';
                tbl += '<th>MA(%)(ACT)</th>';
                tbl += '<th>MA(%)(CON)</th>';
                tbl += '<th>IGA(%)</th>';
                tbl += '<th>EGA(%)</th>';
                tbl += '<th>Gen Hrs</th>';
                tbl += '<th>Lull Hrs</th>';
                tbl += '<th>USMH</th>';
                tbl += '<th>SMH</th>';
                tbl += '<th>OH</th>';
                tbl += '<th>IGBD</th>';
                tbl += '<th>EGBD</th>';
                tbl += '<th>Load Shedding</th>'");
            WriteLiteral(@";
                tbl += '</tr></thead>';
                console.log(result.length);
                if (result.length > 0) {
                    console.log(""Datatable"");
                    for (var i = 0; i < result.length; i++) {
                        var formattedDate = moment(result[i].date, 'YYYY/MM/DD').format('DD-MM-YYYY');
                        tbl += '<tr>';
                        tbl += '<td>' + formattedDate + '</td>';
                        tbl += '<td>' + result[i].country + '</td>';
                        tbl += '<td>' + result[i].state + '</td>';
                        tbl += '<td>' + result[i].spv + '</td>';
                        tbl += '<td>' + result[i].site + '</td>';
                        tbl += '<td>' + result[i].total_mw.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].wind_speed.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].kwh.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].plf.toFix");
            WriteLiteral(@"ed(2) + '</td>';
                        tbl += '<td>' + result[i].ma_actual.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].ma_contractual.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].iga.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].ega.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].grid_hrs.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].lull_hrs.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].unschedule_hrs.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].schedule_hrs.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].others.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].igbdh.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].egbdh.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].load_shedding.toFixed(2) + '</td>';

                ");
            WriteLiteral(@"        tbl += '</tr>';
                    }
                }
                else {
                    console.log(""Data not available"");

                }
                tbl += '</table>';
                $(""#reportsDaily"").html(tbl);
                $.noConflict();
                $('#example1').DataTable({
                    ""responsive"": true, ""lengthChange"": false, ""autoWidth"": false,
                    ""buttons"": [""copy"", ""csv"", ""excel"", ""pdf"", ""print"", ""colvis""],
                    ""paging"": true,
                    ""lengthChange"": false,
                    ""searching"": true,
                    ""ordering"": true,
                    ""info"": true,
                    ""autoWidth"": false,
                    ""responsive"": true,
                }).buttons().container().appendTo('#example1_wrapper .col-md-6:eq(0)');

                //document.getElementById(""reportsDaily"").style.display = 'block';
                ///document.getElementById(""reportsMonthly"").style.display =");
            WriteLiteral(@" 'block';
                // document.getElementById(""reportsYearly"").style.display = 'block';
            }
        });
    }


   // -----------------------------------Monthly ---------------------//
    function GetMonthlyGenReport() {
       
       var ReportType = $(""input[name='monthly']:checked"").val();
        if (ReportType == ""WTG"") {
           //alert(""WTG"");
            GetMonthlyGenReportWTGWise();
        }
        else {
            //alert(""SIte"");
            GetMonthlyGenReportSiteWise();
        }
    }

    // Mothly Report WTG Wise
    function GetMonthlyGenReportWTGWise() {
       
        var country = $('select#countryM option:selected').val();
        var state = $('select#stateM option:selected').val();
        var spv = $('select#spvM option:selected').val();
        var site = $('select#siteM option:selected').val();
        var wtg = $('select#wtgM option:selected').val();
        var year = $('select#fyM option:selected').val();
        var month =");
            WriteLiteral(@" $('select#monthM option:selected').val();
        var arr1 = new Array();
        arr1 = year.split(""-"");
        var fromDate = """";
        if (month >= '04' || month >= 04) {
            fromDate = arr1[0] + '-' + month + '-01';
        }
        else
        {
            fromDate = '20' + arr1[1] + '-' + month + '-01';
        }
        
        var reportType = ""WTG"";
        var reporthead = ""WTG Wise Report"";
        $.ajax({
            type: ""GET"",
            url: ""/WindReport/GetWindMonthlyGenerationReportWTGWise?fromDate="" + fromDate + ""&month="" + month + ""&country="" + country + ""&state="" + state + ""&spv="" + spv + ""&site="" + site + ""&wtg="" + wtg + ""&reportType="" + reportType,
            contentType: ""application/json; charset=utf-8"",

            datatype: ""JSON"",
            success: function (result, status, xhr) {
                console.log(result);
               
                var tbl = '<div class=""text-center""><h5>' + reporthead + '</h5></div>';
                ");
            WriteLiteral(@"tbl += '<table id=""example2""  class=""table table-bordered table-striped"">';
                tbl += '<thead class=""tbl-head""><tr>';
                tbl += '<th>FY</th>';
                tbl += '<th>Month</th>';
                tbl += '<th>Country</th>';
                tbl += '<th>State</th>';
                tbl += '<th>SPV</th>';
                tbl += '<th>Site</th>';
                tbl += '<th>WTG</th>';
                tbl += '<th>Wind(m/s)</th>';
                tbl += '<th>kWh</th>';
                tbl += '<th>PLF(%)</th>';
                tbl += '<th>MA(%)(ACT)</th>';
                tbl += '<th>MA(%)(CON)</th>';
                tbl += '<th>IGA(%)</th>';
                tbl += '<th>EGA(%)</th>';
                tbl += '<th>Gen Hrs</th>';
                tbl += '<th>Lull Hrs</th>';
                tbl += '<th>USMH</th>';
                tbl += '<th>SMH</th>';
                tbl += '<th>OH</th>';
                tbl += '<th>IGBD</th>';
                tbl += '<th>EGBD</th>';
   ");
            WriteLiteral(@"             tbl += '<th>Load Shedding</th>';
                tbl += '</tr></thead>';
                console.log(result.length);
                if (result.length > 0) {
                    console.log(""Datatable"");
                    for (var i = 0; i < result.length; i++) {
                        //var formattedDate = moment(result[i].date, 'YYYY/MM/DD').format('DD-MM-YYYY');
                        tbl += '<tr>';
                        tbl += '<td>' + result[i].year + '</td>';
                        tbl += '<td>' + result[i].month + '</td>';
                        tbl += '<td>' + result[i].country + '</td>';
                        tbl += '<td>' + result[i].state + '</td>';
                        tbl += '<td>' + result[i].spv + '</td>';
                        tbl += '<td>' + result[i].site + '</td>';
                        tbl += '<td>' + result[i].wtg + '</td>';
                        tbl += '<td>' + result[i].wind_speed.toFixed(2) + '</td>';
                        tbl += '<td>'");
            WriteLiteral(@" + result[i].kwh.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].plf.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].ma_actual.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].ma_contractual.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].iga.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].ega.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].grid_hrs.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].lull_hrs.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].unschedule_hrs.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].schedule_hrs.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].others.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].igbdh.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].egbdh.toFixed(2) + '</td>';
      ");
            WriteLiteral(@"                  tbl += '<td>' + result[i].load_shedding.toFixed(2) + '</td>';

                        tbl += '</tr>';
                    }
                }
                else {
                    console.log(""Data not available"");
                    // tbl += '<tr><th colspan=""12"" style=""text-align:center"">Data Not Available <th></tr>';
                }
               tbl += '</table>';
                $(""#reportsMonthly"").html(tbl);
                $.noConflict();
                $('#example2').DataTable({
                    ""responsive"": true, ""lengthChange"": false, ""autoWidth"": false,
                    ""buttons"": [""copy"", ""csv"", ""excel"", ""pdf"", ""print"", ""colvis""],
                    ""paging"": true,
                    ""lengthChange"": false,
                    ""searching"": true,
                    ""ordering"": true,
                    ""info"": true,
                    ""autoWidth"": false,
                    ""responsive"": true,
                }).buttons().container().ap");
            WriteLiteral(@"pendTo('#example1_wrapper .col-md-6:eq(0)');
            }
        });

    }
    //------------------------------------
    // Mothly Report SIte Wise
    function GetMonthlyGenReportSiteWise() {

        var country = $('select#countryM option:selected').val();
        var state = $('select#stateM option:selected').val();
        var spv = $('select#spvM option:selected').val();
        var site = $('select#siteM option:selected').val();
        var wtg = $('select#wtgM option:selected').val();
        var fyyear = $('select#fyM option:selected').val();
        var month = $('select#monthM option:selected').val();
        var arr1 = new Array();
        arr1 = fyyear.split(""-"");
        var fromDate = """";
        if (month >= '04' || month >= 04) {
            fromDate = arr1[0] + '-' + month + '-01';
        }
        else {
            fromDate = '20' + arr1[1] + '-' + month + '-01';
        }

        var reportType = ""WTG"";
        var reporthead = ""WTG Wise Report"";
        ");
            WriteLiteral(@"$.ajax({
            type: ""GET"",
            url: ""/WindReport/GetWindMonthlyGenerationReportSiteWise?fromDate="" + fromDate + ""&month="" + month + ""&country="" + country + ""&state="" + state + ""&spv="" + spv + ""&site="" + site + ""&wtg="" + wtg + ""&reportType="" + reportType,
            contentType: ""application/json; charset=utf-8"",

            datatype: ""JSON"",
            success: function (result, status, xhr) {
                console.log(result);

                var tbl = '<div class=""text-center""><h5>' + reporthead + '</h5></div>';
                tbl += '<table id=""example2""  class=""table table-bordered table-striped"">';
                tbl += '<thead class=""tbl-head""><tr>';
                tbl += '<th>FY</th>';
                tbl += '<th>Month</th>';
                tbl += '<th>Country</th>';
                tbl += '<th>State</th>';
                tbl += '<th>SPV</th>';
                tbl += '<th>Site</th>';
                tbl += '<th>Capacity(MW)</th>';
                tbl += '<th");
            WriteLiteral(@">Wind(m/s)</th>';
                tbl += '<th>kWh</th>';
                tbl += '<th>PLF(%)</th>';
                tbl += '<th>MA(%)(ACT)</th>';
                tbl += '<th>MA(%)(CON)</th>';
                tbl += '<th>IGA(%)</th>';
                tbl += '<th>EGA(%)</th>';
                tbl += '<th>Gen Hrs</th>';
                tbl += '<th>Lull Hrs</th>';
                tbl += '<th>USMH</th>';
                tbl += '<th>SMH</th>';
                tbl += '<th>OH</th>';
                tbl += '<th>IGBD</th>';
                tbl += '<th>EGBD</th>';
                tbl += '<th>Load Shedding</th>';
                tbl += '</tr></thead>';
                console.log(result.length);
                if (result.length > 0) {
                    console.log(""Datatable"");
                    for (var i = 0; i < result.length; i++) {
                        //var formattedDate = moment(result[i].date, 'YYYY/MM/DD').format('DD-MM-YYYY');
                        tbl += '<tr>';
                 ");
            WriteLiteral(@"       tbl += '<td>' + fyyear + '</td>';
                        tbl += '<td>' + result[i].month + '</td>';
                        tbl += '<td>' + result[i].country + '</td>';
                        tbl += '<td>' + result[i].state + '</td>';
                        tbl += '<td>' + result[i].spv + '</td>';
                        tbl += '<td>' + result[i].site + '</td>';
                        tbl += '<td>' + result[i].total_mw.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].wind_speed.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].kwh.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].plf.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].ma_actual.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].ma_contractual.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].iga.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].ega.toFixed(2) + '</td>';");
            WriteLiteral(@"
                        tbl += '<td>' + result[i].grid_hrs.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].lull_hrs.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].unschedule_hrs.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].schedule_hrs.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].others.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].igbdh.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].egbdh.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].load_shedding.toFixed(2) + '</td>';

                        tbl += '</tr>';
                    }
                }
                else {
                    console.log(""Data not available"");
                   
                }
                tbl += '</table>';
                $(""#reportsMonthly"").html(tbl);
                $.noConflict();
                $('#example2').DataT");
            WriteLiteral(@"able({
                    ""responsive"": true, ""lengthChange"": false, ""autoWidth"": false,
                    ""buttons"": [""copy"", ""csv"", ""excel"", ""pdf"", ""print"", ""colvis""],
                    ""paging"": true,
                    ""lengthChange"": false,
                    ""searching"": true,
                    ""ordering"": true,
                    ""info"": true,
                    ""autoWidth"": false,
                    ""responsive"": true,
                }).buttons().container().appendTo('#example1_wrapper .col-md-6:eq(0)');
            }
        });

    }

    // -----------------------------------Yearly ---------------------//
    function GetYearlyGenReport() {

        var ReportType = $(""input[name='yearly']:checked"").val();
        if (ReportType == ""WTG"") {
            //alert(""WTG"");
            GetYearlyGenReportWTGWise();
        }
        else {
            //alert(""SIte"");
            GetYearlyGenReportSiteWise();
        }
    }

    // Yearly WTG Wise
    function");
            WriteLiteral(@" GetYearlyGenReportWTGWise() {
        var country = $('select#countryM option:selected').val();
        var state = $('select#stateM option:selected').val();
        var spv = $('select#spvY option:selected').val();
        var site = $('select#siteY option:selected').val();
        var wtg = $('select#wtgY option:selected').val();
        var fyyear = $('select#fyY option:selected').val();
        //var month = $('select#monthM option:selected').val();
        var arr1 = new Array();
        arr1 = fyyear.split(""-"");
        var fromDate = """";
        fromDate = arr1[0] +'-04-01';
        toDate = '20' + arr1[1] + '-03-31';
        
       // alert(fromDate);
      //  alert(toDate);
        var reportType = ""WTG"";
        var reporthead = ""WTG Wise Report"";
        $.ajax({
            type: ""GET"",
            url: ""/WindReport/GetWindYearlyGenerationReportWTGWise?fromDate="" + fromDate + ""&toDate="" + toDate + ""&country="" + country + ""&state="" + state + ""&spv="" + spv + ""&site="" + site + ");
            WriteLiteral(@"""&wtg="" + wtg + ""&reportType="" + reportType,
            contentType: ""application/json; charset=utf-8"",

            datatype: ""JSON"",
            success: function (result, status, xhr) {
                console.log(result);
               
                var tbl = '<div class=""text-center""><h5>' + reporthead + '</h5></div>';
                tbl += '<table id=""example3""  class=""table table-bordered table-striped"">';
                tbl += '<thead class=""tbl-head""><tr>';
                tbl += '<th>Fy</th>';
                tbl += '<th>Country</th>';
                tbl += '<th>State</th>';
                tbl += '<th>SPV</th>';
                tbl += '<th>Site</th>';
                tbl += '<th>WTG</th>';
                tbl += '<th>Wind (m/s)</th>';
                tbl += '<th>kWh</th>';
                tbl += '<th>PLF(%)</th>';
                tbl += '<th>MA(%)(ACT)</th>';
                tbl += '<th>MA(%)(CON)</th>';
                tbl += '<th>IGA(%)</th>';
                tbl += ");
            WriteLiteral(@"'<th>EGA(%)</th>';
                tbl += '<th>Gen Hrs</th>';
                tbl += '<th>Lull Hrs</th>';
                tbl += '<th>USMH</th>';
                tbl += '<th>SMH</th>';
                tbl += '<th>OH</th>';
                tbl += '<th>IGBD</th>';
                tbl += '<th>EGBD</th>';
                tbl += '<th>Load Shedding</th>';
                tbl += '</tr></thead>';
                console.log(result.length);
                if (result.length > 0) {
                    console.log(""Datatable"");
                    for (var i = 0; i < result.length; i++) {
                       // var formattedDate = moment(result[i].date, 'YYYY/MM/DD').format('DD-MM-YYYY');
                        tbl += '<tr>';
                        tbl += '<td>' + fyyear  + '</td>';
                        tbl += '<td>' + result[i].country + '</td>';
                        tbl += '<td>' + result[i].state + '</td>';
                        tbl += '<td>' + result[i].spv + '</td>';
               ");
            WriteLiteral(@"         tbl += '<td>' + result[i].site + '</td>';
                        tbl += '<td>' + result[i].wtg + '</td>';
                        tbl += '<td>' + result[i].wind_speed.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].kwh.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].plf.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].ma_actual.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].ma_contractual.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].iga.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].ega.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].grid_hrs.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].lull_hrs.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].unschedule_hrs.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].schedule_hrs.toFixed(2) + '</td>';
     ");
            WriteLiteral(@"                   tbl += '<td>' + result[i].others.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].igbdh.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].egbdh.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].load_shedding.toFixed(2) + '</td>';

                        tbl += '</tr>';
                    }
                }
                else {
                    console.log(""Data not available"");
                    // tbl += '<tr><th colspan=""12"" style=""text-align:center"">Data Not Available <th></tr>';
                }
                tbl += '</table>';
                $(""#reportsYearly"").html(tbl);
               
                $.noConflict();
                
                //$('#example1').DataTable().clear().destroy();
                $('#example3').DataTable({
                   
                    ""responsive"": true, ""lengthChange"": false, ""autoWidth"": false,
                    ""buttons"": [""copy"", ""csv");
            WriteLiteral(@""", ""excel"", ""pdf"", ""print"", ""colvis""],
                    ""paging"": true,
                    ""lengthChange"": false,
                    ""searching"": true,
                    ""ordering"": true,
                    ""info"": true,
                    ""autoWidth"": false,
                    ""responsive"": true,
                }).buttons().container().appendTo('#example1_wrapper .col-md-6:eq(0)');

            }
        });

    }

    // Yearly SIte Wise
    function GetYearlyGenReportSiteWise() {
        var country = $('select#countryM option:selected').val();
        var state = $('select#stateM option:selected').val();
        var spv = $('select#spvY option:selected').val();
        var site = $('select#siteY option:selected').val();
        var wtg = $('select#wtgY option:selected').val();
        var fyyear = $('select#fyY option:selected').val();
        //var month = $('select#monthM option:selected').val();
        var arr1 = new Array();
        arr1 = fyyear.split(""-"");
    ");
            WriteLiteral(@"    var fromDate = """";
        fromDate = arr1[0] + '-04-01';
        toDate = '20' + arr1[1] + '-03-31';

        // alert(fromDate);
        //  alert(toDate);
        var reportType = ""Site"";
        var reporthead = ""Site Wise Report"";
        $.ajax({
            type: ""GET"",
            url: ""/WindReport/GetWindYearlyGenerationReportSiteWise?fromDate="" + fromDate + ""&toDate="" + toDate + ""&country="" + country + ""&state="" + state + ""&spv="" + spv + ""&site="" + site + ""&wtg="" + wtg + ""&reportType="" + reportType,
            contentType: ""application/json; charset=utf-8"",

            datatype: ""JSON"",
            success: function (result, status, xhr) {
                console.log(result);
                
                var tbl = '<div class=""text-center""><h5>' + reporthead + '</h5></div>';
                tbl += '<table id=""example3""  class=""table table-bordered table-striped"">';
                tbl += '<thead class=""tbl-head""><tr>';
                tbl += '<th>Fy</th>';
            ");
            WriteLiteral(@"    tbl += '<th>Country</th>';
                tbl += '<th>State</th>';
                tbl += '<th>SPV</th>';
                tbl += '<th>Site</th>';
                tbl += '<th>Capacity(MW)</th>';
                tbl += '<th>Wind (m/s)</th>';
                tbl += '<th>kWh</th>';
                tbl += '<th>PLF(%)</th>';
                tbl += '<th>MA(%)(ACT)</th>';
                tbl += '<th>MA(%)(CON)</th>';
                tbl += '<th>IGA(%)</th>';
                tbl += '<th>EGA(%)</th>';
                tbl += '<th>Gen Hrs</th>';
                tbl += '<th>Lull Hrs</th>';
                tbl += '<th>USMH</th>';
                tbl += '<th>SMH</th>';
                tbl += '<th>OH</th>';
                tbl += '<th>IGBD</th>';
                tbl += '<th>EGBD</th>';
                tbl += '<th>Load Shedding</th>';
                tbl += '</tr></thead>';
                console.log(result.length);
                if (result.length > 0) {
                    console.log(""Datatabl");
            WriteLiteral(@"e"");
                    for (var i = 0; i < result.length; i++) {
                        // var formattedDate = moment(result[i].date, 'YYYY/MM/DD').format('DD-MM-YYYY');
                        tbl += '<tr>';
                        tbl += '<td>' + fyyear + '</td>';
                        tbl += '<td>' + result[i].country + '</td>';
                        tbl += '<td>' + result[i].state + '</td>';
                        tbl += '<td>' + result[i].spv + '</td>';
                        tbl += '<td>' + result[i].site + '</td>';
                        tbl += '<td>' + result[i].total_mw.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].wind_speed.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].kwh.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].plf.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].ma_actual.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].ma_contractual.toFixed(2)");
            WriteLiteral(@" + '</td>';
                        tbl += '<td>' + result[i].iga.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].ega.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].grid_hrs.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].lull_hrs.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].unschedule_hrs.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].schedule_hrs.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].others.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].igbdh.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].egbdh.toFixed(2) + '</td>';
                        tbl += '<td>' + result[i].load_shedding.toFixed(2) + '</td>';

                        tbl += '</tr>';
                    }
                }
                else {
                    console.log(""Data not available"");
                    // tbl +=");
            WriteLiteral(@" '<tr><th colspan=""12"" style=""text-align:center"">Data Not Available <th></tr>';
                }
                tbl += '</table>';
                $(""#reportsYearly"").html(tbl);

                $.noConflict();

                //$('#example1').DataTable().clear().destroy();
                $('#example3').DataTable({

                    ""responsive"": true, ""lengthChange"": false, ""autoWidth"": false,
                    ""buttons"": [""copy"", ""csv"", ""excel"", ""pdf"", ""print"", ""colvis""],
                    ""paging"": true,
                    ""lengthChange"": false,
                    ""searching"": true,
                    ""ordering"": true,
                    ""info"": true,
                    ""autoWidth"": false,
                    ""responsive"": true,
                }).buttons().container().appendTo('#example1_wrapper .col-md-6:eq(0)');

            }
        });

    }

</script>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<DGRA_V1.Models.CountryList> Html { get; private set; }
    }
}
#pragma warning restore 1591
