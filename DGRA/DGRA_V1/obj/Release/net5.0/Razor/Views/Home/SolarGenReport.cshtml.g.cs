#pragma checksum "C:\Data Folder All Data should be here\DGR\Git_Repo_code\Production code\Code UP\New_up_2\DGR_Main\DGRA\DGRA_V1\Views\Home\SolarGenReport.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "beb91f893828870800c1eb2ea3728be5f1093fc4"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_SolarGenReport), @"mvc.1.0.view", @"/Views/Home/SolarGenReport.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Data Folder All Data should be here\DGR\Git_Repo_code\Production code\Code UP\New_up_2\DGR_Main\DGRA\DGRA_V1\Views\_ViewImports.cshtml"
using DGRA_V1;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Data Folder All Data should be here\DGR\Git_Repo_code\Production code\Code UP\New_up_2\DGR_Main\DGRA\DGRA_V1\Views\_ViewImports.cshtml"
using DGRA_V1.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "C:\Data Folder All Data should be here\DGR\Git_Repo_code\Production code\Code UP\New_up_2\DGR_Main\DGRA\DGRA_V1\Views\Home\SolarGenReport.cshtml"
using Newtonsoft.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Data Folder All Data should be here\DGR\Git_Repo_code\Production code\Code UP\New_up_2\DGR_Main\DGRA\DGRA_V1\Views\Home\SolarGenReport.cshtml"
using Microsoft.AspNetCore.Http;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"beb91f893828870800c1eb2ea3728be5f1093fc4", @"/Views/Home/SolarGenReport.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"aa9fc0f0a035817cf8f1fc535e299e80b45b9453", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_SolarGenReport : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<DGRA_V1.Models.CountryList>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/plugins/fontawesome-free/css/all.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/plugins/daterangepicker/daterangepicker.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/plugins/datatables-bs4/css/dataTables.bootstrap4.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/plugins/datatables-responsive/css/responsive.bootstrap4.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/plugins/datatables-buttons/css/buttons.bootstrap4.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/plugins/multiple-select/dist/multiple-select.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/dist/css/adminlte.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "india", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "04", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "05", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "06", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_13 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "07", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_14 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "08", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_15 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "09", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_16 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "10", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_17 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "11", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_18 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "12", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_19 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "01", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_20 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "02", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_21 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "03", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_22 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/plugins/jquery/jquery.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_23 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/plugins/multiple-select/dist/multiple-select.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_24 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/plugins/moment/moment.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_25 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/plugins/inputmask/jquery.inputmask.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_26 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/plugins/daterangepicker/daterangepicker.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_27 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/plugins/tempusdominus-bootstrap-4/js/tempusdominus-bootstrap-4.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_28 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/plugins/summernote/summernote-bs4.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_29 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/plugins/bootstrap/js/bootstrap.bundle.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_30 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/plugins/datatables/jquery.dataTables.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_31 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/plugins/datatables/jquery.dataTables.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_32 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/plugins/datatables-buttons/js/dataTables.buttons.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_33 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/plugins/jszip/jszip.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_34 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/plugins/datatables-buttons/js/buttons.html5.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_35 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/plugins/pdfmake/pdfmake.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_36 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/plugins/datatables-buttons/js/buttons.colVis.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 5 "C:\Data Folder All Data should be here\DGR\Git_Repo_code\Production code\Code UP\New_up_2\DGR_Main\DGRA\DGRA_V1\Views\Home\SolarGenReport.cshtml"
  
    ViewData["Title"] = "Solar Generation Reports";

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Data Folder All Data should be here\DGR\Git_Repo_code\Production code\Code UP\New_up_2\DGR_Main\DGRA\DGRA_V1\Views\Home\SolarGenReport.cshtml"
  
    ViewData["Title"] = "Wind Daily Load Shedding";

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Data Folder All Data should be here\DGR\Git_Repo_code\Production code\Code UP\New_up_2\DGR_Main\DGRA\DGRA_V1\Views\Home\SolarGenReport.cshtml"
  
    string solarSiteList = "";

    var usermodel = JsonConvert.DeserializeObject<UserAccess>(@HttpContextAccessor.HttpContext.Session.GetString("UserAccess"));


#line default
#line hidden
#nullable disable
#nullable restore
#line 17 "C:\Data Folder All Data should be here\DGR\Git_Repo_code\Production code\Code UP\New_up_2\DGR_Main\DGRA\DGRA_V1\Views\Home\SolarGenReport.cshtml"
 for (int i = 0; i < @usermodel.access_list.Count; i++)
{

    if (@usermodel.access_list[i].page_type == 3 && @usermodel.access_list[i].site_type == 2)
    {
        solarSiteList += @usermodel.access_list[i].identity.ToString() + ",";
    }


}

#line default
#line hidden
#nullable disable
            WriteLiteral(@"<link rel=""stylesheet"" href=""/path/to/cdn/bootstrap.min.css"" />
<script src=""/path/to/cdn/jquery.min.js""></script>
<script src=""/path/to/cdn/bootstrap.min.js""></script>
<link rel=""stylesheet"" href=""https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700&display=fallback"">
<!-- Font Awesome -->
");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "beb91f893828870800c1eb2ea3728be5f1093fc418952", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n<!-- daterange picker -->\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "beb91f893828870800c1eb2ea3728be5f1093fc420097", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n<!-- DataTables -->\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "beb91f893828870800c1eb2ea3728be5f1093fc421236", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "beb91f893828870800c1eb2ea3728be5f1093fc422352", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "beb91f893828870800c1eb2ea3728be5f1093fc423468", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "beb91f893828870800c1eb2ea3728be5f1093fc424584", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "beb91f893828870800c1eb2ea3728be5f1093fc425707", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
<style>
    .tab-btn {
        font-size: 0.7rem;
        font-weight: bold;
    }
</style>

<div class=""content-wrapper"">

    <section class=""content-header"">
    </section>


    <section class=""content"">
        <div class=""card"">
            <div class=""card-header"">
                <h3 class=""card-title text-center"">Solar Generation Reports</h3>


            </div>
            <div class=""card-body"">
                <div class=""row"">
                    <div class=""col-12 col-sm-12"">
                        <div class=""card card-primary card-outline card-tabs"">
                            <div class=""p-0 pt-1 border-bottom-0"">
                                <!--<div class=""card-header p-0 pt-1 border-bottom-0"">-->
                                <ul class=""nav nav-tabs"" id=""custom-tabs-three-tab"" role=""tablist"">
                                    <li class=""nav-item"">
                                        <a class=""nav-link active"" id=""custom-tabs-three-daily-tab"" data");
            WriteLiteral(@"-toggle=""pill"" href=""#custom-tabs-three-daily"" role=""tab"" aria-controls=""custom-tabs-three-daily"" aria-selected=""true"">Daily Gen Report</a>
                                    </li>
                                    <li class=""nav-item"">
                                        <a class=""nav-link"" id=""custom-tabs-three-monthly-tab"" data-toggle=""pill"" href=""#custom-tabs-three-monthly"" role=""tab"" aria-controls=""custom-tabs-three-monthly"" aria-selected=""false"">Monthly Gen Report</a>
                                    </li>
                                    <li class=""nav-item"">
                                        <a class=""nav-link"" id=""custom-tabs-three-yearly-tab"" data-toggle=""pill"" href=""#custom-tabs-three-yearly"" role=""tab"" aria-controls=""custom-tabs-three-yearly"" aria-selected=""false"">Yearly Gen Report</a>
                                    </li>



                                </ul>

                            </div>

                            <div class=""card-body"">
        ");
            WriteLiteral(@"                        <div class=""tab-content"" id=""custom-tabs-three-tabContent"">
                                    <div class=""tab-pane fade show active"" id=""custom-tabs-three-daily"" role=""tabpanel"" aria-labelledby=""custom-tabs-three-daily-tab"">
                                        <div class=""row"">
                                            <div class=""col-sm-4"">
                                                <div class=""input-group "" style=""margin-left: -13%; width: 115%;"">
                                                    <label class=""col-sm-3 col-form-label text-left"" style=""padding-left: 10%; "">Date : </label>
                                                    <div class=""input-group-prepend"">
                                                        <span class=""input-group-text"">
                                                            <i class=""far fa-calendar-alt""></i>
                                                        </span>
                                            ");
            WriteLiteral(@"        </div>
                                                    <input type=""text"" class=""form-control float-right"" id=""daterange"" name=""daterange"">
                                                </div>
                                            </div>
                                            <div class=""col-sm-4"">

                                                <div class=""form-group"">
                                                    <div class=""row"">
                                                        <label class=""col-sm-3 col-form-label text-right"">Country : </label>
                                                        <select class=""form-control  col-sm-8"" id=""country"" name=""country""");
            BeginWriteAttribute("value", " value=\"", 5538, "\"", 5546, 0);
            EndWriteAttribute();
            WriteLiteral(">\r\n\r\n                                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "beb91f893828870800c1eb2ea3728be5f1093fc431055", async() => {
                WriteLiteral("India");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_8.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_8);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("selected", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"


                                                        </select>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class=""col-sm-4"">
                                                <div class=""form-group"">
                                                    <div class=""row"">
                                                        <label class=""col-sm-3 col-form-label text-right"">State : </label>
                                                        <select class=""form-control  col-sm-8"" id=""state"" name=""state[]""");
            BeginWriteAttribute("value", " value=\"", 6355, "\"", 6363, 0);
            EndWriteAttribute();
            WriteLiteral(@" onchange=""GetSPV();"" multiple></select>
                                                    </div>
                                                </div>
                                            </div>

                                        </div>
                                        <div class=""row"">
                                            <div class=""col-sm-4"">
                                                <div class=""form-group"">
                                                    <div class=""row"">
                                                        <label class=""col-sm-2 col-form-label text-lefft"">SPV : </label>
                                                        <select class=""form-control  col-sm-10"" id=""spv"" name=""spv[]""");
            BeginWriteAttribute("value", " value=\"", 7135, "\"", 7143, 0);
            EndWriteAttribute();
            WriteLiteral(@" onchange=""GetSite()"" multiple></select>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class=""col-sm-4"">

                                                <div class=""form-group"">
                                                    <div class=""row"">
                                                        <label class=""col-sm-3 col-form-label text-right"">Site : </label>
                                                        <select class=""form-control  col-sm-8"" id=""site"" name=""site[]""");
            BeginWriteAttribute("value", " value=\"", 7810, "\"", 7818, 0);
            EndWriteAttribute();
            WriteLiteral(@" onchange=""GetInverter(true)"" multiple></select>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class=""col-sm-4"">

                                                <div class=""form-group"">
                                                    <div class=""row"">
                                                        <label class=""col-sm-3 col-form-label text-right"">Inverter : </label>
                                                        <select class=""form-control  col-sm-8"" id=""inv"" name=""inv[]"" multiple></select>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class=""row"">
                                            <div cla");
            WriteLiteral(@"ss=""col-sm-5 text-left"">
                                                <div class=""table-responsive pad"">
                                                    <div class=""btn-group btn-group-toggle"" data-toggle=""buttons"">
                                                        <label class=""btn bg-olive"">
                                                            <input type=""radio"" name=""daily"" value=""WTG"" id=""daily_b1"" autocomplete=""off"" checked> Inverter Wise Report
                                                        </label>
                                                        <label class=""btn bg-olive"">
                                                            <input type=""radio"" name=""daily"" value=""Site"" id=""daily_b2"" autocomplete=""off""> Site Wise Report
                                                        </label>
                                                    </div>
                                                </div>

                                            </div");
            WriteLiteral(@">
                                            <div class=""col-sm-2 text-center"">
                                                <button type=""button"" class=""btn btn-block btn-primary"" onclick=""GetDailyGenReport();"" style="" width: 5rem;"">Search</button>
                                            </div>
                                            <div class=""col-sm-5 text-center""></div>
                                        </div>

                                        <hr>
                                        <div id=""reportsDaily"" style=""overflow-x: auto;"" class=""reportsDaily""></div>
                                        <div id=""loaderD"" class=""loader  center"" style=""display:none""></div>


                                    </div>
                                    <div class=""tab-pane fade"" id=""custom-tabs-three-monthly"" role=""tabpanel"" aria-labelledby=""custom-tabs-three-monthly-tab"">
                                        <div class=""row"">
                                      ");
            WriteLiteral(@"      <div class=""col-sm-4"">
                                                <div class=""form-group"">
                                                    <div class=""row"">
                                                        <label class=""col-sm-3 col-form-label text-left"">FY : </label>
                                                        <select class=""form-control  col-sm-9"" id=""fyM"" name=""fyM""");
            BeginWriteAttribute("value", " value=\"", 11300, "\"", 11308, 0);
            EndWriteAttribute();
            WriteLiteral(">\r\n                                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "beb91f893828870800c1eb2ea3728be5f1093fc439018", async() => {
                WriteLiteral("Select Financial Year");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_9.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_9);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                                        </select>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class=""col-sm-4"">

                                                <div class=""form-group"">
                                                    <div class=""row"">
                                                        <label class=""col-sm-3 col-form-label text-right"">Month : </label>
                                                        <select class=""form-control  col-sm-9"" id=""monthM"" name=""monthM[]""");
            BeginWriteAttribute("value", " value=\"", 12117, "\"", 12125, 0);
            EndWriteAttribute();
            WriteLiteral(" multiple>\r\n                                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "beb91f893828870800c1eb2ea3728be5f1093fc441120", async() => {
                WriteLiteral("April");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_10.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_10);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "beb91f893828870800c1eb2ea3728be5f1093fc442341", async() => {
                WriteLiteral("May");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_11.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_11);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "beb91f893828870800c1eb2ea3728be5f1093fc443560", async() => {
                WriteLiteral("June");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_12.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_12);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "beb91f893828870800c1eb2ea3728be5f1093fc444780", async() => {
                WriteLiteral("July");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_13.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_13);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "beb91f893828870800c1eb2ea3728be5f1093fc446000", async() => {
                WriteLiteral("August");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_14.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_14);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "beb91f893828870800c1eb2ea3728be5f1093fc447222", async() => {
                WriteLiteral("September");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_15.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_15);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "beb91f893828870800c1eb2ea3728be5f1093fc448447", async() => {
                WriteLiteral("October");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_16.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_16);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "beb91f893828870800c1eb2ea3728be5f1093fc449670", async() => {
                WriteLiteral("November");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_17.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_17);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "beb91f893828870800c1eb2ea3728be5f1093fc450894", async() => {
                WriteLiteral("December");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_18.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_18);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "beb91f893828870800c1eb2ea3728be5f1093fc452118", async() => {
                WriteLiteral("January");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_19.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_19);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "beb91f893828870800c1eb2ea3728be5f1093fc453341", async() => {
                WriteLiteral("February");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_20.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_20);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "beb91f893828870800c1eb2ea3728be5f1093fc454565", async() => {
                WriteLiteral("March");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_21.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_21);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                                        </select>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class=""col-sm-4"">
                                                <div class=""form-group"">
                                                    <div class=""row"">
                                                        <label class=""col-sm-3 col-form-label text-right"">Country : </label>
                                                        <select class=""form-control  col-sm-9"" id=""countryM"" name=""countryM""");
            BeginWriteAttribute("value", " value=\"", 13990, "\"", 13998, 0);
            EndWriteAttribute();
            WriteLiteral(">\r\n                                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "beb91f893828870800c1eb2ea3728be5f1093fc456646", async() => {
                WriteLiteral("India");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_8.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_8);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("selected", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                                        </select>
                                                    </div>
                                                </div>
                                            </div>

                                        </div>
                                        <div class=""row"">
                                            <div class=""col-sm-4"">
                                                <div class=""form-group"">
                                                    <div class=""row"">
                                                        <label class=""col-sm-3 col-form-label text-left"">State : </label>
                                                        <select class=""form-control  col-sm-9"" id=""stateM"" name=""stateM[]""");
            BeginWriteAttribute("value", " value=\"", 14911, "\"", 14919, 0);
            EndWriteAttribute();
            WriteLiteral(@" onchange=""GetSPVM();"" multiple></select>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class=""col-sm-4"">

                                                <div class=""form-group"">
                                                    <div class=""row"">
                                                        <label class=""col-sm-3 col-form-label text-right"">SPV : </label>
                                                        <select class=""form-control  col-sm-9"" id=""spvM"" name=""spvM[]""");
            BeginWriteAttribute("value", " value=\"", 15586, "\"", 15594, 0);
            EndWriteAttribute();
            WriteLiteral(@" onchange=""GetSiteM()"" multiple></select>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class=""col-sm-4"">

                                                <div class=""form-group"">
                                                    <div class=""row"">
                                                        <label class=""col-sm-3 col-form-label text-right"">Site : </label>
                                                        <select class=""form-control  col-sm-9"" id=""siteM"" name=""siteM[]""");
            BeginWriteAttribute("value", " value=\"", 16264, "\"", 16272, 0);
            EndWriteAttribute();
            WriteLiteral(@" onchange=""GetInverterM(true)"" multiple></select>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        <div class=""row"">
                                            <div class=""col-sm-4"">
                                                <div class=""form-group"">
                                                    <div class=""row"">
                                                        <label class=""col-sm-3 col-form-label text-left"">Inverter : </label>
                                                        <select class=""form-control  col-sm-9"" id=""invM"" name=""invM[]"" multiple></select>
                                                    </div>
                                                </div>
                                            </div>
                                            <div c");
            WriteLiteral(@"lass=""col-sm-1""></div>
                                            <div class=""col-sm-2"">
                                                <button type=""button"" class=""btn btn-block btn-primary"" onclick=""GetMonthlyGenReport();"" style="" width: 5rem;"">Search</button>
                                            </div>
                                            <div class=""col-sm-5""></div>
                                        </div>
                                        <div class=""row"">
                                            <div class=""col-sm-5"">
                                                <div class=""table-responsive pad"">
                                                    <div class=""btn-group btn-group-toggle"" data-toggle=""buttons"">
                                                        <label class=""btn bg-olive"">
                                                            <input type=""radio"" name=""monthly"" value=""WTG"" id=""monthly_b1"" autocomplete=""off"" checked> Inverter Wise Repo");
            WriteLiteral(@"rt
                                                        </label>
                                                        <label class=""btn bg-olive"">
                                                            <input type=""radio"" name=""monthly"" value=""Site"" id=""monthly_b2"" autocomplete=""off""> Site Wise Report
                                                        </label>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class=""col-sm-7""></div>
                                        </div>

                                        <hr>
                                        <div id=""reportsMonthly"" style=""overflow-x: auto;"" class=""reportsMonthly""></div>
                                        <div id=""loaderM"" class=""loader  center"" style=""display:none""></div>
                                    </div>
                          ");
            WriteLiteral(@"          <div class=""tab-pane fade"" id=""custom-tabs-three-yearly"" role=""tabpanel"" aria-labelledby=""custom-tabs-three-yearly-tab"">
                                        <div class=""row"">
                                            <div class=""col-sm-4"">
                                                <div class=""form-group"">
                                                    <div class=""row"">
                                                        <label class=""col-sm-2 col-form-label text-left"">FY : </label>
                                                        <select class=""form-control  col-sm-9"" id=""fyY"" name=""fyY""");
            BeginWriteAttribute("value", " value=\"", 19983, "\"", 19991, 0);
            EndWriteAttribute();
            WriteLiteral(">\r\n                                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "beb91f893828870800c1eb2ea3728be5f1093fc464854", async() => {
                WriteLiteral("Select Financial Year");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_9.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_9);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                                        </select>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class=""col-sm-4"">
                                                <div class=""form-group"">
                                                    <div class=""row"">
                                                        <label class=""col-sm-3 col-form-label text-right"">Country : </label>
                                                        <select class=""form-control  col-sm-9"" id=""countryY"" name=""countryY""");
            BeginWriteAttribute("value", " value=\"", 20802, "\"", 20810, 0);
            EndWriteAttribute();
            WriteLiteral(">\r\n                                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "beb91f893828870800c1eb2ea3728be5f1093fc466949", async() => {
                WriteLiteral("India");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_8.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_8);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("selected", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                                        </select>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class=""col-sm-4"">
                                                <div class=""form-group"">
                                                    <div class=""row"">
                                                        <label class=""col-sm-3 col-form-label text-right"">State : </label>
                                                        <select class=""form-control  col-sm-9"" id=""stateY"" name=""stateY[]""");
            BeginWriteAttribute("value", " value=\"", 21615, "\"", 21623, 0);
            EndWriteAttribute();
            WriteLiteral(@" onchange=""GetSPVY();"" multiple></select>
                                                    </div>
                                                </div>
                                            </div>

                                        </div>
                                        <div class=""row"">
                                            <div class=""col-sm-4"">

                                                <div class=""form-group"">
                                                    <div class=""row"">
                                                        <label class=""col-sm-2 col-form-label text-left"">SPV : </label>
                                                        <select class=""form-control  col-sm-9"" id=""spvY"" name=""spvY[]""");
            BeginWriteAttribute("value", " value=\"", 22398, "\"", 22406, 0);
            EndWriteAttribute();
            WriteLiteral(@" onchange=""GetSiteY()"" multiple></select>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class=""col-sm-4"">
                                                <div class=""form-group"">
                                                    <div class=""row"">
                                                        <label class=""col-sm-3 col-form-label text-right"">Site : </label>
                                                        <select class=""form-control  col-sm-9"" id=""siteY"" name=""siteY[]""");
            BeginWriteAttribute("value", " value=\"", 23074, "\"", 23082, 0);
            EndWriteAttribute();
            WriteLiteral(@" onchange=""GetInverterY(true)"" multiple></select>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class=""col-sm-4"">
                                                <div class=""form-group"">
                                                    <div class=""row"">
                                                        <label class=""col-sm-3 col-form-label text-right"">Inverter : </label>
                                                        <select class=""form-control  col-sm-9"" id=""invY"" name=""invY[]"" multiple></select>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        <div class=""row"">
                                            <div ");
            WriteLiteral(@"class=""col-sm-5 text-left"">
                                                <div class=""table-responsive pad"">
                                                    <div class=""btn-group btn-group-toggle"" data-toggle=""buttons"">
                                                        <label class=""btn bg-olive"">
                                                            <input type=""radio"" name=""yearly"" value=""WTG"" id=""yearly_b1"" autocomplete=""off"" checked> Inverter Wise Report
                                                        </label>
                                                        <label class=""btn bg-olive"">
                                                            <input type=""radio"" name=""yearly"" value=""Site"" id=""yearly_b2"" autocomplete=""off""> Site Wise Report
                                                        </label>
                                                    </div>
                                                </div>
                                            ");
            WriteLiteral(@"</div>
                                            <div class=""col-sm-2 text-center"">
                                                <button type=""button"" class=""btn btn-block btn-primary"" onclick=""GetYearlyGenReport();"" style=""width: 5rem;"">Search</button>
                                            </div>
                                            <div class=""col-sm-5 text-center""></div>
                                        </div>

                                        <hr>
                                        <div id=""reportsYearly"" style=""overflow-x: auto;"" class=""reportsYearly""></div>
                                        <div id=""loaderY"" class=""loader  center"" style=""display:none""></div>
                                    </div>

                                </div>
                            </div>
                            <!-- /.card -->
                        </div>
                    </div>

                    <!-- <div id=""reportsDaily"" style=""overflow-x: au");
            WriteLiteral(@"to;"" class=""reportsDaily""></div>
                                        <div id=""reportsMonthly"" style=""overflow-x: auto;"" class=""reportsMonthly""></div>
                                        <div id=""reportsYearly"" style=""overflow-x: auto; "" class=""reportsYearly""></div>
                    -->

                </div>

                <!--<div class=""card-footer"">
                    Footer
                </div>-->

            </div>


    </section>

</div>
");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "beb91f893828870800c1eb2ea3728be5f1093fc474782", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_22);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.1.0/jquery.min.js\"></script>\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "beb91f893828870800c1eb2ea3728be5f1093fc475921", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_23);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("defer", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n<!--Date Range -->\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "beb91f893828870800c1eb2ea3728be5f1093fc477292", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_24);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "beb91f893828870800c1eb2ea3728be5f1093fc478333", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_25);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "beb91f893828870800c1eb2ea3728be5f1093fc479374", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_26);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("defer", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "beb91f893828870800c1eb2ea3728be5f1093fc480723", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_27);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "beb91f893828870800c1eb2ea3728be5f1093fc481768", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_23);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("defer", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "beb91f893828870800c1eb2ea3728be5f1093fc483121", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_28);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "beb91f893828870800c1eb2ea3728be5f1093fc484162", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_29);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "beb91f893828870800c1eb2ea3728be5f1093fc485211", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_30);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "beb91f893828870800c1eb2ea3728be5f1093fc486252", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_31);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("defer", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "beb91f893828870800c1eb2ea3728be5f1093fc487605", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_32);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("defer", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "beb91f893828870800c1eb2ea3728be5f1093fc488954", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_33);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("defer", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "beb91f893828870800c1eb2ea3728be5f1093fc490303", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_34);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("defer", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "beb91f893828870800c1eb2ea3728be5f1093fc491652", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_35);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("defer", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "beb91f893828870800c1eb2ea3728be5f1093fc493001", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_36);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("defer", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n<script type=\"text/javascript\">\r\n var userRole = \"");
#nullable restore
#line 421 "C:\Data Folder All Data should be here\DGR\Git_Repo_code\Production code\Code UP\New_up_2\DGR_Main\DGRA\DGRA_V1\Views\Home\SolarGenReport.cshtml"
            Write(Html.Raw(@HttpContextAccessor.HttpContext.Session.GetString("role")));

#line default
#line hidden
#nullable disable
            WriteLiteral("\";\r\n var solarUserAccess =\"");
#nullable restore
#line 422 "C:\Data Folder All Data should be here\DGR\Git_Repo_code\Production code\Code UP\New_up_2\DGR_Main\DGRA\DGRA_V1\Views\Home\SolarGenReport.cshtml"
                  Write(Html.Raw(solarSiteList.TrimEnd(',')));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""";
    $(document).ready(function () {
        $('#daterange').daterangepicker(
            {
                maxDate: new Date(),
                locale: {
                    format: 'DD/MM/YYYY',
                }
            });
    });
    window.onload = function () {
        $('select#monthM').multipleSelect({
                    ""minimumCountSelected"": 2,
                    ""placeholder"": ""Select Month(s)"",
                    filter: true
        });
        $('select#country').multipleSelect({
            ""placeholder"": ""Select country"",
            filter: true
        });
        $('select#countryY').multipleSelect({
            ""placeholder"": ""Select country"",
            filter: true
        });
        $('select#countryM').multipleSelect({
            ""placeholder"": ""Select country"",
            filter: true
        });
        var site_ids = """);
#nullable restore
#line 450 "C:\Data Folder All Data should be here\DGR\Git_Repo_code\Production code\Code UP\New_up_2\DGR_Main\DGRA\DGRA_V1\Views\Home\SolarGenReport.cshtml"
                   Write(Html.Raw(solarSiteList.TrimEnd(',')));

#line default
#line hidden
#nullable disable
            WriteLiteral("\";\r\n        var selcountry = $(\'select#country option:selected\').val();\r\n        $.ajax({\r\n            type: \"GET\",\r\n           // url: \"/WindReport/GetStateList?countryname=\" + selcountry,\r\n            url: \'");
#nullable restore
#line 455 "C:\Data Folder All Data should be here\DGR\Git_Repo_code\Production code\Code UP\New_up_2\DGR_Main\DGRA\DGRA_V1\Views\Home\SolarGenReport.cshtml"
             Write(Url.Action("GetStateList", "SolarReport"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"' + '?countryname=' + selcountry + '&sitelist=' + site_ids,
            contentType: ""application/json; charset=utf-8"",
            //data: '{""countryname"":""' + selcountry + '""}',
            datatype: ""html"",
            success: function (result, status, xhr) {
                var options = """";
                for (var i = 0; i < result.length; i++) {
                    options += '<option value=""' + result[i].state + '"">' + result[i].state + '</option>';
                }


                $(""#state"").html(options);
                $(""#stateM"").html(options);
                $(""#stateY"").html(options);
                $('select#state').multipleSelect({
                    ""minimumCountSelected"": 2,
                    ""placeholder"": ""Select State(s)"",
                    filter:true
                });
                $('select#stateM').multipleSelect({
                    ""minimumCountSelected"": 2,
                    ""placeholder"": ""Select State(s)"",
                    filter:true");
            WriteLiteral(@"
                });
                $('select#stateY').multipleSelect({
                    ""minimumCountSelected"": 2,
                    ""placeholder"": ""Select State(s)"",
                    filter:true
                });
            }
        });
        getYear();
        GetSPV();
        GetSPVM();
        GetSPVY();
    }
    function getYear() {
    $.ajax({
        type: ""GET"",
        url: ""/WindReport/GetFinacialYear"",
        url: '");
#nullable restore
#line 495 "C:\Data Folder All Data should be here\DGR\Git_Repo_code\Production code\Code UP\New_up_2\DGR_Main\DGRA\DGRA_V1\Views\Home\SolarGenReport.cshtml"
         Write(Url.Action("GetFinacialYear", "WindReport"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
        contentType: ""application/json; charset=utf-8"",
        //data: '{""countryname"":""' + selcountry + '""}',
        datatype: ""html"",
        success: function (result, status, xhr) {
            var options = """";
            options += '<option value="""">Select Financial Year</option>';
            for (var i = 0; i < result.length; i++) {
                options += '<option value=""' + result[i].financial_year + '"">' + result[i].financial_year + '</option>';
            }
            $(""#fyM"").html(options);
            $(""#fyY"").html(options);
            $('select#fyM').multipleSelect({
                ""placeholder"": ""Select month"",
                filter: true
            });
            $('select#fyY').multipleSelect({
                ""placeholder"": ""Select year"",
                filter: true
            });

        }
    });
    }
    function GetSPVY() {
         let state_id = """";
        if($('#stateY').val())
        {
            //alert(""StateM"");

            ");
            WriteLiteral("$(\'select#stateY option:selected\').each(function () {\r\n                state_id += \"\'\" + $(this).val() + \"\',\";\r\n\r\n            });\r\n            state_id = state_id != \"\" ? state_id.slice(0, -1) : state_id;\r\n        }\r\n         var site_ids = \"");
#nullable restore
#line 531 "C:\Data Folder All Data should be here\DGR\Git_Repo_code\Production code\Code UP\New_up_2\DGR_Main\DGRA\DGRA_V1\Views\Home\SolarGenReport.cshtml"
                    Write(Html.Raw(solarSiteList.TrimEnd(',')));

#line default
#line hidden
#nullable disable
            WriteLiteral("\";\r\n        $.ajax({\r\n            type: \"GET\",\r\n            ///url: \"/WindReport/GetSPVList?state=\" + val,\r\n\r\n            url: \'");
#nullable restore
#line 536 "C:\Data Folder All Data should be here\DGR\Git_Repo_code\Production code\Code UP\New_up_2\DGR_Main\DGRA\DGRA_V1\Views\Home\SolarGenReport.cshtml"
             Write(Url.Action("GetSPVList", "SolarReport"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"' + '?state=' + state_id + '&sitelist=' + site_ids,
            contentType: ""application/json; charset=utf-8"",
            //data: '{""state"":""' + val + '""}',
            datatype: ""html"",
            success: function (result, status, xhr) {
               var options = """";
                for (var j = 0; j < result.length; j++) {
                    options += '<option value=""' + result[j].spv + '"">' + result[j].spv + '</option>';
                }
                $(""#spvY"").multipleSelect('destroy');
                $(""#spvY"").html(options);
                $('select#spvY').multipleSelect({
                    ""minimumCountSelected"": 2,
                    ""placeholder"": ""Select SPV(s)"",
                    filter:true
                });
            }
        });
        GetSiteY();
    }
    function GetSPVM() {
        let state_id = """";
        if($('#stateM').val())
        {
            $('select#stateM option:selected').each(function () {
                state_id += ""'"" + $(");
            WriteLiteral("this).val() + \"\',\";\r\n\r\n                 console.log($(this).val());\r\n\r\n            });\r\n            state_id = state_id != \"\" ? state_id.slice(0, -1) : state_id;\r\n\r\n        }\r\n         var site_ids = \"");
#nullable restore
#line 569 "C:\Data Folder All Data should be here\DGR\Git_Repo_code\Production code\Code UP\New_up_2\DGR_Main\DGRA\DGRA_V1\Views\Home\SolarGenReport.cshtml"
                    Write(Html.Raw(solarSiteList.TrimEnd(',')));

#line default
#line hidden
#nullable disable
            WriteLiteral("\";\r\n        $.ajax({\r\n            type: \"GET\",\r\n            ///url: \"/WindReport/GetSPVList?state=\" + val,\r\n\r\n            url: \'");
#nullable restore
#line 574 "C:\Data Folder All Data should be here\DGR\Git_Repo_code\Production code\Code UP\New_up_2\DGR_Main\DGRA\DGRA_V1\Views\Home\SolarGenReport.cshtml"
             Write(Url.Action("GetSPVList", "SolarReport"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"' + '?state=' + state_id + '&sitelist=' + site_ids,
            contentType: ""application/json; charset=utf-8"",
            //data: '{""state"":""' + val + '""}',
            datatype: ""html"",
            success: function (result, status, xhr) {

                var options = """";
                for (var j = 0; j < result.length; j++) {
                    options += '<option value=""' + result[j].spv + '"">' + result[j].spv + '</option>';
                }
                $(""#spvM"").multipleSelect('destroy');
                $(""#spvM"").html(options);
                $('select#spvM').multipleSelect({
                    ""minimumCountSelected"": 2,
                    ""placeholder"": ""Select SPV(s)"",
                    filter:true
                });
            }
        });
        GetSiteM();
    }
    function GetSPV() {
        let state_id = """";
        if($('#state').val())
        {

            $('select#state option:selected').each(function () {
                state_id += ""'""+$(");
            WriteLiteral("this).val() + \"\',\";\r\n             });\r\n            state_id = state_id != \"\" ? state_id.slice(0, -1) : state_id;\r\n\r\n        }\r\n         var site_ids = \"");
#nullable restore
#line 606 "C:\Data Folder All Data should be here\DGR\Git_Repo_code\Production code\Code UP\New_up_2\DGR_Main\DGRA\DGRA_V1\Views\Home\SolarGenReport.cshtml"
                    Write(Html.Raw(solarSiteList.TrimEnd(',')));

#line default
#line hidden
#nullable disable
            WriteLiteral("\";\r\n        $.ajax({\r\n            type: \"GET\",\r\n            ///url: \"/WindReport/GetSPVList?state=\" + val,\r\n            url: \'");
#nullable restore
#line 610 "C:\Data Folder All Data should be here\DGR\Git_Repo_code\Production code\Code UP\New_up_2\DGR_Main\DGRA\DGRA_V1\Views\Home\SolarGenReport.cshtml"
             Write(Url.Action("GetSPVList", "SolarReport"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"' + '?state=' + state_id + '&sitelist=' + site_ids,
            contentType: ""application/json; charset=utf-8"",
            //data: '{""state"":""' + val + '""}',
            datatype: ""html"",
            success: function (result, status, xhr) {

                var options = """";
                for (var j = 0; j < result.length; j++) {
                    options += '<option value=""' + result[j].spv + '"">' + result[j].spv + '</option>';
                }
                $(""#spv"").multipleSelect('destroy');

                $(""#spv"").html(options);
                $('select#spv').multipleSelect({
                    ""minimumCountSelected"": 2,
                    ""placeholder"": ""Select SPV(s)"",
                    filter:true
                });


            }
        });
        GetSite();
    }
    function GetSite() {
        //var state = $('select#state option:selected').val();
        //var spv = $('select#spv option:selected').val();
        let state_id = """";

        $('sele");
            WriteLiteral(@"ct#state option:selected').each(function () {
            state_id += $(this).val() + "","";

        });
        state_id = state_id != """" ? state_id.slice(0, -1) : state_id;


        let spv = """";

        $('select#spv option:selected').each(function () {
            spv += $(this).val() + "","";

        });
        spv = spv != """" ? spv.slice(0, -1) : spv;
        var site_ids = """);
#nullable restore
#line 653 "C:\Data Folder All Data should be here\DGR\Git_Repo_code\Production code\Code UP\New_up_2\DGR_Main\DGRA\DGRA_V1\Views\Home\SolarGenReport.cshtml"
                   Write(Html.Raw(solarSiteList.TrimEnd(',')));

#line default
#line hidden
#nullable disable
            WriteLiteral("\";\r\n        $.ajax({\r\n            type: \"POST\",\r\n            //url: \"/WindReport/GetSiteList?state=\" + state + \"&spv=\" + spv,\r\n\r\n            url: \'");
#nullable restore
#line 658 "C:\Data Folder All Data should be here\DGR\Git_Repo_code\Production code\Code UP\New_up_2\DGR_Main\DGRA\DGRA_V1\Views\Home\SolarGenReport.cshtml"
             Write(Url.Action("GetSiteList", "SolarReport"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"' + '?state=' + state_id + '&spv=' + spv + '&sitelist=' + site_ids,
            contentType: ""application/json; charset=utf-8"",
            // data: '{""state"":""' + val + '""}',
            datatype: ""html"",
            success: function (result, status, xhr) {
                var options = """";

                for (var k = 0; k < result.length; k++) {

                    options += '<option value=""' + result[k].site_master_solar_id + '"">' + result[k].site + '</option>';

                }
                $(""#site"").multipleSelect('destroy');
                $(""#site"").html("""").html(options);
                $('select#site').multipleSelect({
                    ""minimumCountSelected"": 2,
                    ""placeholder"": ""Select Site(s)"",
                    filter:true
                });
            }
        });
         GetInverter(false);
    }
    function GetSiteM() {
        let state_id = """";

        $('select#stateM option:selected').each(function () {
            state_i");
            WriteLiteral(@"d += $(this).val() + "","";

        });
        state_id = state_id != """" ? state_id.slice(0, -1) : state_id;


        let spv = """";

        $('select#spvM option:selected').each(function () {
            spv += $(this).val() + "","";

        });
        spv = spv != """" ? spv.slice(0, -1) : spv;
        var site_ids = """);
#nullable restore
#line 698 "C:\Data Folder All Data should be here\DGR\Git_Repo_code\Production code\Code UP\New_up_2\DGR_Main\DGRA\DGRA_V1\Views\Home\SolarGenReport.cshtml"
                   Write(Html.Raw(solarSiteList.TrimEnd(',')));

#line default
#line hidden
#nullable disable
            WriteLiteral("\";\r\n\r\n        $.ajax({\r\n            type: \"POST\",\r\n            //url: \"/WindReport/GetSiteList?state=\" + state + \"&spv=\" + spv,\r\n\r\n            url: \'");
#nullable restore
#line 704 "C:\Data Folder All Data should be here\DGR\Git_Repo_code\Production code\Code UP\New_up_2\DGR_Main\DGRA\DGRA_V1\Views\Home\SolarGenReport.cshtml"
             Write(Url.Action("GetSiteList", "SolarReport"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"' + '?state=' + state_id + '&spv=' + spv + '&sitelist=' + site_ids,
            contentType: ""application/json; charset=utf-8"",
            // data: '{""state"":""' + val + '""}',
            datatype: ""html"",
            success: function (result, status, xhr) {
                var options = """";

                for (var k = 0; k < result.length; k++) {

                    options += '<option value=""' + result[k].site_master_solar_id + '"">' + result[k].site + '</option>';

                }
                $(""#siteM"").multipleSelect('destroy');
                $(""#siteM"").html("""").html(options);
                $('select#siteM').multipleSelect({
                    ""minimumCountSelected"": 2,
                    ""placeholder"": ""Select Site(s)"",
                    filter:true
                });
            }
        });
         GetInverterM(false);
    }
     function GetSiteY() {
       let state_id = """";

        $('select#stateY option:selected').each(function () {
            sta");
            WriteLiteral(@"te_id += $(this).val() + "","";

        });
        state_id = state_id != """" ? state_id.slice(0, -1) : state_id;


        let spv = """";

        $('select#spvY option:selected').each(function () {
            spv += $(this).val() + "","";

        });
        spv = spv != """" ? spv.slice(0, -1) : spv;
         var site_ids = """);
#nullable restore
#line 744 "C:\Data Folder All Data should be here\DGR\Git_Repo_code\Production code\Code UP\New_up_2\DGR_Main\DGRA\DGRA_V1\Views\Home\SolarGenReport.cshtml"
                    Write(Html.Raw(solarSiteList.TrimEnd(',')));

#line default
#line hidden
#nullable disable
            WriteLiteral("\";\r\n\r\n        $.ajax({\r\n            type: \"POST\",\r\n            //url: \"/WindReport/GetSiteList?state=\" + state + \"&spv=\" + spv,\r\n\r\n            url: \'");
#nullable restore
#line 750 "C:\Data Folder All Data should be here\DGR\Git_Repo_code\Production code\Code UP\New_up_2\DGR_Main\DGRA\DGRA_V1\Views\Home\SolarGenReport.cshtml"
             Write(Url.Action("GetSiteList", "SolarReport"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"' + '?state=' + state_id + '&spv=' + spv + '&sitelist=' + site_ids,
            contentType: ""application/json; charset=utf-8"",
            // data: '{""state"":""' + val + '""}',
            datatype: ""html"",
            success: function (result, status, xhr) {
                var options = """";

                for (var k = 0; k < result.length; k++) {

                    options += '<option value=""' + result[k].site_master_solar_id + '"">' + result[k].site + '</option>';

                }
                $(""#siteY"").multipleSelect('destroy');
                $(""#siteY"").html("""").html(options);
                $('select#siteY').multipleSelect({
                    ""minimumCountSelected"": 2,
                    ""placeholder"": ""Select Site(s)"",
                    filter:true
                });
            }
        });
         GetInverterY(false);
    }
    function GetInverter(fliterVal) {
        let state = """";
        $('select#state option:selected').each(function () {
         ");
            WriteLiteral(@"   state += $(this).val() + "","";

        });

        let spv = """";
        $('select#spv option:selected').each(function () {
            spv += $(this).val() + "","";
           // console.log($(this).val());

        });

        let site = """";
        if (fliterVal == false) {
            site = """);
#nullable restore
#line 789 "C:\Data Folder All Data should be here\DGR\Git_Repo_code\Production code\Code UP\New_up_2\DGR_Main\DGRA\DGRA_V1\Views\Home\SolarGenReport.cshtml"
               Write(Html.Raw(solarSiteList.TrimEnd(',')));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""";
        }
        else {
            $('select#site option:selected').each(function () {
                site += $(this).val() + "","";
                //console.log($(this).val());

            });
        }


        $.ajax({
            type: ""GET"",

            url: '");
#nullable restore
#line 803 "C:\Data Folder All Data should be here\DGR\Git_Repo_code\Production code\Code UP\New_up_2\DGR_Main\DGRA\DGRA_V1\Views\Home\SolarGenReport.cshtml"
             Write(Url.Action("GetInvList", "SolarReport"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"' + '?siteid=' + site + '&state=' + state + '&spv=' + spv,
            contentType: ""application/json; charset=utf-8"",
            datatype: ""html"",
            success: function (result, status, xhr) {
               // console.log(result);
                var options = """";
                for (var k = result.length-1; k >=0 ; k--) {
                    options += '<option value=""' + result[k].icr_inv + '"">' + result[k].icr_inv + '</option>';
                }
                $(""#inv"").multipleSelect('destroy');
                $(""#inv"").html(options);
                $('select#inv').multipleSelect({
                    ""minimumCountSelected"": 2,
                    ""placeholder"": ""Select Inverter(s)"",
                    filter:true
                });
            }
        });
    }

    function GetInverterM(fliterVal) {
        let state = """";
        $('select#stateM option:selected').each(function () {
            state += $(this).val() + "","";

        });

        let spv = ");
            WriteLiteral("\"\";\r\n        $(\'select#spvM option:selected\').each(function () {\r\n            spv += $(this).val() + \",\";\r\n           // console.log($(this).val());\r\n\r\n        });\r\n\r\n        let site = \"\";\r\n        if (fliterVal == false) {\r\n            site = \"");
#nullable restore
#line 839 "C:\Data Folder All Data should be here\DGR\Git_Repo_code\Production code\Code UP\New_up_2\DGR_Main\DGRA\DGRA_V1\Views\Home\SolarGenReport.cshtml"
               Write(Html.Raw(solarSiteList.TrimEnd(',')));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""";
        }
        else {
            $('select#siteM option:selected').each(function () {
                site += $(this).val() + "","";
                //console.log($(this).val());

            });
        }

        $.ajax({
            type: ""GET"",

            url: '");
#nullable restore
#line 852 "C:\Data Folder All Data should be here\DGR\Git_Repo_code\Production code\Code UP\New_up_2\DGR_Main\DGRA\DGRA_V1\Views\Home\SolarGenReport.cshtml"
             Write(Url.Action("GetInvList", "SolarReport"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"' + '?siteid=' + site + '&state=' + state + '&spv=' + spv,
            contentType: ""application/json; charset=utf-8"",
            datatype: ""html"",
            success: function (result, status, xhr) {
               // console.log(result);
                var options = """";
                for (var k = result.length-1; k >=0 ; k--) {
                    options += '<option value=""' + result[k].icr_inv + '"">' + result[k].icr_inv + '</option>';
                }
                $(""#invM"").multipleSelect('destroy');
                $(""#invM"").html(options);
                $('select#invM').multipleSelect({
                    ""minimumCountSelected"": 2,
                    ""placeholder"": ""Select Inverter(s)"",
                    filter:true
                });
            }
        });
    }
    function GetInverterY(fliterVal) {
       let state = """";
        $('select#stateY option:selected').each(function () {
            state += $(this).val() + "","";

        });
        console.log(");
            WriteLiteral(@"state);
        let spv = """";
        $('select#spvY option:selected').each(function () {
            spv += $(this).val() + "","";
           // console.log($(this).val());

        });

        let site = """";
        if (fliterVal == false) {
            site = """);
#nullable restore
#line 887 "C:\Data Folder All Data should be here\DGR\Git_Repo_code\Production code\Code UP\New_up_2\DGR_Main\DGRA\DGRA_V1\Views\Home\SolarGenReport.cshtml"
               Write(Html.Raw(solarSiteList.TrimEnd(',')));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""";
        }
        else {
            $('select#siteY option:selected').each(function () {
                site += $(this).val() + "","";
                //console.log($(this).val());

            });
        }

        $.ajax({
            type: ""GET"",

            url: '");
#nullable restore
#line 900 "C:\Data Folder All Data should be here\DGR\Git_Repo_code\Production code\Code UP\New_up_2\DGR_Main\DGRA\DGRA_V1\Views\Home\SolarGenReport.cshtml"
             Write(Url.Action("GetInvList", "SolarReport"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"' + '?siteid=' + site + '&state=' + state + '&spv=' + spv,
            contentType: ""application/json; charset=utf-8"",
            datatype: ""html"",
            success: function (result, status, xhr) {
               // console.log(result);
                var options = """";
                for (var k = result.length-1; k >=0 ; k--) {
                    options += '<option value=""' + result[k].icr_inv + '"">' + result[k].icr_inv + '</option>';
                }
                $(""#invY"").multipleSelect('destroy');
                $(""#invY"").html(options);
                $('select#invY').multipleSelect({
                    ""minimumCountSelected"": 2,
                    ""placeholder"": ""Select Inverter(s)"",
                    filter:true
                });
            }
        });
    }
    function GetDailyGenReport() {

        var ReportType = $(""input[name='daily']:checked"").val();
        if (ReportType == ""WTG"") {
            GetDailyGenReportInverterWise();
        }
        ");
            WriteLiteral(@"else {
            GetDailyGenReportSiteWise();
        }
    }
    // Daily Gen Report WTG WIse
    function GetDailyGenReportInverterWise() {
        var daterange = $('#daterange').val();
        var arr1 = new Array();
        arr1 = daterange.split(""-"");
        var fromDate = moment(arr1[0], 'DD/MM/YYYY').format('YYYY-MM-DD');
        var toDate = moment(arr1[1], 'DD/MM/YYYY').format('YYYY-MM-DD');
        var country = $('select#country option:selected').val();
        //var state = $('select#state option:selected').val();

        let site= """";
        let spv = """";
        let inv = """";
        let state = """";

        $('select#site option:selected').each(function () {
            site += $(this).val() + "","";
            //console.log($(this).val());
        });
        site = site != """" ? site.slice(0, -1) : site;

        if(!site){
            $('select#state option:selected').each(function () {
                state +=  $(this).val() + "","";
             //   console.l");
            WriteLiteral(@"og($(this).val());
            });
            state = state != """" ? state.slice(0, -1) : state;
           // console.log(state);
            //var spv = $('select#spv option:selected').val();

            $('select#spv option:selected').each(function () {
                spv += $(this).val() + "","";
              //  console.log($(this).val());
            });
            spv = spv != """" ? spv.slice(0, -1) : spv;

        }
        if (userRole == ""User"" && site == """") {
            site = solarUserAccess;
        }

        document.getElementById(""loaderD"").style.display = 'flex';
        $('select#inv option:selected').each(function () {
            inv += $(this).val() + "","";
            //console.log($(this).val());

        });

        var reportType = ""INV"";
        var reporthead = ""Inverter Wise Report"";
        $.ajax({
            type: ""GET"",
            url: '");
#nullable restore
#line 981 "C:\Data Folder All Data should be here\DGR\Git_Repo_code\Production code\Code UP\New_up_2\DGR_Main\DGRA\DGRA_V1\Views\Home\SolarGenReport.cshtml"
             Write(Url.Action("GetSolarDailyGenerationReportWTGWise", "SolarReport"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"' + '?fromDate=' + fromDate + '&toDate=' + toDate + '&country=' + country + '&state=' + state + '&spv=' + spv + '&site=' + site + '&inv=' + inv,
            //url: ""/WindReport/GetWindDailyGenerationReportWTGWise?fromDate="" + fromDate + ""&toDate="" + toDate + ""&country="" + country + ""&state="" + state + ""&spv="" + spv + ""&site="" + site + ""&wtg="" + wtg,
            contentType: ""application/json; charset=utf-8"",

            datatype: ""JSON"",
            success: function (result, status, xhr) {
                console.log(result);

               // var tbl = '<div class=""text-center""><h5></h5></div>';
                var tbl = '<table id=""example1""  class=""table table-bordered table-striped"" style=""width:285%"">';
                tbl += '<thead class=""tbl-head""><tr>';
                tbl += '<th style=""width: 5%;"">Date</th>';
                tbl += '<th>Country</th>';
                tbl += '<th>State</th>';
                tbl += '<th>SPV</th>';
                tbl += '<th>Site</th>';
          ");
            WriteLiteral(@"      tbl += '<th>Inverter</th>';
                tbl += '<th>DC Capacity (kWp)</th>';
                tbl += '<th>AC Capacity (kW)</th>';
                tbl += '<th>GHI</th>';
                tbl += '<th>POA</th>';
                tbl += '<th>Expected_kwh</th>';
                tbl += '<th>INV kWh</th>';
                tbl += '<th>Plant kWh</th>';
                tbl += '<th>INV PR</th>';
                tbl += '<th>Plant PR</th>';
                tbl += '<th>INV PLF (%)</th>';
                tbl += '<th>Plant PLF (%)</th>';
                tbl += '<th>MA ACT (%)</th>';
                tbl += '<th>MA CON (%)</th>';
                tbl += '<th>IGA (%)</th>';
                tbl += '<th>EGA (%)</th>';
                tbl += '<th>Gen_Hrs</th>';
                tbl += '<th>USMH</th>';
                tbl += '<th>SMH</th>';
                tbl += '<th>OH</th>';
                tbl += '<th>IGBD</th>';
                tbl += '<th>EGBD</th>';
                tbl += '<th>Load Shedding</th>';");
            WriteLiteral(@"
                tbl += '<th>Total BD</th>';

                tbl += '<th>USMH Loss</th>';
                tbl += '<th>SMH Loss</th>';
                tbl += '<th>OH Loss</th>';
                tbl += '<th>IGBD Loss</th>';
                tbl += '<th>EGBD Loss</th>';
                tbl += '<th>Load_She Loss</th>';
                tbl += '<th>LULL Loss</th>';
                tbl += '<th>Total Loss</th>';
                tbl += '</tr></thead>';

                if (result.length > 0) {
                    console.log(""Datatable"");
                    for (var i = 0; i < result.length; i++) {
                        var formattedDate = moment(result[i].date, 'YYYY/MM/DD').format('DD-MM-YYYY');
                        tbl += '<tr>';
                        tbl += '<td class=""text-left"">' + formattedDate + '</td>';
                        tbl += '<td class=""text-left"">' + result[i].country + '</td>';
                        tbl += '<td class=""text-left"">' + result[i].state + '</td>';
         ");
            WriteLiteral(@"               tbl += '<td class=""text-left"">' + result[i].spv + '</td>';
                        tbl += '<td class=""text-left"">' + result[i].site + '</td>';
                        tbl += '<td class=""text-left"">' + result[i].inverter + '</td>';
                        tbl += '<td class=""text-left"">' + result[i].dc_capacity.toFixed(2) + '</td>';
                        tbl += '<td class=""text-left"">' + result[i].ac_capacity.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].ghi.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].poa.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].expected_kwh.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].inv_kwh.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].plant_kwh.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].i");
            WriteLiteral(@"nv_pr.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].plant_pr.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].inv_plf.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].plant_plf.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].ma_actual.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].ma_contractual.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].iga.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].ega.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].prod_hrs.toFixed(2) + '</td>';


                        tbl += '<td class=""text-right"">' + result[i].usmh_bs.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].smh_bd.toFixed(2)");
            WriteLiteral(@" + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].oh_bd.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].igbdh_bd.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].egbdh_bd.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].load_shedding_bd.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].total_bd_hrs.toFixed(2) + '</td>';

                        tbl += '<td class=""text-right"">' + result[i].usmh.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].smh.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].oh.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].igbdh.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].egbdh.toFixed(2) + '</td>';
           ");
            WriteLiteral(@"             tbl += '<td class=""text-right"">' + result[i].load_shedding.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].lull_hrs.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].total_losses.toFixed(2) + '</td>';
                        tbl += '</tr>';
                    }
                }
                else {
                    console.log(""Data not available"");

                }
                tbl += '</table>';
                $(""#reportsDaily"").html(tbl);

                $('#example1').DataTable({
                    dom: 'Bfrtip',
                    title: 'ImportApproval',
                    responsive: false,
                    lengthChange: false,
                    autoWidth: true,
                    paging: true,
                    searching: true,
                    ordering: true,
                    info: true,
                    autoWidth: true,
                    pageLen");
            WriteLiteral(@"gth: 50,
                    buttons: [
                        {
                            extend: 'excel',
                            title: 'Solar Daily Generation Reports Inverter Wise',
                            exportOptions: {
                                columns: ':visible'
                            }
                        },
                        {
                            extend: 'csv',
                            title: 'Solar Daily Generation Reports Inverter Wise',
                            exportOptions: {
                                columns: ':visible'
                            }
                        },
                        'colvis'
                    ]
                    /* ""buttons"": [
                         'copy', 'excel', 'csv', 'colvis'
                     ]*/
                });
                $("".dt-buttons"").addClass('btn-group flex-wrap');
                $("".dt-buttons > button"").addClass('btn btn-secondary');
             ");
            WriteLiteral(@"   $("".dataTables_filter> label >input"").addClass('form-control form-control-sm');
                $(""dataTables_filter"").css(""margin-top"", ""-35px"");
                //$('#example1').removeClass('dataTable');
                $('#example1').wrap(""<div class='scrolledTable'></div>"");
                document.getElementById(""loaderD"").style.display = 'none';
            }
        });

    }
   // -----------------------------------------------

    // Daily Gen Report Site WIse
    function GetDailyGenReportSiteWise() {
        var daterange = $('#daterange').val();
        var arr1 = new Array();
        arr1 = daterange.split(""-"");
        var fromDate = moment(arr1[0], 'DD/MM/YYYY').format('YYYY-MM-DD');
        var toDate = moment(arr1[1], 'DD/MM/YYYY').format('YYYY-MM-DD');
        var country = $('select#country option:selected').val();
        //var state = $('select#state option:selected').val();
        let site = """";
        let spv = """";
        let inv = """";
        let state =");
            WriteLiteral(@" """";

        $('select#site option:selected').each(function () {
            site += $(this).val() + "","";
            //console.log($(this).val());
        });
        site = site != """" ? site.slice(0, -1) : site;

        if (!site) {
            $('select#state option:selected').each(function () {
                state += $(this).val() + "","";

            });
            state = state != """" ? state.slice(0, -1) : state;

            $('select#spv option:selected').each(function () {
                spv += $(this).val() + "","";
                //  console.log($(this).val());
            });
            spv = spv != """" ? spv.slice(0, -1) : spv;

        }
        if (userRole == ""User"" && site == """") {
            site = solarUserAccess;
        }

        document.getElementById(""loaderD"").style.display = 'flex';
        $('select#inv option:selected').each(function () {
            inv += $(this).val() + "","";

        });
        var reportType = ""Site"";
        var reporthea");
            WriteLiteral("d = \"Site Wise Report\";\r\n        $.ajax({\r\n            type: \"GET\",\r\n            url: \'");
#nullable restore
#line 1180 "C:\Data Folder All Data should be here\DGR\Git_Repo_code\Production code\Code UP\New_up_2\DGR_Main\DGRA\DGRA_V1\Views\Home\SolarGenReport.cshtml"
             Write(Url.Action("GetSolarDailyGenerationReportSiteWise", "SolarReport"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"' + '?fromDate=' + fromDate + '&toDate=' + toDate + '&country=' + country + '&state=' + state + '&spv=' + spv + '&site=' + site + '&inv=' + inv + '&reportType=' + reportType,
            //url: ""/WindReport/GetWindDailyGenerationReportSiteWise?fromDate="" + fromDate + ""&toDate="" + toDate + ""&country="" + country + ""&state="" + state + ""&spv="" + spv + ""&site="" + site + ""&wtg="" + wtg + ""&reportType="" + reportType,
            contentType: ""application/json; charset=utf-8"",

            datatype: ""JSON"",
            success: function (result, status, xhr) {

               // var tbl = '<div class=""text-center""><h5></h5></div>';
               var  tbl = '<table id=""example1""  class=""table table-bordered table-striped"" style=""width:285%"">';
                tbl += '<thead class=""tbl-head""><tr>';
               // tbl += '<th >Year</th>';
               // tbl += '<th >Month</th>';
                tbl += '<th style=""width: 5%;"" >Date</th>';
                tbl += '<th>Site</th>';
                tbl += ");
            WriteLiteral(@"'<th>Country</th>';
                tbl += '<th>State</th>';
                tbl += '<th>SPV</th>';

                tbl += '<th>DC Capacity (MW)</th>';
                tbl += '<th>AC Capacity (MW)</th>';
                tbl += '<th>GHI</th>';
                tbl += '<th>POA</th>';
                tbl += '<th>Expected_kwh</th>';
                tbl += '<th>INV kWh</th>';
                tbl += '<th>Plant kWh</th>';
                tbl += '<th>INV PR</th>';
                tbl += '<th>Plant PR</th>';
                tbl += '<th>INV PLF (%)</th>';
                tbl += '<th>Plant PLF (%)</th>';
                tbl += '<th>MA ACT (%)</th>';
                tbl += '<th>IGA (%)</th>';
                tbl += '<th>EGA (%)</th>';
                tbl += '<th>Gen_Hrs</th>';
                tbl += '<th>Lull_Hrs</th>';
                tbl += '<th>USMH</th>';
                tbl += '<th>SMH</th>';
                tbl += '<th>OH</th>';
                tbl += '<th>IGBD</th>';
                tbl += ");
            WriteLiteral(@"'<th>EGBD</th>';
                tbl += '<th>Load_Shedding</th>';
                tbl += '<th>Total BD</th>';

                tbl += '<th>USMH Loss</th>';
                tbl += '<th>SMH Loss</th>';
                tbl += '<th>OH Loss</th>';
                tbl += '<th>IGBD Loss</th>';
                tbl += '<th>EGBD Loss</th>';
                tbl += '<th>Load_She Loss</th>';
                tbl += '<th>LULL Loss</th>';
                tbl += '<th>Total Loss</th>';
                tbl += '</tr></thead>';

                if (result.length > 0) {

                    for (var i = 0; i < result.length; i++) {
                        var formattedDate = moment(result[i].date, 'YYYY/MM/DD').format('DD-MM-YYYY');
                        tbl += '<tr>';
                        //tbl += '<td class=""text-left"">' + result[i].year + '</td>';
                       // tbl += '<td class=""text-left"">' + result[i].month + '</td>';
                        tbl += '<td class=""text-left"">' + formattedDat");
            WriteLiteral(@"e + '</td>';
                        tbl += '<td class=""text-left"">' + result[i].site + '</td>';

                        tbl += '<td class=""text-left"">' + result[i].country + '</td>';
                        tbl += '<td class=""text-left"">' + result[i].state + '</td>';
                        tbl += '<td class=""text-left"">' + result[i].spv + '</td>';

                        tbl += '<td class=""text-right"">' + result[i].dc_capacity.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].ac_capacity.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].ghi.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].poa.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].expected_kwh.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].inv_kwh.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' +");
            WriteLiteral(@" result[i].plant_kwh.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].inv_pr.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].plant_pr.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].inv_plf.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].plant_plf.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].ma_actual.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].iga.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].ega.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].prod_hrs.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].lull_hrs_bd.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].usmh_bs.to");
            WriteLiteral(@"Fixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].smh_bd.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].oh_bd.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].igbdh_bd.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].egbdh_bd.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].load_shedding_bd.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].total_bd_hrs.toFixed(2) + '</td>';

                        tbl += '<td class=""text-right"">' + result[i].usmh.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].smh.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].oh.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].igbdh.toFixed(2) + '</td>';
  ");
            WriteLiteral(@"                      tbl += '<td class=""text-right"">' + result[i].egbdh.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].load_shedding.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].lull_hrs.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].total_losses.toFixed(2) + '</td>';
                        //tbl += '<td class=""text-right"">' + moment.utc(result[i].unschedule_hrs['totalSeconds'] * 1000).format('HH:mm:ss') + '</td>';
                        //tbl += '<td class=""text-right"">' + moment.utc(result[i].schedule_hrs['totalSeconds'] * 1000).format('HH:mm:ss') + '</td>';
                        //tbl += '<td class=""text-right"">' + moment.utc(result[i].others['totalSeconds'] * 1000).format('HH:mm:ss') + '</td>';
                        //tbl += '<td class=""text-right"">' + moment.utc(result[i].igbdh['totalSeconds'] * 1000).format('HH:mm:ss') + '</td>';
                        //t");
            WriteLiteral(@"bl += '<td class=""text-right"">' + moment.utc(result[i].egbdh['totalSeconds'] * 1000).format('HH:mm:ss') + '</td>';
                        //tbl += '<td class=""text-right"">' + moment.utc(result[i].load_shedding['totalSeconds'] * 1000).format('HH:mm:ss') + '</td>';


                        tbl += '</tr>';
                    }
                }
                else {
                    console.log(""Data not available"");

                }
                tbl += '</table>';
                $(""#reportsDaily"").html(tbl);
                $('#example1').DataTable({
                    dom: 'Bfrtip',
                    title: 'ImportApproval',
                    responsive: false,
                    lengthChange: false,
                    autoWidth: true,
                    paging: true,
                    searching: true,
                    ordering: true,
                    info: true,
                    autoWidth: true,
                    pageLength: 50,
                    bu");
            WriteLiteral(@"ttons: [
                        {
                            extend: 'excel',
                            title: 'Solar Daily Generation Reports Site Wise',
                            exportOptions: {
                                columns: ':visible'
                            }
                        },
                        {
                            extend: 'csv',
                            title: 'Solar Daily Generation Reports Site Wise',
                            exportOptions: {
                                columns: ':visible'
                            }
                        },
                        'colvis'
                    ]
                    /* ""buttons"": [
                         'copy', 'excel', 'csv', 'colvis'
                     ]*/
                });
                $("".dt-buttons"").addClass('btn-group flex-wrap');
                $("".dt-buttons > button"").addClass('btn btn-secondary');
                $("".dataTables_filter> label >input"")");
            WriteLiteral(@".addClass('form-control form-control-sm');
                $(""dataTables_filter"").css(""margin-top"", ""-35px"");
                //$('#example1').removeClass('dataTable');
                $('#example1').wrap(""<div class='scrolledTable'></div>"");
                document.getElementById(""loaderD"").style.display = 'none';
            }
        });
    }


   // -----------------------------------Monthly ---------------------//
    function GetMonthlyGenReport() {

       var ReportType = $(""input[name='monthly']:checked"").val();
        if (ReportType == ""WTG"") {
           //alert(""WTG"");
            GetMonthlyGenReportInverterWise();
        }
        else {
            //alert(""SIte"");
            GetMonthlyGenReportSiteWise();
        }
    }

    // Mothly Report WTG Wise
    function GetMonthlyGenReportInverterWise() {

        let site= """";
        let spv = """";
        let inv = """";
        let state = """";

        $('select#siteM option:selected').each(function () {
       ");
            WriteLiteral(@"     site += $(this).val() + "","";
        });
        site = site != """" ? site.slice(0, -1) : site;

        if(!site){
            $('select#stateM option:selected').each(function () {
                state +=  $(this).val() + "","";

            });
            state = state != """" ? state.slice(0, -1) : state;

            $('select#spvM option:selected').each(function () {
                spv += $(this).val() + "","";

            });
            spv = spv != """" ? spv.slice(0, -1) : spv;

        }
        if (userRole == ""User"" && site == """") {
            site = solarUserAccess;
        }

        $('select#invM option:selected').each(function () {
            inv +=  $(this).val() + "","";

        });
        inv = inv != """" ? inv.slice(0, -1) : inv;

        var country = $('select#countryM option:selected').val();
        var year = $('select#fyM option:selected').val();
        //var month = $('select#monthM option:selected').val();
        if (year == """") {
            ale");
            WriteLiteral(@"rt(""Please select financial year"");
            return false;
        }


        let month = """";
        $('select#monthM option:selected').each(function () {
            //monthArray.push($(this).val());
            //console.log($(this).val());
            month+= $(this).val()+"","";
        });
        month = month != """" ? month.slice(0, -1) : month;

        var arr1 = new Array();
        arr1 = year.split(""-"");
        var fromDate = """";
        /*monthArray.forEach((mon)=>{
            if(year && month){
                if (month >= '04' || month >= 04) {
                    fromDate += arr1[0] + '-' + mon + '-01,';
                }
                else
                {
                    fromDate += '20' + arr1[1] + '-' + mon + '-01,';
                }
            }
        }) */
        document.getElementById(""loaderM"").style.display = 'flex';
        var reportType = ""INV"";
        var reporthead = ""Inverter Wise Report"";
        $.ajax({
            type: ""GET"",");
            WriteLiteral("\r\n            url: \'");
#nullable restore
#line 1427 "C:\Data Folder All Data should be here\DGR\Git_Repo_code\Production code\Code UP\New_up_2\DGR_Main\DGRA\DGRA_V1\Views\Home\SolarGenReport.cshtml"
             Write(Url.Action("GetSolarMonthlyGenerationReportInvWise", "SolarReport"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"' + '?fy=' + arr1[0] + '&month=' + month + '&country=' + country + '&state=' + state + '&spv=' + spv + '&site=' + site + '&inverter=' + inv + '&reportType=' + reportType,
           //url: ""/WindReport/GetWindMonthlyGenerationReportWTGWise?fromDate="" + fromDate + ""&month="" + month + ""&country="" + country + ""&state="" + state + ""&spv="" + spv + ""&site="" + site + ""&wtg="" + wtg + ""&reportType="" + reportType,
            contentType: ""application/json; charset=utf-8"",

            datatype: ""JSON"",
            success: function (result, status, xhr) {
                console.log(result);

                //var tbl = '<div class=""text-center""><h5></h5></div>';
               var  tbl = '<table id=""example2""  class=""table table-bordered table-striped"" style=""width:285%"">';
                tbl += '<thead class=""tbl-head""><tr>';
                tbl += '<th style=""width:4%"">FY</th>';
                tbl += '<th>Month</th>';
                tbl += '<th>Country</th>';
                tbl += '<th>State</th>';");
            WriteLiteral(@"
                tbl += '<th>SPV</th>';
                tbl += '<th>Site</th>';
                tbl += '<th>Inverter</th>';
                tbl += '<th>DC Capacity (kWp)</th>';
                tbl += '<th>AC Capacity (kW)</th>';
                tbl += '<th>GHI</th>';
                tbl += '<th>POA</th>';
                tbl += '<th>Expected_kwh</th>';
                tbl += '<th>INV kWh</th>';
                tbl += '<th>Plant kWh</th>';
                tbl += '<th>INV PR</th>';
                tbl += '<th>Plant PR</th>';
                tbl += '<th>INV PLF (%)</th>';
                tbl += '<th>Plant PLF (%)</th>';
                tbl += '<th>MA ACT (%)</th>';
                tbl += '<th>MA CON (%)</th>';
                tbl += '<th>IGA (%)</th>';
                tbl += '<th>EGA (%)</th>';
                tbl += '<th>Gen_Hrs</th>';
                tbl += '<th>Lull_Hrs</th>';

                tbl += '<th>USMH</th>';
                tbl += '<th>SMH</th>';
                tbl += '<th>OH");
            WriteLiteral(@"</th>';
                tbl += '<th>IGBD</th>';
                tbl += '<th>EGBD</th>';
                tbl += '<th>Load Shedding</th>';
                tbl += '<th>Total BD</th>';


                tbl += '<th>USMH Loss</th>';
                tbl += '<th>SMH Loss</th>';
                tbl += '<th>OH Loss</th>';
                tbl += '<th>IGBD Loss</th>';
                tbl += '<th>EGBD Loss</th>';
                tbl += '<th>Load_She Loss</th>';
                tbl += '<th>LULL Loss</th>';
                tbl += '<th>Total Loss</th>';
                tbl += '</tr></thead>';
                console.log(result.length);
                if (result.length > 0) {
                    console.log(""Datatable"");
                    for (var i = 0; i < result.length; i++) {
                        //var formattedDate = moment(result[i].date, 'YYYY/MM/DD').format('DD-MM-YYYY');

                        tbl += '<tr>';
                        tbl += '<td class=""text-left"">' + year + '</td>';
   ");
            WriteLiteral(@"                     tbl += '<td class=""text-left"">' + result[i].month + '</td>';
                        tbl += '<td class=""text-left"">' + result[i].country + '</td>';
                        tbl += '<td class=""text-left"">' + result[i].state + '</td>';
                        tbl += '<td class=""text-left"">' + result[i].spv + '</td>';
                        tbl += '<td class=""text-left"">' + result[i].site + '</td>';
                        tbl += '<td class=""text-left"">' + result[i].inverter + '</td>';
                        tbl += '<td class=""text-left"">' + result[i].dc_capacity.toFixed(2) + '</td>';
                        tbl += '<td class=""text-left"">' + result[i].ac_capacity.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].ghi.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].poa.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].expected_kwh.toFixed(2) + '</td>';
      ");
            WriteLiteral(@"                  tbl += '<td class=""text-right"">' + result[i].inv_kwh.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].plant_kwh.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].inv_pr.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].plant_pr.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].inv_plf.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].plant_plf.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].ma_actual.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].ma_contractual.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].iga.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].ega.toFixed(2) + '</td>';
                        t");
            WriteLiteral(@"bl += '<td class=""text-right"">' + result[i].gen_hrs.toFixed(2) + '</td>';

                        tbl += '<td class=""text-right"">' + result[i].lull_hrs_bd.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].usmh_bs.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].smh_bd.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].oh_bd.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].igbdh_bd.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].egbdh_bd.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].load_shedding_bd.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].total_bd_hrs.toFixed(2) + '</td>';

                        tbl += '<td class=""text-right"">' + result[i].usmh.toFixed(2) + '</td>';
                        tbl += ");
            WriteLiteral(@"'<td class=""text-right"">' + result[i].smh.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].oh.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].igbdh.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].egbdh.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].load_shedding.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].lull_hrs.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].total_losses.toFixed(2) + '</td>';
                        //tbl += '<td class=""text-right"">' + moment.utc(result[i].unschedule_hrs['totalSeconds'] * 1000).format('HH:mm:ss') + '</td>';
                        //tbl += '<td class=""text-right"">' + moment.utc(result[i].schedule_hrs['totalSeconds'] * 1000).format('HH:mm:ss') + '</td>';
                        //tbl += '<td class=""text-righ");
            WriteLiteral(@"t"">' + moment.utc(result[i].others['totalSeconds'] * 1000).format('HH:mm:ss') + '</td>';
                        //tbl += '<td class=""text-right"">' + moment.utc(result[i].igbdh['totalSeconds'] * 1000).format('HH:mm:ss') + '</td>';
                        //tbl += '<td class=""text-right"">' + moment.utc(result[i].egbdh['totalSeconds'] * 1000).format('HH:mm:ss') + '</td>';
                        //tbl += '<td class=""text-right"">' + moment.utc(result[i].load_shedding['totalSeconds'] * 1000).format('HH:mm:ss') + '</td>';


                        //tbl += '<td class=""text-right"">' + result[i].usmh.toFixed(2) + '</td>';
                        //tbl += '<td class=""text-right"">' + result[i].smh.toFixed(2) + '</td>';
                        //tbl += '<td class=""text-right"">' + result[i].oh.toFixed() + '</td>';
                        //tbl += '<td class=""text-right"">' + result[i].igbdh.toFixed() + '</td>';
                        //tbl += '<td class=""text-right"">' + result[i].egbdh.toFixed() + '</td>';
  ");
            WriteLiteral(@"                      //tbl += '<td class=""text-right"">' + result[i].load_shedding.toFixed() + '</td>';
                        //tbl += '<td class=""text-right"">' + result[i].total_losses.toFixed() + '</td>';


                        tbl += '</tr>';
                    }
                }
                else {
                    console.log(""Data not available"");
                    // tbl += '<tr><th colspan=""12"" style=""text-align:center"">Data Not Available <th></tr>';
                }
               tbl += '</table>';
                $(""#reportsMonthly"").html(tbl);
                $('#example2').DataTable({
                    dom: 'Bfrtip',
                    title: 'ImportApproval',
                    responsive: false,
                    lengthChange: false,
                    autoWidth: true,
                    paging: true,
                    searching: true,
                    ordering: true,
                    info: true,
                    autoWidth: true,
      ");
            WriteLiteral(@"              pageLength: 50,
                    buttons: [
                        {
                            extend: 'excel',
                            title: 'Solar Monthly Generation Reports Inverter Wise',
                            exportOptions: {
                                columns: ':visible'
                            }
                        },
                        {
                            extend: 'csv',
                            title: 'Solar Monthly Generation Reports Inverter Wise',
                            exportOptions: {
                                columns: ':visible'
                            }
                        },
                        'colvis'
                    ]
                    /* ""buttons"": [
                         'copy', 'excel', 'csv', 'colvis'
                     ]*/
                });
                $("".dt-buttons"").addClass('btn-group flex-wrap');
                $("".dt-buttons > button"").addClass('btn btn-se");
            WriteLiteral(@"condary');
                $("".dataTables_filter> label >input"").addClass('form-control form-control-sm');
                $(""dataTables_filter"").css(""margin-top"", ""-35px"");
                //$('#example2').removeClass('dataTable');
                $('#example2').wrap(""<div class='scrolledTable'></div>"");
                document.getElementById(""loaderM"").style.display = 'none';
            }
        });

    }
    //------------------------------------
    // Mothly Report SIte Wise
    function GetMonthlyGenReportSiteWise() {
        let site= """";
        let spv = """";
        let inv = """";
        let state = """";

        $('select#siteM option:selected').each(function () {
            site += $(this).val() + "","";
        });
        site = site != """" ? site.slice(0, -1) : site;
        console.log('Site: '+site);

        if(!site){
            $('select#stateM option:selected').each(function () {
                state +=  $(this).val() + "","";
             //   console.log($(thi");
            WriteLiteral(@"s).val());
            });
            state = state != """" ? state.slice(0, -1) : state;

            $('select#spvM option:selected').each(function () {
                spv += $(this).val() + "","";
              //  console.log($(this).val());
            });
            spv = spv != """" ? spv.slice(0, -1) : spv;

        }
        if (userRole == ""User"" && site == """") {
            site = solarUserAccess;
        }


        $('select#invM option:selected').each(function () {
            inv += $(this).val() + "","";
            //console.log($(this).val());
        });
        inv = inv != """" ? inv.slice(0, -1) : inv;





        var country = $('select#countryM option:selected').val();
        var fyyear = $('select#fyM option:selected').val();
        if (fyyear == """") {
            alert(""Please select financial year"");
            return false;
        }
        let month = """";
        $('select#monthM option:selected').each(function () {

            month+= $(this).val");
            WriteLiteral(@"()+"","";
        });
        month = month != """" ? month.slice(0, -1) : month;
        document.getElementById(""loaderM"").style.display = 'flex';
        var arr1 = new Array();
        arr1 = fyyear.split(""-"");
        var fromDate = """";
        var reportType = ""Site"";
        var reporthead = ""Site Wise Report"";
        $.ajax({
            type: ""GET"",
            url: '");
#nullable restore
#line 1662 "C:\Data Folder All Data should be here\DGR\Git_Repo_code\Production code\Code UP\New_up_2\DGR_Main\DGRA\DGRA_V1\Views\Home\SolarGenReport.cshtml"
             Write(Url.Action("GetSolarMonthlyGenerationReportSiteWise", "SolarReport"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"' + '?fy=' + arr1[0] + '&month=' + month + '&country=' + country + '&state=' + state + '&spv=' + spv + '&site=' + site + '&inverter=' + inv + '&reportType=' + reportType,
           // url: ""/WindReport/GetWindMonthlyGenerationReportSiteWise?fromDate="" + fromDate + ""&month="" + month + ""&country="" + country + ""&state="" + state + ""&spv="" + spv + ""&site="" + site + ""&wtg="" + wtg + ""&reportType="" + reportType,
            contentType: ""application/json; charset=utf-8"",

            datatype: ""JSON"",
            success: function (result, status, xhr) {
                console.log(result);

                //var tbl = '<div class=""text-center""><h5>' + reporthead + '</h5></div>';

               // var tbl = '<div class=""text-center""><h5></h5></div>';
              var   tbl = '<table id=""example2""  class=""table table-bordered table-striped"" style=""width:285%"">';
                tbl += '<thead class=""tbl-head""><tr>';
                tbl += '<th style=""width:4%"">FY</th>';
                tbl += '<th>Mon");
            WriteLiteral(@"th</th>';
                tbl += '<th>Country</th>';
                tbl += '<th>State</th>';
                tbl += '<th>SPV</th>';
                tbl += '<th>Site</th>';
                tbl += '<th>DC Capacity (MW)</th>';
                tbl += '<th>AC Capacity (MW)</th>';
                tbl += '<th>GHI</th>';
                tbl += '<th>POA</th>';
                tbl += '<th>Expected_kwh</th>';
                tbl += '<th>INV kWh</th>';
                tbl += '<th>Plant kWh</th>';
                tbl += '<th>INV PR</th>';
                tbl += '<th>Plant PR</th>';
                tbl += '<th>INV PLF (%)</th>';
                tbl += '<th>Plant PLF (%)</th>';
                tbl += '<th>MA ACT (%)</th>';
                tbl += '<th>MA CON (%)</th>';
                tbl += '<th>IGA (%)</th>';
                tbl += '<th>EGA (%)</th>';
                tbl += '<th>Gen_Hrs</th>';
                tbl += '<th>Lull_Hrs</th>';
                tbl += '<th>USMH</th>';
                tbl += ");
            WriteLiteral(@"'<th>SMH</th>';
                tbl += '<th>OH</th>';
                tbl += '<th>IGBD</th>';
                tbl += '<th>EGBD</th>';
                tbl += '<th>Load Shedding</th>';
                //tbl += '<th>Tracker Loss (kw)</th>';
                tbl += '<th>Total BD</th>';


                tbl += '<th>USMH Loss</th>';
                tbl += '<th>SMH Loss</th>';
                tbl += '<th>OH Loss</th>';
                tbl += '<th>IGBD Loss</th>';
                tbl += '<th>EGBD Loss</th>';
                tbl += '<th>Load_She Loss</th>';
                tbl += '<th>LULL Loss</th>';
                tbl += '<th>Total Loss</th>';
                tbl += '</tr></thead>';
                console.log(result.length);
                if (result.length > 0) {
                    console.log(""Datatable"");
                    for (var i = 0; i < result.length; i++) {
                        //var formattedDate = moment(result[i].date, 'YYYY/MM/DD').format('DD-MM-YYYY');
                 ");
            WriteLiteral(@"       tbl += '<tr>';
                        tbl += '<td class=""text-left"">' + fyyear + '</td>';
                        tbl += '<td class=""text-left"">' + result[i].month + '</td>';
                        tbl += '<td class=""text-left"">' + result[i].country + '</td>';
                        tbl += '<td class=""text-left"">' + result[i].state + '</td>';
                        tbl += '<td class=""text-left"">' + result[i].spv + '</td>';
                        tbl += '<td class=""text-left"">' + result[i].site + '</td>';
                        tbl += '<td class=""text-left"">' + result[i].dc_capacity.toFixed(2) + '</td>';
                        tbl += '<td class=""text-left"">' + result[i].ac_capacity.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].ghi.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].poa.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].expected_kwh.toFixed(2) + '<");
            WriteLiteral(@"/td>';
                        tbl += '<td class=""text-right"">' + result[i].inv_kwh.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].plant_kwh.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].inv_pr.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].plant_pr.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].inv_plf.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].plant_plf.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].ma_actual.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].ma_contractual.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].iga.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].ega.toFixed(2) + '</td>';
           ");
            WriteLiteral(@"             tbl += '<td class=""text-right"">' + result[i].prod_hrs.toFixed(2) + '</td>';

                        tbl += '<td class=""text-right"">' + result[i].lull_hrs_bd.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].usmh_bs.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].smh_bd.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].oh_bd.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].igbdh_bd.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].egbdh_bd.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].load_shedding_bd.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].total_bd_hrs.toFixed(2) + '</td>';


                        //tbl += '<td class=""text-right"">' + moment.utc(result[i].unschedule_hrs['totalSeconds'");
            WriteLiteral(@"] * 1000).format('HH:mm:ss') + '</td>';
                        //tbl += '<td class=""text-right"">' + moment.utc(result[i].schedule_hrs['totalSeconds'] * 1000).format('HH:mm:ss') + '</td>';
                        //tbl += '<td class=""text-right"">' + moment.utc(result[i].others['totalSeconds'] * 1000).format('HH:mm:ss') + '</td>';
                        //tbl += '<td class=""text-right"">' + moment.utc(result[i].igbdh['totalSeconds'] * 1000).format('HH:mm:ss') + '</td>';
                        //tbl += '<td class=""text-right"">' + moment.utc(result[i].egbdh['totalSeconds'] * 1000).format('HH:mm:ss') + '</td>';
                        //tbl += '<td class=""text-right"">' + moment.utc(result[i].load_shedding['totalSeconds'] * 1000).format('HH:mm:ss') + '</td>';


                        tbl += '<td class=""text-right"">' + result[i].usmh.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].smh.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">");
            WriteLiteral(@"' + result[i].oh.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].igbdh.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].egbdh.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].load_shedding.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].lull_hrs.toFixed(2) + '</td>';
                        //tbl += '<td class=""text-right"">' + result[i].tracker_losses+ '</td>';
                        tbl += '<td class=""text-right"">' + result[i].total_losses.toFixed(2) + '</td>';

                        tbl += '</tr>';
                    }
                }
                else {
                    console.log(""Data not available"");

                }
                tbl += '</table>';
                $(""#reportsMonthly"").html(tbl);
                $('#example2').DataTable({
                    dom: 'Bfrtip',
                    title: '");
            WriteLiteral(@"ImportApproval',
                    responsive: false,
                    lengthChange: false,
                    autoWidth: true,
                    paging: true,
                    searching: true,
                    ordering: true,
                    info: true,
                    autoWidth: true,
                    pageLength: 50,
                    buttons: [
                        {
                            extend: 'excel',
                            title: 'Solar Monthly Generation Reports Site Wise',
                            exportOptions: {
                                columns: ':visible'
                            }
                        },
                        {
                            extend: 'csv',
                            title: 'Solar Monthly Generation Reports Site Wise',
                            exportOptions: {
                                columns: ':visible'
                            }
                        },
            ");
            WriteLiteral(@"            'colvis'
                    ]
                    /* ""buttons"": [
                         'copy', 'excel', 'csv', 'colvis'
                     ]*/
                });
                $("".dt-buttons"").addClass('btn-group flex-wrap');
                $("".dt-buttons > button"").addClass('btn btn-secondary');
                $("".dataTables_filter> label >input"").addClass('form-control form-control-sm');
                $(""dataTables_filter"").css(""margin-top"", ""-35px"");
                //$('#example2').removeClass('dataTable');
                $('#example2').wrap(""<div class='scrolledTable'></div>"");
                document.getElementById(""loaderM"").style.display = 'none';
            }
        });

    }

    // -----------------------------------Yearly ---------------------//
    function GetYearlyGenReport() {
        document.getElementById(""loaderY"").style.display = 'flex';
        var ReportType = $(""input[name='yearly']:checked"").val();
        if (ReportType == ""WTG"") {");
            WriteLiteral(@"
            //alert(""WTG"");
            GetYearlyGenReportInverterWise();
        }
        else {
            //alert(""SIte"");
            GetYearlyGenReportSiteWise();
        }
        document.getElementById(""loaderY"").style.display = 'none';
    }

    // Yearly WTG Wise

    function GetYearlyGenReportInverterWise() {
        var country = $('select#countryY option:selected').val();
        let site = """";
        let spv = """";
        let inverter = """";
        let state = """";

        $('select#siteY option:selected').each(function () {
            site += $(this).val() + "","";
        });
        site = site != """" ? site.slice(0, -1) : site;

        if (!site) {
            $('select#stateY option:selected').each(function () {
                state += $(this).val() + "","";
                //   console.log($(this).val());
            });
            state = state != """" ? state.slice(0, -1) : state;
            // console.log(state);
            //var spv = $('select#spv ");
            WriteLiteral(@"option:selected').val();

            $('select#spvY option:selected').each(function () {
                spv += $(this).val() + "","";
                //  console.log($(this).val());
            });
            spv = spv != """" ? spv.slice(0, -1) : spv;

        }
        if (userRole == ""User"" && site == """") {
            site = solarUserAccess;
        }

        $('select#invY option:selected').each(function () {
            inverter += $(this).val() + "","";
            //console.log($(this).val());
        });
        inverter = inverter != """" ? inverter.slice(0, -1) : inverter;

        var fyyear = $('select#fyY option:selected').val();
        if (fyyear == """") {
            alert(""Please select financial year"");
            return false;
        }
        //var month = $('select#monthM option:selected').val();
        var arr1 = new Array();
        arr1 = fyyear.split(""-"");

        document.getElementById(""loaderY"").style.display = 'flex';
        var fromDate = """";
      ");
            WriteLiteral(@"  var toDate = """";
        if (fyyear) {
            fromDate = arr1[0] + '-04-01';
            toDate = '20' + arr1[1] + '-03-31';
        }

       // alert(fromDate);
      //  alert(toDate);
        var reportType = ""INV"";
        var reporthead = ""Inverter Wise Report"";
        $.ajax({
            type: ""GET"",
            url: '");
#nullable restore
#line 1906 "C:\Data Folder All Data should be here\DGR\Git_Repo_code\Production code\Code UP\New_up_2\DGR_Main\DGRA\DGRA_V1\Views\Home\SolarGenReport.cshtml"
             Write(Url.Action("GetSolarYearlyGenerationReportWTGWise", "SolarReport"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"' + '?fromDate=' + fromDate + '&toDate=' + toDate + '&country=' + country + '&state=' + state + '&spv=' + spv + '&site=' + site + '&inverter=' + inverter + '&reportType=' + reportType,
            //url: ""/WindReport/GetWindYearlyGenerationReportWTGWise?fromDate="" + fromDate + ""&toDate="" + toDate + ""&country="" + country + ""&state="" + state + ""&spv="" + spv + ""&site="" + site + ""&wtg="" + wtg + ""&reportType="" + reportType,
            contentType: ""application/json; charset=utf-8"",

            datatype: ""JSON"",
            success: function (result, status, xhr) {

              //  var tbl = '<div class=""text-center""><h5></h5></div>';
               var  tbl = '<table id=""example3""  class=""table table-bordered table-striped"" style=""width:285%"">';
                tbl += '<thead class=""tbl-head""><tr>';
                tbl += '<th style=""width:4%"">FY</th>';
                tbl += '<th>Country</th>';
                tbl += '<th>State</th>';
                tbl += '<th>SPV</th>';
                tbl +=");
            WriteLiteral(@" '<th>Site</th>';
                tbl += '<th>Inverter</th>';
                tbl += '<th>DC Capacity (kWp)</th>';
                tbl += '<th>AC Capacity (kW)</th>';
                tbl += '<th>GHI</th>';
                tbl += '<th>POA</th>';
                tbl += '<th>Expected_kwh</th>';
                tbl += '<th>INV kWh</th>';
                tbl += '<th>Plant kWh</th>';
                tbl += '<th>INV PR</th>';
                tbl += '<th>Plant PR</th>';
                tbl += '<th>INV PLF (%)</th>';
                tbl += '<th>Plant PLF (%)</th>';
                tbl += '<th>MA ACT (%)</th>';
                tbl += '<th>MA CON (%)</th>';
                tbl += '<th>IGA (%)</th>';
                tbl += '<th>EGA (%)</th>';
                tbl += '<th>Gen_Hrs</th>';
                tbl += '<th>Lull_Hrs</th>';
                tbl += '<th>USMH</th>';
                tbl += '<th>SMH</th>';
                tbl += '<th>OH</th>';
                tbl += '<th>IGBD</th>';
                ");
            WriteLiteral(@"tbl += '<th>EGBD</th>';
                tbl += '<th>Load Shedding</th>';
                //tbl += '<th>Tracker Loss</th>';

                tbl += '<th>Total BD</th>';


                tbl += '<th>USMH Loss</th>';
                tbl += '<th>SMH Loss</th>';
                tbl += '<th>OH Loss</th>';
                tbl += '<th>IGBD Loss</th>';
                tbl += '<th>EGBD Loss</th>';
                tbl += '<th>Load_She Loss</th>';
                tbl += '<th>LULL Loss</th>';
                tbl += '<th>Total Loss</th>';
                tbl += '</tr></thead>';

                if (result.length > 0) {

                    for (var i = 0; i < result.length; i++) {
                       // var formattedDate = moment(result[i].date, 'YYYY/MM/DD').format('DD-MM-YYYY');
                        tbl += '<tr>';
                        tbl += '<td class=""text-left"">' + fyyear  + '</td>';
                        tbl += '<td class=""text-left"">' + result[i].country + '</td>';
               ");
            WriteLiteral(@"         tbl += '<td class=""text-left"">' + result[i].state + '</td>';
                        tbl += '<td class=""text-left"">' + result[i].spv + '</td>';
                        tbl += '<td class=""text-left"">' + result[i].site + '</td>';
                        tbl += '<td class=""text-left"">' + result[i].inverter + '</td>';
                        tbl += '<td class=""text-left"">' + result[i].dc_capacity.toFixed(2) + '</td>';
                        tbl += '<td class=""text-left"">' + result[i].ac_capacity.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].ghi.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].poa.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].expected_kwh.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].inv_kwh.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].plant_kwh.toFixed(2) + ");
            WriteLiteral(@"'</td>';
                        tbl += '<td class=""text-right"">' + result[i].inv_pr.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].plant_pr.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].inv_plf.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].plant_plf.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].ma_actual.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].ma_contractual.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].iga.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].ega.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].gen_hrs.toFixed(2) + '</td>';

                        tbl += '<td class=""text-right"">' + result[i].lull_hrs_bd.toFixed(2) + '</td>';
     ");
            WriteLiteral(@"                   tbl += '<td class=""text-right"">' + result[i].usmh_bs.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].smh_bd.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].oh_bd.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].igbdh_bd.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].egbdh_bd.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].load_shedding_bd.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].total_bd_hrs.toFixed(2) + '</td>';

                        //tbl += '<td class=""text-right"">' + moment.utc(result[i].unschedule_hrs['totalSeconds'] * 1000).format('HH:mm:ss') + '</td>';
                        //tbl += '<td class=""text-right"">' + moment.utc(result[i].schedule_hrs['totalSeconds'] * 1000).format('HH:mm:ss') + '</td>';
            ");
            WriteLiteral(@"            //tbl += '<td class=""text-right"">' + moment.utc(result[i].others['totalSeconds'] * 1000).format('HH:mm:ss') + '</td>';
                        //tbl += '<td class=""text-right"">' + moment.utc(result[i].igbdh['totalSeconds'] * 1000).format('HH:mm:ss') + '</td>';
                        //tbl += '<td class=""text-right"">' + moment.utc(result[i].egbdh['totalSeconds'] * 1000).format('HH:mm:ss') + '</td>';
                        //tbl += '<td class=""text-right"">' + moment.utc(result[i].load_shedding['totalSeconds'] * 1000).format('HH:mm:ss') + '</td>';



                        tbl += '<td class=""text-right"">' + result[i].usmh.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].smh.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].oh.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].igbdh.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + resu");
            WriteLiteral(@"lt[i].egbdh.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].load_shedding.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].lull_hrs.toFixed(2) + '</td>';
                        //tbl += '<td class=""text-right"">' + result[i].tracker_losses+ '</td>';
                        tbl += '<td class=""text-right"">' + result[i].total_losses.toFixed(2) + '</td>';

                        tbl += '</tr>';
                    }
                }
                else {
                    console.log(""Data not available"");
                    // tbl += '<tr><th colspan=""12"" style=""text-align:center"">Data Not Available <th></tr>';
                }
                tbl += '</table>';
                $(""#reportsYearly"").html(tbl);

                $('#example3').DataTable({
                    dom: 'Bfrtip',
                    title: 'ImportApproval',
                    responsive: false,
                    lengthChange: ");
            WriteLiteral(@"false,
                    autoWidth: true,
                    paging: true,
                    searching: true,
                    ordering: true,
                    info: true,
                    autoWidth: true,
                    pageLength: 50,
                    buttons: [
                        {
                            extend: 'excel',
                            title: 'Solar Yearly Generation Reports Inverter Wise',
                            exportOptions: {
                                columns: ':visible'
                            }
                        },
                        {
                            extend: 'csv',
                            title: 'Solar Yearly Generation Reports Inverter Wise',
                            exportOptions: {
                                columns: ':visible'
                            }
                        },
                        'colvis'
                    ]
                    /* ""buttons"": [
    ");
            WriteLiteral(@"                     'copy', 'excel', 'csv', 'colvis'
                     ]*/
                });
                $("".dt-buttons"").addClass('btn-group flex-wrap');
                $("".dt-buttons > button"").addClass('btn btn-secondary');
                $("".dataTables_filter> label >input"").addClass('form-control form-control-sm');
                $(""dataTables_filter"").css(""margin-top"", ""-35px"");
               // $('#example3').removeClass('dataTable');
                $('#example3').wrap(""<div class='scrolledTable'></div>"");
                document.getElementById(""loaderY"").style.display = 'none';
            }
        });

    }

    // Yearly SIte Wise
    function GetYearlyGenReportSiteWise() {
        var country = $('select#countryY option:selected').val();
        let site = """";
        let spv = """";
        let inv = """";
        let state = """";

        $('select#siteY option:selected').each(function () {
            site += $(this).val() + "","";
        });
        site = ");
            WriteLiteral(@"site != """" ? site.slice(0, -1) : site;

        if (!site) {
            let state = """";
            $('select#stateY option:selected').each(function () {
                state += $(this).val() + "","";
                //   console.log($(this).val());
            });
            state = state != """" ? state.slice(0, -1) : state;
            // console.log(state);
            //var spv = $('select#spv option:selected').val();

            $('select#spvY option:selected').each(function () {
                spv += $(this).val() + "","";
                //  console.log($(this).val());
            });
            spv = spv != """" ? spv.slice(0, -1) : spv;

        }
        if (userRole == ""User"" && site == """") {
            site = solarUserAccess;
        }

        $('select#invY option:selected').each(function () {
            inv += $(this).val() + "","";
            //console.log($(this).val());
        });
        inv = inv != """" ? inv.slice(0, -1) : inv;

        var fyyear = $('select#");
            WriteLiteral(@"fyY option:selected').val();
        if (fyyear == """") {
            alert(""Please select financial year"");
            return false;
        }
        //var month = $('select#monthM option:selected').val();
        document.getElementById(""loaderY"").style.display = 'flex';
        var arr1 = new Array();
        arr1 = fyyear.split(""-"");
        var fromDate = """";
        fromDate = arr1[0] + '-04-01';
        toDate = '20' + arr1[1] + '-03-31';

        // alert(fromDate);
        //  alert(toDate);
        var reportType = ""Site"";
        var reporthead = ""Site Wise Report"";
        $.ajax({
            type: ""GET"",
            url: '");
#nullable restore
#line 2130 "C:\Data Folder All Data should be here\DGR\Git_Repo_code\Production code\Code UP\New_up_2\DGR_Main\DGRA\DGRA_V1\Views\Home\SolarGenReport.cshtml"
             Write(Url.Action("GetSolarYearlyGenerationReportSiteWise", "SolarReport"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"' + '?fromDate=' + fromDate + '&toDate=' + toDate + '&country=' + country + '&state=' + state + '&spv=' + spv + '&site=' + site + '&inverter=' + inv + '&reportType=' + reportType,
            //url: ""/WindReport/GetWindYearlyGenerationReportSiteWise?fromDate="" + fromDate + ""&toDate="" + toDate + ""&country="" + country + ""&state="" + state + ""&spv="" + spv + ""&site="" + site + ""&wtg="" + wtg + ""&reportType="" + reportType,
            contentType: ""application/json; charset=utf-8"",

            datatype: ""JSON"",
            success: function (result, status, xhr) {

                var tbl = '<div class=""text-center""><h5></h5></div>';
                tbl += '<table id=""example3""  class=""table table-bordered table-striped"" style=""width:285%"">';
                tbl += '<thead class=""tbl-head""><tr>';
                tbl += '<th style=""width:4%"">FY</th>';
                tbl += '<th>Country</th>';
                tbl += '<th>State</th>';
                tbl += '<th>SPV</th>';
                tbl += '<th>Sit");
            WriteLiteral(@"e</th>';
                tbl += '<th>DC Capacity (MW)</th>';
                tbl += '<th>AC Capacity (MW)</th>';
                tbl += '<th>GHI</th>';
                tbl += '<th>POA</th>';
                tbl += '<th>Expected_kwh</th>';
                tbl += '<th>INV kWh</th>';
                tbl += '<th>Plant kWh</th>';
                tbl += '<th>INV PR</th>';
                tbl += '<th>Plant PR</th>';
                tbl += '<th>INV PLF (%)</th>';
                tbl += '<th>Plant PLF (%)</th>';
                tbl += '<th>MA ACT (%)</th>';
                tbl += '<th>MA CON (%)</th>';
                tbl += '<th>IGA (%)</th>';
                tbl += '<th>EGA (%)</th>';
                tbl += '<th>Gen_Hrs</th>';
                tbl += '<th>Lull_Hrs</th>';
                tbl += '<th>USMH</th>';
                tbl += '<th>SMH</th>';
                tbl += '<th>OH</th>';
                tbl += '<th>IGBD</th>';
                tbl += '<th>EGBD</th>';
                tbl += '<th>Lo");
            WriteLiteral(@"ad Shedding</th>';
                //tbl += '<th>Tracker Loss</th>';

                tbl += '<th>Total BD</th>';


                tbl += '<th>USMH Loss</th>';
                tbl += '<th>SMH Loss</th>';
                tbl += '<th>OH Loss</th>';
                tbl += '<th>IGBD Loss</th>';
                tbl += '<th>EGBD Loss</th>';
                tbl += '<th>Load_She Loss</th>';
                tbl += '<th>LULL Loss</th>';
                tbl += '<th>Total Loss</th>';
                tbl += '</tr></thead>';

                if (result.length > 0) {
                    console.log(""Datatable"");
                    for (var i = 0; i < result.length; i++) {
                        // var formattedDate = moment(result[i].date, 'YYYY/MM/DD').format('DD-MM-YYYY');
                        tbl += '<tr>';
                        tbl += '<td class=""text-left"">' + fyyear + '</td>';
                        tbl += '<td class=""text-left"">' + result[i].country + '</td>';
                        t");
            WriteLiteral(@"bl += '<td class=""text-left"">' + result[i].state + '</td>';
                        tbl += '<td class=""text-left"">' + result[i].spv + '</td>';
                        tbl += '<td class=""text-left"">' + result[i].site + '</td>';
                        tbl += '<td class=""text-left"">' + result[i].dc_capacity.toFixed(2) + '</td>';
                        tbl += '<td class=""text-left"">' + result[i].ac_capacity.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].ghi.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].poa.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].expected_kwh.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].inv_kwh.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].plant_kwh.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].inv_pr.toFixed(2) + ");
            WriteLiteral(@"'</td>';
                        tbl += '<td class=""text-right"">' + result[i].plant_pr.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].inv_plf.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].plant_plf.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].ma_actual.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].ma_contractual.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].iga.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].ega.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].prod_hrs.toFixed(2) + '</td>';

                        tbl += '<td class=""text-right"">' + result[i].lull_hrs_bd.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].usmh_bs.toFixed(2) + '</td>';
   ");
            WriteLiteral(@"                     tbl += '<td class=""text-right"">' + result[i].smh_bd.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].oh_bd.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].igbdh_bd.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].egbdh_bd.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].load_shedding_bd.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].total_bd_hrs.toFixed(2) + '</td>';



                        tbl += '<td class=""text-right"">' + result[i].usmh.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].smh.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].oh.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].igbdh.toFixed(2) + '</td>';
                      ");
            WriteLiteral(@"  tbl += '<td class=""text-right"">' + result[i].egbdh.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].load_shedding.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].lull_hrs.toFixed(2) + '</td>';
                        //tbl += '<td class=""text-right"">' + result[i].tracker_losses+ '</td>';
                        tbl += '<td class=""text-right"">' + result[i].total_losses.toFixed(2) + '</td>';
                        //tbl += '<td class=""text-right"">' + moment.utc(result[i].unschedule_hrs['totalSeconds'] * 1000).format('HH:mm:ss') + '</td>';
                        //tbl += '<td class=""text-right"">' + moment.utc(result[i].schedule_hrs['totalSeconds'] * 1000).format('HH:mm:ss') + '</td>';
                        //tbl += '<td class=""text-right"">' + moment.utc(result[i].others['totalSeconds'] * 1000).format('HH:mm:ss') + '</td>';
                        //tbl += '<td class=""text-right"">' + moment.utc(result[i].igbdh['tota");
            WriteLiteral(@"lSeconds'] * 1000).format('HH:mm:ss') + '</td>';
                        //tbl += '<td class=""text-right"">' + moment.utc(result[i].egbdh['totalSeconds'] * 1000).format('HH:mm:ss') + '</td>';
                        //tbl += '<td class=""text-right"">' + moment.utc(result[i].load_shedding['totalSeconds'] * 1000).format('HH:mm:ss') + '</td>';



                        //tbl += '<td class=""text-right"">' + result[i].usmh.toFixed(2) + '</td>';
                        //tbl += '<td class=""text-right"">' + result[i].smh.toFixed(2) + '</td>';
                        //tbl += '<td class=""text-right"">' + result[i].oh.toFixed() + '</td>';
                        //tbl += '<td class=""text-right"">' + result[i].igbdh.toFixed() + '</td>';
                        //tbl += '<td class=""text-right"">' + result[i].egbdh.toFixed() + '</td>';
                        //tbl += '<td class=""text-right"">' + result[i].load_shedding.toFixed() + '</td>';

                        ////tbl += '<td class=""text-right"">' + result[i].t");
            WriteLiteral(@"racker_losses + '</td>';

                        //tbl += '<td class=""text-right"">' + result[i].total_losses.toFixed() + '</td>';

                        tbl += '</tr>';
                    }
                }
                else {
                    console.log(""Data not available"");
                    // tbl += '<tr><th colspan=""12"" style=""text-align:center"">Data Not Available <th></tr>';
                }
                tbl += '</table>';
                $(""#reportsYearly"").html(tbl);

                //$.noConflict();

                ////$('#example1').DataTable().clear().destroy();
                ///*$('#example3').DataTable({

                //    ""responsive"": true, ""lengthChange"": false, ""autoWidth"": false,
                //    ""buttons"": [""copy"", ""csv"", ""excel"", ""pdf"", ""print"", ""colvis""],
                //    ""paging"": true,
                //    ""lengthChange"": false,
                //    ""searching"": true,
                //    ""ordering"": true,
                ");
            WriteLiteral(@"//    ""info"": true,
                //    ""autoWidth"": false,
                //    ""responsive"": true,
                //}).buttons().container().appendTo('#example1_wrapper .col-md-6:eq(0)');*/
                //$('#example3').DataTable({
                //    //""responsive"": false, ""lengthChange"": true, ""autoWidth"": true,
                //    ""buttons"": [""csv"", ""excel"", ""colvis""],
                //    ""paging"": true,

                //    ""columnDefs"": [
                //        { ""width"": ""8%"", ""targets"": 0 },

                //    ],
                //    ""fixedColumns"": true

                //}).buttons().container().appendTo('#example1_wrapper .col-md-6:eq(0)');
                //$('#example3').removeClass('dataTable');
                $('#example3').DataTable({
                    dom: 'Bfrtip',
                    title: 'ImportApproval',
                    responsive: false,
                    lengthChange: false,
                    autoWidth: true,
                  ");
            WriteLiteral(@"  paging: true,
                    searching: true,
                    ordering: true,
                    info: true,
                    autoWidth: true,
                    pageLength: 50,
                    buttons: [
                        {
                            extend: 'excel',
                            title: 'Solar Monthly Generation Reports Site Wise',
                            exportOptions: {
                                columns: ':visible'
                            }
                        },
                        {
                            extend: 'csv',
                            title: 'Solar Monthly Generation Reports Site Wise',
                            exportOptions: {
                                columns: ':visible'
                            }
                        },
                        'colvis'
                    ]
                    /* ""buttons"": [
                         'copy', 'excel', 'csv', 'colvis'
               ");
            WriteLiteral(@"      ]*/
                });
                $("".dt-buttons"").addClass('btn-group flex-wrap');
                $("".dt-buttons > button"").addClass('btn btn-secondary');
                $("".dataTables_filter> label >input"").addClass('form-control form-control-sm');
                $(""dataTables_filter"").css(""margin-top"", ""-35px"");
                //$('#example3').removeClass('dataTable');
                $('#example3').wrap(""<div class='scrolledTable'></div>"");
                document.getElementById(""loaderY"").style.display = 'none';
            }
        });

    }

</script>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public IHttpContextAccessor HttpContextAccessor { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<DGRA_V1.Models.CountryList> Html { get; private set; }
    }
}
#pragma warning restore 1591
