#pragma checksum "G:\solarproject\04092023\DGR_Main\DGRA\DGRA_V1\Views\Home\WindGenReport.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "12f91eb8f6ce3a16fb5d77bcf0d86a2da5fd12cc"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_WindGenReport), @"mvc.1.0.view", @"/Views/Home/WindGenReport.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "G:\solarproject\04092023\DGR_Main\DGRA\DGRA_V1\Views\_ViewImports.cshtml"
using DGRA_V1;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "G:\solarproject\04092023\DGR_Main\DGRA\DGRA_V1\Views\_ViewImports.cshtml"
using DGRA_V1.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "G:\solarproject\04092023\DGR_Main\DGRA\DGRA_V1\Views\Home\WindGenReport.cshtml"
using Newtonsoft.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "G:\solarproject\04092023\DGR_Main\DGRA\DGRA_V1\Views\Home\WindGenReport.cshtml"
using Microsoft.AspNetCore.Http;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"12f91eb8f6ce3a16fb5d77bcf0d86a2da5fd12cc", @"/Views/Home/WindGenReport.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"aa9fc0f0a035817cf8f1fc535e299e80b45b9453", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_WindGenReport : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<DGRA_V1.Models.CountryList>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/plugins/fontawesome-free/css/all.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/plugins/daterangepicker/daterangepicker.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/plugins/datatables-bs4/css/dataTables.bootstrap4.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/plugins/datatables-responsive/css/responsive.bootstrap4.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/plugins/datatables-buttons/css/buttons.bootstrap4.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/plugins/multiple-select/dist/multiple-select.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/dist/css/adminlte.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "india", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "04", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "05", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "06", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_13 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "07", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_14 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "08", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_15 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "09", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_16 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "10", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_17 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "11", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_18 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "12", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_19 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "01", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_20 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "02", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_21 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "03", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_22 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/plugins/jquery/jquery.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_23 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/plugins/multiple-select/dist/multiple-select.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_24 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/plugins/moment/moment.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_25 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/plugins/inputmask/jquery.inputmask.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_26 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/plugins/daterangepicker/daterangepicker.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_27 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/plugins/tempusdominus-bootstrap-4/js/tempusdominus-bootstrap-4.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_28 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/plugins/summernote/summernote-bs4.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_29 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/plugins/bootstrap/js/bootstrap.bundle.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_30 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/plugins/datatables/jquery.dataTables.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_31 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/plugins/datatables/jquery.dataTables.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_32 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/plugins/datatables-buttons/js/dataTables.buttons.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_33 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/plugins/jszip/jszip.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_34 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/plugins/datatables-buttons/js/buttons.html5.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_35 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/plugins/pdfmake/pdfmake.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_36 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/theme/plugins/datatables-buttons/js/buttons.colVis.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 5 "G:\solarproject\04092023\DGR_Main\DGRA\DGRA_V1\Views\Home\WindGenReport.cshtml"
  
    ViewData["Title"] = "Wind Generation Reports";

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "G:\solarproject\04092023\DGR_Main\DGRA\DGRA_V1\Views\Home\WindGenReport.cshtml"
  
    ViewData["Title"] = "Wind Daily Load Shedding";

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "G:\solarproject\04092023\DGR_Main\DGRA\DGRA_V1\Views\Home\WindGenReport.cshtml"
  
    string windSiteList = "";

    var usermodel = JsonConvert.DeserializeObject<UserAccess>(@HttpContextAccessor.HttpContext.Session.GetString("UserAccess"));


#line default
#line hidden
#nullable disable
#nullable restore
#line 17 "G:\solarproject\04092023\DGR_Main\DGRA\DGRA_V1\Views\Home\WindGenReport.cshtml"
 for (int i = 0; i < @usermodel.access_list.Count; i++)
{

    if (@usermodel.access_list[i].page_type == 3 && @usermodel.access_list[i].site_type == 1)
    {
        windSiteList += @usermodel.access_list[i].identity.ToString() + ",";
    }


}

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700&display=fallback\">\r\n<!-- Font Awesome -->\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "12f91eb8f6ce3a16fb5d77bcf0d86a2da5fd12cc18180", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n<!-- daterange picker -->\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "12f91eb8f6ce3a16fb5d77bcf0d86a2da5fd12cc19325", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n<!-- DataTables -->\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "12f91eb8f6ce3a16fb5d77bcf0d86a2da5fd12cc20464", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "12f91eb8f6ce3a16fb5d77bcf0d86a2da5fd12cc21580", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "12f91eb8f6ce3a16fb5d77bcf0d86a2da5fd12cc22696", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "12f91eb8f6ce3a16fb5d77bcf0d86a2da5fd12cc23812", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
<!-- dropdown search -->
<link href=""https://unpkg.com/multiple-select@1.5.2/dist/multiple-select.min.css"" rel=""stylesheet"">
<script src=""https://cdn.jsdelivr.net/npm/jquery/dist/jquery.min.js""></script>
<script src=""https://unpkg.com/multiple-select@1.5.2/dist/multiple-select.min.js""></script>



");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "12f91eb8f6ce3a16fb5d77bcf0d86a2da5fd12cc25240", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
<style>
    .tab-btn {
        font-size: 0.7rem;
        font-weight: bold;
    }
</style>

<div class=""content-wrapper"">

    <section class=""content-header"">
    </section>


    <section class=""content"">
        <div class=""card"">
            <div class=""card-header"">
                <h3 class=""card-title text-center"">Wind Generation Reports</h3>

                <!--<div class=""card-tools"">
                    <button type=""button"" class=""btn btn-tool"" data-card-widget=""collapse"" title=""Collapse"">
                        <i class=""fas fa-minus""></i>
                    </button>

                </div>-->
            </div>
            <div class=""card-body"" style=""padding: 0.25rem;"">
                <div class=""row"">
                    <div class=""col-12 col-sm-12"">
                        <div class=""card card-primary card-outline card-tabs"">
                            <div class=""p-0 pt-1 border-bottom-0"">
                                <!--<div class=""card-header p-");
            WriteLiteral(@"0 pt-1 border-bottom-0"">-->
                                <ul class=""nav nav-tabs"" id=""custom-tabs-three-tab"" role=""tablist"">
                                    <li class=""nav-item"">
                                        <a class=""nav-link active"" id=""custom-tabs-three-daily-tab"" data-toggle=""pill"" href=""#custom-tabs-three-daily"" role=""tab"" aria-controls=""custom-tabs-three-daily"" aria-selected=""true"">Daily Gen Report</a>
                                    </li>
                                    <li class=""nav-item"">
                                        <a class=""nav-link"" id=""custom-tabs-three-monthly-tab"" data-toggle=""pill"" href=""#custom-tabs-three-monthly"" role=""tab"" aria-controls=""custom-tabs-three-monthly"" aria-selected=""false"">Monthly Gen Report</a>
                                    </li>
                                    <li class=""nav-item"">
                                        <a class=""nav-link"" id=""custom-tabs-three-yearly-tab"" data-toggle=""pill"" href=""#custom-tabs-three-y");
            WriteLiteral(@"early"" role=""tab"" aria-controls=""custom-tabs-three-yearly"" aria-selected=""false"">Yearly Gen Report</a>
                                    </li>



                                </ul>

                            </div>

                            <div class=""card-body"">

                                <div class=""tab-content"" id=""custom-tabs-three-tabContent"">
                                    <div class=""tab-pane fade show active"" id=""custom-tabs-three-daily"" role=""tabpanel"" aria-labelledby=""custom-tabs-three-daily-tab"">
                                        <div class=""row"">
                                            <div class=""col-sm-4"">
                                                <div class=""input-group "" style=""margin-left: -13%; width: 115%;"">
                                                    <label class=""col-sm-3 col-form-label text-right"" style=""padding-left: 10%; "">Date : </label>
                                                    <div class=""input-group-prepend"">");
            WriteLiteral(@"
                                                        <span class=""input-group-text"">
                                                            <i class=""far fa-calendar-alt""></i>
                                                        </span>
                                                    </div>
                                                    <input type=""text"" class=""form-control float-right"" id=""daterange"" name=""daterange"">
                                                </div>
                                            </div>
                                            <div class=""col-sm-4"">

                                                <div class=""form-group"">
                                                    <div class=""row"">
                                                        <label class=""col-sm-3 col-form-label text-right"">Country : </label>
                                                        <select class=""form-control  col-sm-8"" id=""country"" name=""country""");
            BeginWriteAttribute("value", " value=\"", 5963, "\"", 5971, 0);
            EndWriteAttribute();
            WriteLiteral(">\r\n\r\n                                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "12f91eb8f6ce3a16fb5d77bcf0d86a2da5fd12cc30898", async() => {
                WriteLiteral("India");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_8.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_8);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("selected", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"


                                                        </select>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class=""col-sm-4"">
                                                <div class=""form-group"">
                                                    <div class=""row"">
                                                        <label class=""col-sm-2 col-form-label text-right"">State : </label>
                                                        <select class=""form-control  col-sm-8"" id=""state"" name=""state[]""");
            BeginWriteAttribute("value", " value=\"", 6780, "\"", 6788, 0);
            EndWriteAttribute();
            WriteLiteral(@" onchange=""GetSPV(true);"" multiple></select>
                                                    </div>
                                                </div>
                                            </div>

                                        </div>
                                        <div class=""row"">
                                            <div class=""col-sm-4"">
                                                <div class=""form-group"">
                                                    <div class=""row"">
                                                        <label class=""col-sm-2 col-form-label text-right"">SPV : </label>
                                                        <select class=""form-control  col-sm-10"" id=""spv"" name=""spv[]""");
            BeginWriteAttribute("value", " value=\"", 7564, "\"", 7572, 0);
            EndWriteAttribute();
            WriteLiteral(@" onchange=""getSite(true)"" multiple></select>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class=""col-sm-4"">
                                                <div class=""form-group"">
                                                    <div class=""row"">
                                                        <label class=""col-sm-3 col-form-label text-right"">Site : </label>
                                                        <select class=""form-control  col-sm-8"" id=""site"" name=""site[]""");
            BeginWriteAttribute("value", " value=\"", 8241, "\"", 8249, 0);
            EndWriteAttribute();
            WriteLiteral(@" onchange=""GetWTG(true)"" multiple></select>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class=""col-sm-4"">

                                                <div class=""form-group"">
                                                    <div class=""row"">
                                                        <label class=""col-sm-2 col-form-label text-right"">WTG : </label>
                                                        <select class=""form-control  col-sm-8"" id=""wtg"" name=""wtg"" multiple></select>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class=""row"">
                                            <div class=""col-sm-5");
            WriteLiteral(@" text-left"">
                                                <div class=""table-responsive pad"">
                                                    <div class=""btn-group btn-group-toggle"" data-toggle=""buttons"">
                                                        <label class=""btn bg-olive"">
                                                            <input type=""radio"" name=""daily"" value=""WTG"" id=""daily_b1"" autocomplete=""off"" checked> WTG Wise Report
                                                        </label>
                                                        <label class=""btn bg-olive"">
                                                            <input type=""radio"" name=""daily"" value=""Site"" id=""daily_b2"" autocomplete=""off""> Site Wise Report
                                                        </label>
                                                    </div>
                                                </div>

                                            </div>
              ");
            WriteLiteral(@"                              <div class=""col-sm-2 text-center"">
                                                <button type=""button"" class=""btn btn-block btn-primary"" onclick=""GetDailyGenReport();"" style=""margin-left: 4rem; width: 5rem;"">Search</button>
                                            </div>
                                            <div class=""col-sm-5 text-center""></div>
                                        </div>

                                        <hr>
                                        <div id=""reportsDaily"" style=""overflow-x: auto;"" class=""reportsDaily""></div>
                                        <div id=""loaderD"" class=""loader  center"" style=""display:none""></div>

                                    </div>
                                    <div class=""tab-pane fade"" id=""custom-tabs-three-monthly"" role=""tabpanel"" aria-labelledby=""custom-tabs-three-monthly-tab"">
                                        <div class=""row"">
                                       ");
            WriteLiteral(@"     <div class=""col-sm-4"">
                                                <div class=""form-group"">
                                                    <div class=""row"">
                                                        <label class=""col-sm-2 col-form-label text-right"">FY : </label>
                                                        <select class=""form-control  col-sm-9"" id=""fyM"" name=""fyM""");
            BeginWriteAttribute("value", " value=\"", 11731, "\"", 11739, 0);
            EndWriteAttribute();
            WriteLiteral(">\r\n                                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "12f91eb8f6ce3a16fb5d77bcf0d86a2da5fd12cc38867", async() => {
                WriteLiteral("Select Financial Year");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_9.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_9);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                                        </select>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class=""col-sm-4"">

                                                <div class=""form-group"">
                                                    <div class=""row"">
                                                        <label class=""col-sm-3 col-form-label text-right"">Month : </label>
                                                        <select class=""form-control  col-sm-9"" id=""monthM"" name=""monthM[]""");
            BeginWriteAttribute("value", " value=\"", 12548, "\"", 12556, 0);
            EndWriteAttribute();
            WriteLiteral(" multiple>\r\n                                                            \r\n                                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "12f91eb8f6ce3a16fb5d77bcf0d86a2da5fd12cc41033", async() => {
                WriteLiteral("April");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_10.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_10);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "12f91eb8f6ce3a16fb5d77bcf0d86a2da5fd12cc42254", async() => {
                WriteLiteral("May");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_11.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_11);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "12f91eb8f6ce3a16fb5d77bcf0d86a2da5fd12cc43473", async() => {
                WriteLiteral("June");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_12.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_12);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "12f91eb8f6ce3a16fb5d77bcf0d86a2da5fd12cc44693", async() => {
                WriteLiteral("July");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_13.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_13);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "12f91eb8f6ce3a16fb5d77bcf0d86a2da5fd12cc45913", async() => {
                WriteLiteral("August");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_14.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_14);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "12f91eb8f6ce3a16fb5d77bcf0d86a2da5fd12cc47135", async() => {
                WriteLiteral("September");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_15.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_15);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "12f91eb8f6ce3a16fb5d77bcf0d86a2da5fd12cc48360", async() => {
                WriteLiteral("October");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_16.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_16);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "12f91eb8f6ce3a16fb5d77bcf0d86a2da5fd12cc49583", async() => {
                WriteLiteral("November");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_17.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_17);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "12f91eb8f6ce3a16fb5d77bcf0d86a2da5fd12cc50807", async() => {
                WriteLiteral("December");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_18.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_18);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "12f91eb8f6ce3a16fb5d77bcf0d86a2da5fd12cc52031", async() => {
                WriteLiteral("January");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_19.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_19);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "12f91eb8f6ce3a16fb5d77bcf0d86a2da5fd12cc53254", async() => {
                WriteLiteral("February");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_20.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_20);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "12f91eb8f6ce3a16fb5d77bcf0d86a2da5fd12cc54478", async() => {
                WriteLiteral("March");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_21.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_21);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                                        </select>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class=""col-sm-4"">
                                                <div class=""form-group"">
                                                    <div class=""row"">
                                                        <label class=""col-sm-3 col-form-label text-right"">Country : </label>
                                                        <select class=""form-control  col-sm-9"" id=""countryM"" name=""countryM""");
            BeginWriteAttribute("value", " value=\"", 14483, "\"", 14491, 0);
            EndWriteAttribute();
            WriteLiteral(">\r\n                                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "12f91eb8f6ce3a16fb5d77bcf0d86a2da5fd12cc56559", async() => {
                WriteLiteral("India");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_8.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_8);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("selected", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                                        </select>
                                                    </div>
                                                </div>
                                            </div>

                                        </div>
                                        <div class=""row"">
                                            <div class=""col-sm-4"">
                                                <div class=""form-group"">
                                                    <div class=""row"">
                                                        <label class=""col-sm-2 col-form-label text-right"">State : </label>
                                                        <select class=""form-control  col-sm-9"" id=""stateM"" name=""stateM""");
            BeginWriteAttribute("value", " value=\"", 15403, "\"", 15411, 0);
            EndWriteAttribute();
            WriteLiteral(@" onchange=""GetSPVM(true);"" multiple></select>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class=""col-sm-4"">

                                                <div class=""form-group"">
                                                    <div class=""row"">
                                                        <label class=""col-sm-3 col-form-label text-right"">SPV : </label>
                                                        <select class=""form-control  col-sm-9"" id=""spvM"" name=""spvM[]""");
            BeginWriteAttribute("value", " value=\"", 16082, "\"", 16090, 0);
            EndWriteAttribute();
            WriteLiteral(@" onchange=""getSiteM(true)"" multiple></select>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class=""col-sm-4"">

                                                <div class=""form-group"">
                                                    <div class=""row"">
                                                        <label class=""col-sm-3 col-form-label text-right"">Site : </label>
                                                        <select class=""form-control  col-sm-9"" id=""siteM"" name=""siteM[]""");
            BeginWriteAttribute("value", " value=\"", 16764, "\"", 16772, 0);
            EndWriteAttribute();
            WriteLiteral(@" onchange=""GetWTGM(true)"" multiple></select>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        <div class=""row"">
                                            <div class=""col-sm-4"">
                                                <div class=""form-group"">
                                                    <div class=""row"">
                                                        <label class=""col-sm-2 col-form-label text-right"">WTG : </label>
                                                        <select class=""form-control  col-sm-9"" id=""wtgM"" name=""wtgM"" multiple></select>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class=""col-s");
            WriteLiteral(@"m-1""></div>
                                            <div class=""col-sm-2"">
                                                <button type=""button"" class=""btn btn-block btn-primary"" onclick=""GetMonthlyGenReport();"" style="" margin-left: 4rem; width: 5rem;"">Search</button>
                                            </div>
                                            <div class=""col-sm-5""></div>
                                        </div>
                                        <div class=""row"">
                                            <div class=""col-sm-5"">
                                                <div class=""table-responsive pad"">
                                                    <div class=""btn-group btn-group-toggle"" data-toggle=""buttons"">
                                                        <label class=""btn bg-olive"">
                                                            <input type=""radio"" name=""monthly"" value=""WTG"" id=""monthly_b1"" autocomplete=""off"" checked> WTG Wise R");
            WriteLiteral(@"eport
                                                        </label>
                                                        <label class=""btn bg-olive"">
                                                            <input type=""radio"" name=""monthly"" value=""Site"" id=""monthly_b2"" autocomplete=""off""> Site Wise Report
                                                        </label>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class=""col-sm-7""></div>
                                        </div>

                                        <hr>
                                        <div id=""reportsMonthly"" style=""overflow-x: auto;"" class=""reportsMonthly""></div>
                                        <div id=""loaderM"" class=""loader  center"" style=""display:none""></div>
                                    </div>
                       ");
            WriteLiteral(@"             <div class=""tab-pane fade"" id=""custom-tabs-three-yearly"" role=""tabpanel"" aria-labelledby=""custom-tabs-three-yearly-tab"">
                                        <div class=""row"">
                                            <div class=""col-sm-4"">
                                                <div class=""form-group"">
                                                    <div class=""row"">
                                                        <label class=""col-sm-2 col-form-label text-right"">FY : </label>
                                                        <select class=""form-control  col-sm-9"" id=""fyY"" name=""fyY""");
            BeginWriteAttribute("value", " value=\"", 20487, "\"", 20495, 0);
            EndWriteAttribute();
            WriteLiteral(">\r\n                                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "12f91eb8f6ce3a16fb5d77bcf0d86a2da5fd12cc64778", async() => {
                WriteLiteral("Select Financial Year");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_9.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_9);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                                        </select>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class=""col-sm-4"">
                                                <div class=""form-group"">
                                                    <div class=""row"">
                                                        <label class=""col-sm-3 col-form-label text-right"">Country : </label>
                                                        <select class=""form-control  col-sm-9"" id=""countryY"" name=""countryY""");
            BeginWriteAttribute("value", " value=\"", 21306, "\"", 21314, 0);
            EndWriteAttribute();
            WriteLiteral(">\r\n                                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "12f91eb8f6ce3a16fb5d77bcf0d86a2da5fd12cc66873", async() => {
                WriteLiteral("India");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_8.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_8);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("selected", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                                        </select>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class=""col-sm-4"">
                                                <div class=""form-group"">
                                                    <div class=""row"">
                                                        <label class=""col-sm-2 col-form-label text-right"">State : </label>
                                                        <select class=""form-control  col-sm-9"" id=""stateY"" name=""stateY[]""");
            BeginWriteAttribute("value", " value=\"", 22119, "\"", 22127, 0);
            EndWriteAttribute();
            WriteLiteral(@" onchange=""GetSPVY(true);"" multiple></select>
                                                    </div>
                                                </div>
                                            </div>

                                        </div>
                                        <div class=""row"">
                                            <div class=""col-sm-4"">

                                                <div class=""form-group"">
                                                    <div class=""row"">
                                                        <label class=""col-sm-2 col-form-label text-right"">SPV : </label>
                                                        <select class=""form-control  col-sm-9"" id=""spvY"" name=""spvY[]""");
            BeginWriteAttribute("value", " value=\"", 22907, "\"", 22915, 0);
            EndWriteAttribute();
            WriteLiteral(@" onchange=""getSiteY(true)"" multiple></select>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class=""col-sm-4"">
                                                <div class=""form-group"">
                                                    <div class=""row"">
                                                        <label class=""col-sm-3 col-form-label text-right"">Site : </label>
                                                        <select class=""form-control  col-sm-9"" id=""siteY"" name=""siteY[]""");
            BeginWriteAttribute("value", " value=\"", 23587, "\"", 23595, 0);
            EndWriteAttribute();
            WriteLiteral(@" onchange=""GetWTGY(true)"" multiple></select>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class=""col-sm-4"">
                                                <div class=""form-group"">
                                                    <div class=""row"">
                                                        <label class=""col-sm-2 col-form-label text-right"">WTG : </label>
                                                        <select class=""form-control  col-sm-9"" id=""wtgY"" name=""wtgY"" multiple></select>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        <div class=""row"">
                                            <div class=""col-s");
            WriteLiteral(@"m-5 text-left"">
                                                <div class=""table-responsive pad"">
                                                    <div class=""btn-group btn-group-toggle"" data-toggle=""buttons"">
                                                        <label class=""btn bg-olive"">
                                                            <input type=""radio"" name=""yearly"" value=""WTG"" id=""yearly_b1"" autocomplete=""off"" checked> WTG Wise Report
                                                        </label>
                                                        <label class=""btn bg-olive"">
                                                            <input type=""radio"" name=""yearly"" value=""Site"" id=""yearly_b2"" autocomplete=""off""> Site Wise Report
                                                        </label>
                                                    </div>
                                                </div>
                                            </div>
         ");
            WriteLiteral(@"                                   <div class=""col-sm-2 text-center"">
                                                <button type=""button"" class=""btn btn-block btn-primary"" onclick=""GetYearlyGenReport();"" style="" margin-left: 4rem; width: 5rem;"">Search</button>
                                            </div>
                                            <div class=""col-sm-5 text-center""></div>
                                        </div>

                                        <hr>
                                        <div id=""reportsYearly"" style=""overflow-x: auto;"" class=""reportsYearly""></div>
                                        <div id=""loaderY"" class=""loader  center"" style=""display:none""></div>
                                    </div>

                                </div>
                            </div>
                            <!-- /.card -->
                        </div>
                    </div>

                    <!-- <div id=""reportsDaily"" style=""overflow-x:");
            WriteLiteral(@" auto;"" class=""reportsDaily""></div>
                                        <div id=""reportsMonthly"" style=""overflow-x: auto;"" class=""reportsMonthly""></div>
                                        <div id=""reportsYearly"" style=""overflow-x: auto; "" class=""reportsYearly""></div>
                    -->

                </div>

                <!--<div class=""card-footer"">
                    Footer
                </div>-->

            </div>


    </section>

</div>
");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "12f91eb8f6ce3a16fb5d77bcf0d86a2da5fd12cc74718", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_22);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.1.0/jquery.min.js\"></script>\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "12f91eb8f6ce3a16fb5d77bcf0d86a2da5fd12cc75857", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_23);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("defer", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n<!--Date Range -->\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "12f91eb8f6ce3a16fb5d77bcf0d86a2da5fd12cc77228", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_24);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "12f91eb8f6ce3a16fb5d77bcf0d86a2da5fd12cc78269", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_25);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "12f91eb8f6ce3a16fb5d77bcf0d86a2da5fd12cc79310", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_26);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("defer", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "12f91eb8f6ce3a16fb5d77bcf0d86a2da5fd12cc80659", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_27);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "12f91eb8f6ce3a16fb5d77bcf0d86a2da5fd12cc81704", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_23);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("defer", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "12f91eb8f6ce3a16fb5d77bcf0d86a2da5fd12cc83057", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_28);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "12f91eb8f6ce3a16fb5d77bcf0d86a2da5fd12cc84098", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_29);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "12f91eb8f6ce3a16fb5d77bcf0d86a2da5fd12cc85147", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_30);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "12f91eb8f6ce3a16fb5d77bcf0d86a2da5fd12cc86188", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_31);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("defer", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "12f91eb8f6ce3a16fb5d77bcf0d86a2da5fd12cc87541", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_32);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("defer", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "12f91eb8f6ce3a16fb5d77bcf0d86a2da5fd12cc88890", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_33);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("defer", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "12f91eb8f6ce3a16fb5d77bcf0d86a2da5fd12cc90239", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_34);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("defer", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "12f91eb8f6ce3a16fb5d77bcf0d86a2da5fd12cc91588", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_35);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("defer", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "12f91eb8f6ce3a16fb5d77bcf0d86a2da5fd12cc92937", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_36);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("defer", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n<script type=\"text/javascript\">\r\n    var userRole = \"");
#nullable restore
#line 429 "G:\solarproject\04092023\DGR_Main\DGRA\DGRA_V1\Views\Home\WindGenReport.cshtml"
               Write(Html.Raw(@HttpContextAccessor.HttpContext.Session.GetString("role")));

#line default
#line hidden
#nullable disable
            WriteLiteral("\";\r\n    var windUserAccess =\"");
#nullable restore
#line 430 "G:\solarproject\04092023\DGR_Main\DGRA\DGRA_V1\Views\Home\WindGenReport.cshtml"
                    Write(Html.Raw(windSiteList.TrimEnd(',')));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""";
    $(document).ready(function () {
        $('#daterange').daterangepicker(
            {
                maxDate: new Date(),
                locale: {
                    format: 'DD/MM/YYYY',
                }
            });
    });
    window.onload = function () {
        $('select#monthM').multipleSelect({
                    ""minimumCountSelected"": 2,
                    ""placeholder"": ""Select Month(s)"",
                    filter:true
        });
        $('select#country').multipleSelect({
            ""placeholder"": ""Select country"",
            filter: true
        });
        $('select#countryY').multipleSelect({
            ""placeholder"": ""Select country"",
            filter: true
        });
        $('select#countryM').multipleSelect({
            ""placeholder"": ""Select country"",
            filter: true
        });
        var selcountry = $('select#country option:selected').val();
        var site_ids = """);
#nullable restore
#line 459 "G:\solarproject\04092023\DGR_Main\DGRA\DGRA_V1\Views\Home\WindGenReport.cshtml"
                   Write(Html.Raw(windSiteList.TrimEnd(',')));

#line default
#line hidden
#nullable disable
            WriteLiteral("\";\r\n\r\n        $.ajax({\r\n            type: \"GET\",\r\n            url: \'");
#nullable restore
#line 463 "G:\solarproject\04092023\DGR_Main\DGRA\DGRA_V1\Views\Home\WindGenReport.cshtml"
             Write(Url.Action("GetStateList", "WindReport"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"' + '?countryname=' + selcountry + '&sitelist=' + site_ids,
            contentType: ""application/json; charset=utf-8"",
            //data: '{""countryname"":""' + selcountry + '""}',
            datatype: ""html"",
            success: function (result, status, xhr) {
                var options = """";
                for (var i = 0; i < result.length; i++) {
                    options += '<option value=""' + result[i].state + '"">' + result[i].state + '</option>';
                }


                $(""#state"").html(options);
                $(""#stateM"").html(options);
                $(""#stateY"").html(options);
                $('select#state').multipleSelect({
                    ""minimumCountSelected"": 2,
                    ""placeholder"": ""Select State(s)"",
                    filter:true
                });
                $('select#stateM').multipleSelect({
                    ""minimumCountSelected"": 2,
                    ""placeholder"": ""Select State(s)"",
                    filter:true");
            WriteLiteral(@"
                });
                $('select#stateY').multipleSelect({
                    ""minimumCountSelected"": 2,
                    ""placeholder"": ""Select State(s)"",
                    filter:true
                });
            }
        });
        getYear();
        GetSPV(false);
        GetSPVM(false);
        GetSPVY(false);
    }
    function getYear() {
    $.ajax({
        type: ""GET"",
        url: ""/WindReport/GetFinacialYear"",
        url: '");
#nullable restore
#line 503 "G:\solarproject\04092023\DGR_Main\DGRA\DGRA_V1\Views\Home\WindGenReport.cshtml"
         Write(Url.Action("GetFinacialYear", "WindReport"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
        contentType: ""application/json; charset=utf-8"",
        datatype: ""html"",
        success: function (result, status, xhr) {
            var options = """";
            options += '<option value="""">Select Financial Year</option>';
            for (var i = 0; i < result.length; i++) {
                options += '<option value=""' + result[i].financial_year + '"">' + result[i].financial_year + '</option>';
            }
            $(""#fyM"").html(options);
            $(""#fyY"").html(options);
            $('select#fyM').multipleSelect({
                ""placeholder"": ""Select month"",
                filter: true
            });
            $('select#fyY').multipleSelect({
                ""placeholder"": ""Select year"",
                filter: true
            });
        }
    });
    }

    function GetSPVY(fliterVal) {
        let state_id = """";

        let site_ids = """";
         if (fliterVal == false) {
            site_ids = """);
#nullable restore
#line 531 "G:\solarproject\04092023\DGR_Main\DGRA\DGRA_V1\Views\Home\WindGenReport.cshtml"
                   Write(Html.Raw(windSiteList.TrimEnd(',')));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""";
        }
        if($('#stateY').val())
        {
            $('select#stateY option:selected').each(function () {
                state_id += ""'""+$(this).val() + ""',"";
            });
            state_id = state_id != """" ? state_id.slice(0, -1) : state_id;
        }
        if (state_id != """") {
             site_ids = """);
#nullable restore
#line 541 "G:\solarproject\04092023\DGR_Main\DGRA\DGRA_V1\Views\Home\WindGenReport.cshtml"
                    Write(Html.Raw(windSiteList.TrimEnd(',')));

#line default
#line hidden
#nullable disable
            WriteLiteral("\";\r\n        }\r\n        $.ajax({\r\n            type: \"GET\",\r\n            url: \'");
#nullable restore
#line 545 "G:\solarproject\04092023\DGR_Main\DGRA\DGRA_V1\Views\Home\WindGenReport.cshtml"
             Write(Url.Action("GetSPVList", "WindReport"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"' + '?state=' + state_id + '&sitelist=' + site_ids,
            contentType: ""application/json; charset=utf-8"",
            datatype: ""html"",
            success: function (result, status, xhr) {

                var options = """";
                for (var j = 0; j < result.length; j++) {
                    options += '<option value=""' + result[j].spv + '"">' + result[j].spv + '</option>';
                }
                $(""#spvY"").multipleSelect('destroy');

                $(""#spvY"").html(options);
                $('select#spvY').multipleSelect({
                    ""minimumCountSelected"": 2,
                    ""placeholder"": ""Select SPV(s)"",
                    filter:true
                });
            }
        });
        getSiteY(false);
    }
    function GetSPVM(fliterVal) {
        let state_id = """";
        let site_ids = """";
         if (fliterVal == false) {
             site_ids = """);
#nullable restore
#line 570 "G:\solarproject\04092023\DGR_Main\DGRA\DGRA_V1\Views\Home\WindGenReport.cshtml"
                    Write(Html.Raw(windSiteList.TrimEnd(',')));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""";
        }
        if($('#stateM').val())
        {
            $('select#stateM option:selected').each(function () {
                state_id += ""'"" + $(this).val() + ""',"";
            });
            state_id = state_id != """" ? state_id.slice(0, -1) : state_id;
        }
        if (state_id != """") {
             site_ids = """);
#nullable restore
#line 580 "G:\solarproject\04092023\DGR_Main\DGRA\DGRA_V1\Views\Home\WindGenReport.cshtml"
                    Write(Html.Raw(windSiteList.TrimEnd(',')));

#line default
#line hidden
#nullable disable
            WriteLiteral("\";\r\n        }\r\n        $.ajax({\r\n            type: \"GET\",\r\n            url: \'");
#nullable restore
#line 584 "G:\solarproject\04092023\DGR_Main\DGRA\DGRA_V1\Views\Home\WindGenReport.cshtml"
             Write(Url.Action("GetSPVList", "WindReport"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"' + '?state=' + state_id + '&sitelist=' + site_ids,
            contentType: ""application/json; charset=utf-8"",
            datatype: ""html"",
            success: function (result, status, xhr) {

                var options = """";
                for (var j = 0; j < result.length; j++) {
                    options += '<option value=""' + result[j].spv + '"">' + result[j].spv + '</option>';
                }
                $(""#spvM"").multipleSelect('destroy');

                $(""#spvM"").html(options);
                $('select#spvM').multipleSelect({
                    ""minimumCountSelected"": 2,
                    ""placeholder"": ""Select SPV(s)"",
                    filter:true
                });
            }
        });
        getSiteM(false);
    }
    function GetSPV(fliterVal) {
        let state_id = """";
        let site_ids = """";

        if (fliterVal == false) {
            site_ids = """);
#nullable restore
#line 610 "G:\solarproject\04092023\DGR_Main\DGRA\DGRA_V1\Views\Home\WindGenReport.cshtml"
                   Write(Html.Raw(windSiteList.TrimEnd(',')));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""";
        }
        if($('#state').val())
        {
            $('select#state option:selected').each(function () {
                state_id += ""'""+$(this).val() + ""',"";
            });
            state_id = state_id != """" ? state_id.slice(0, -1) : state_id;
        }
        if (state_id != """") {
             site_ids = """);
#nullable restore
#line 620 "G:\solarproject\04092023\DGR_Main\DGRA\DGRA_V1\Views\Home\WindGenReport.cshtml"
                    Write(Html.Raw(windSiteList.TrimEnd(',')));

#line default
#line hidden
#nullable disable
            WriteLiteral("\";\r\n        }\r\n        $.ajax({\r\n            type: \"GET\",\r\n            ///url: \"/WindReport/GetSPVList?state=\" + val,\r\n            url: \'");
#nullable restore
#line 625 "G:\solarproject\04092023\DGR_Main\DGRA\DGRA_V1\Views\Home\WindGenReport.cshtml"
             Write(Url.Action("GetSPVList", "WindReport"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"' + '?state=' + state_id + '&sitelist=' + site_ids,
            contentType: ""application/json; charset=utf-8"",
            datatype: ""html"",
            success: function (result, status, xhr) {

                var options = """";
                for (var j = 0; j < result.length; j++) {
                    options += '<option value=""' + result[j].spv + '"">' + result[j].spv + '</option>';
                }
                $(""#spv"").multipleSelect('destroy');
                $(""#spv"").html(options);
                $('select#spv').multipleSelect({
                    ""minimumCountSelected"": 2,
                    ""placeholder"": ""Select SPV(s)"",
                    filter:true
                });

            }
        });
        getSite(false);
    }
    function getSite(fliterVal) {
        var site_ids = """";
        if (fliterVal == false) {
            site_ids = """);
#nullable restore
#line 649 "G:\solarproject\04092023\DGR_Main\DGRA\DGRA_V1\Views\Home\WindGenReport.cshtml"
                   Write(Html.Raw(windSiteList.TrimEnd(',')));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""";
        }
        let state_id = """";
        $('select#state option:selected').each(function () {
            state_id += $(this).val() + "","";
        });
        state_id = state_id != """" ? state_id.slice(0, -1) : state_id;

        let spv = """";
        $('select#spv option:selected').each(function () {
            spv += $(this).val() + "","";
        });
        spv = spv != """" ? spv.slice(0, -1) : spv;
        if (state_id != """" || spv != """") {
             site_ids = """);
#nullable restore
#line 663 "G:\solarproject\04092023\DGR_Main\DGRA\DGRA_V1\Views\Home\WindGenReport.cshtml"
                    Write(Html.Raw(windSiteList.TrimEnd(',')));

#line default
#line hidden
#nullable disable
            WriteLiteral("\";\r\n        }\r\n        $.ajax({\r\n            type: \"POST\",\r\n            url: \'");
#nullable restore
#line 667 "G:\solarproject\04092023\DGR_Main\DGRA\DGRA_V1\Views\Home\WindGenReport.cshtml"
             Write(Url.Action("GetSiteList", "WindReport"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"' + '?state=' + state_id + '&spv=' + spv + '&sitelist=' + site_ids,
            contentType: ""application/json; charset=utf-8"",
            datatype: ""html"",
            success: function (result, status, xhr) {
                var options = """";
                for (var k = 0; k < result.length; k++) {
                    options += '<option value=""' + result[k].site_master_id + '"">' + result[k].site + '</option>';
                }
                $(""#site"").multipleSelect('destroy');
                $(""#site"").html("""").html(options);

                $('select#site').multipleSelect({
                    ""minimumCountSelected"": 2,
                    ""placeholder"": ""Select Site(s)"",
                    filter:true
                });
            }
        });
         GetWTG(false);
    }
    function getSiteM(fliterVal) {
        let state_id = """";
        var site_ids = """";
        if (fliterVal == false) {
            site_ids = """);
#nullable restore
#line 691 "G:\solarproject\04092023\DGR_Main\DGRA\DGRA_V1\Views\Home\WindGenReport.cshtml"
                   Write(Html.Raw(windSiteList.TrimEnd(',')));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""";
        }
         $('select#stateM option:selected').each(function () {
            state_id += $(this).val() + "","";
            console.log($(this).val());
        });
        state_id = state_id != """" ? state_id.slice(0, -1) : state_id;

        let spv = """";

        $('select#spvM option:selected').each(function () {
            spv += $(this).val() + "","";
        });
        spv = spv != """" ? spv.slice(0, -1) : spv;
        if (state_id != """" || spv != """") {
             site_ids = """);
#nullable restore
#line 706 "G:\solarproject\04092023\DGR_Main\DGRA\DGRA_V1\Views\Home\WindGenReport.cshtml"
                    Write(Html.Raw(windSiteList.TrimEnd(',')));

#line default
#line hidden
#nullable disable
            WriteLiteral("\";\r\n        }\r\n        $.ajax({\r\n            type: \"POST\",\r\n            url: \'");
#nullable restore
#line 710 "G:\solarproject\04092023\DGR_Main\DGRA\DGRA_V1\Views\Home\WindGenReport.cshtml"
             Write(Url.Action("GetSiteList", "WindReport"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"' + '?state=' + state_id + '&spv=' + spv+ '&sitelist=' + site_ids,
            contentType: ""application/json; charset=utf-8"",
            // data: '{""state"":""' + val + '""}',
            datatype: ""html"",
            success: function (result, status, xhr) {
                var options = """";
                for (var k = 0; k < result.length; k++) {
                    options += '<option value=""' + result[k].site_master_id + '"">' + result[k].site + '</option>';
                }
                $(""#siteM"").multipleSelect('destroy');
                $(""#siteM"").html("""").html(options);
                $('select#siteM').multipleSelect({
                    ""minimumCountSelected"": 2,
                    ""placeholder"": ""Select Site(s)"",
                    filter:true
                });
            }
        });
         GetWTGM(false);
    }
    function getSiteY(fliterVal) {
        let state_id = """";
        var site_ids = """";
        if (fliterVal == false) {
            site_ids = """);
#nullable restore
#line 734 "G:\solarproject\04092023\DGR_Main\DGRA\DGRA_V1\Views\Home\WindGenReport.cshtml"
                   Write(Html.Raw(windSiteList.TrimEnd(',')));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""";
        }
        $('select#stateY option:selected').each(function () {
            state_id += $(this).val() + "","";
        });
        state_id = state_id != """" ? state_id.slice(0, -1) : state_id;

        let spv = """";
        $('select#spvY option:selected').each(function () {
            spv += $(this).val() + "","";
        });
        spv = spv != """" ? spv.slice(0, -1) : spv;

        $.ajax({
            type: ""POST"",
            url: '");
#nullable restore
#line 749 "G:\solarproject\04092023\DGR_Main\DGRA\DGRA_V1\Views\Home\WindGenReport.cshtml"
             Write(Url.Action("GetSiteList", "WindReport"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"' + '?state=' + state_id + '&spv=' + spv + '&sitelist=' + site_ids,
            contentType: ""application/json; charset=utf-8"",
            // data: '{""state"":""' + val + '""}',
            datatype: ""html"",
            success: function (result, status, xhr) {
                var options = """";
                for (var k = 0; k < result.length; k++) {
                    options += '<option value=""' + result[k].site_master_id + '"">' + result[k].site + '</option>';
                }
                $(""#siteY"").multipleSelect('destroy');
                $(""#siteY"").html("""").html(options);
                $('select#siteY').multipleSelect({
                    ""minimumCountSelected"": 2,
                    ""placeholder"": ""Select Site(s)"",
                    filter:true
                });
            }
        });
        GetWTGY(false);
    }
    function GetWTG(fliterVal) {
        let siteid = """";
        //$('select#site option:selected').each(function () {
        //    siteid += $(this");
            WriteLiteral(").val() + \",\";\r\n        //});\r\n        //siteid = siteid != \"\" ? siteid.slice(0, -1) : siteid;\r\n\r\n         if (fliterVal == false) {\r\n             siteid = \"");
#nullable restore
#line 777 "G:\solarproject\04092023\DGR_Main\DGRA\DGRA_V1\Views\Home\WindGenReport.cshtml"
                  Write(Html.Raw(windSiteList.TrimEnd(',')));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""";
            }
            else {
             $('select#site option:selected').each(function () {
                 siteid += $(this).val() + "","";
                 });
                siteid = siteid != """" ? siteid.slice(0, -1) : siteid;
            }
        $.ajax({
            type: ""GET"",
            url: '");
#nullable restore
#line 787 "G:\solarproject\04092023\DGR_Main\DGRA\DGRA_V1\Views\Home\WindGenReport.cshtml"
             Write(Url.Action("GetWTGList", "WindReport"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"' + '?siteid=' + siteid,
            contentType: ""application/json; charset=utf-8"",
            // data: '{""state"":""' + val + '""}',
            datatype: ""html"",
            success: function (result, status, xhr) {
                var options = """";
                for (var k = 0; k < result.length; k++) {
                    options += '<option value=""' + result[k].wtg + '"">' + result[k].wtg + '</option>';
                }
                $(""#wtg"").multipleSelect('destroy');
                $(""#wtg"").html("""").html(options);
                $('select#wtg').multipleSelect({
                    ""minimumCountSelected"": 2,
                    ""placeholder"": ""Select WTG(s)"",
                    filter:true
                });

            }
        });
    }
    function GetWTGM(fliterVal) {
        let siteid = """";
        //$('select#siteM option:selected').each(function () {
        //    siteid += $(this).val() + "","";

        //});
        //siteid = siteid != """" ? siteid.slice(0, ");
            WriteLiteral("-1) : siteid;\r\n\r\n         if (fliterVal == false) {\r\n             siteid = \"");
#nullable restore
#line 816 "G:\solarproject\04092023\DGR_Main\DGRA\DGRA_V1\Views\Home\WindGenReport.cshtml"
                  Write(Html.Raw(windSiteList.TrimEnd(',')));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""";
            }
            else {
             $('select#siteM option:selected').each(function () {
                 siteid += $(this).val() + "","";
                 });
                siteid = siteid != """" ? siteid.slice(0, -1) : siteid;
            }
        $.ajax({
            type: ""GET"",
            url: '");
#nullable restore
#line 826 "G:\solarproject\04092023\DGR_Main\DGRA\DGRA_V1\Views\Home\WindGenReport.cshtml"
             Write(Url.Action("GetWTGList", "WindReport"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"' + '?siteid=' + siteid,
            contentType: ""application/json; charset=utf-8"",
            // data: '{""state"":""' + val + '""}',
            datatype: ""html"",
            success: function (result, status, xhr) {
                var options = """";
                for (var k = 0; k < result.length; k++) {
                    options += '<option value=""' + result[k].wtg + '"">' + result[k].wtg + '</option>';
                }
                $(""#wtgM"").multipleSelect('destroy');
                $(""#wtgM"").html("""").html(options);
                $('select#wtgM').multipleSelect({
                    ""minimumCountSelected"": 2,
                    ""placeholder"": ""Select WTG(s)"",
                    filter:true
                });
            }
        });
    }
    function GetWTGY(fliterVal) {
        var siteid = """";
         if (fliterVal == false) {
             siteid = """);
#nullable restore
#line 848 "G:\solarproject\04092023\DGR_Main\DGRA\DGRA_V1\Views\Home\WindGenReport.cshtml"
                  Write(Html.Raw(windSiteList.TrimEnd(',')));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""";
            }
            else {
                $('select#siteY option:selected').each(function () {
                    siteid += $(this).val() + "","";
                 });
                siteid = siteid != """" ? siteid.slice(0, -1) : siteid;
            }
       // $('select#siteY option:selected').each(function () {
         //   siteid += $(this).val() + "","";
        //});


        $.ajax({
            type: ""GET"",
            url: '");
#nullable restore
#line 863 "G:\solarproject\04092023\DGR_Main\DGRA\DGRA_V1\Views\Home\WindGenReport.cshtml"
             Write(Url.Action("GetWTGList", "WindReport"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"' + '?siteid=' + siteid,
            contentType: ""application/json; charset=utf-8"",
            // data: '{""state"":""' + val + '""}',
            datatype: ""html"",
            success: function (result, status, xhr) {
                var options = """";
                for (var k = 0; k < result.length; k++) {
                    options += '<option value=""' + result[k].wtg + '"">' + result[k].wtg + '</option>';
                }
                $(""#wtgY"").multipleSelect('destroy');
                $(""#wtgY"").html("""").html(options);
                $('select#wtgY').multipleSelect({
                    ""minimumCountSelected"": 2,
                    ""placeholder"": ""Select WTG(s)"",
                    filter:true
                });
            }
        });
    }


    function GetDailyGenReport() {

        var ReportType = $(""input[name='daily']:checked"").val();
        if (ReportType == ""WTG"") {
            GetDailyGenReportWTGWise();
        }
        else {
            GetDailyGenRe");
            WriteLiteral(@"portSiteWise();
        }
    }
    // Daily Gen Report WTG WIse
    function GetDailyGenReportWTGWise() {
        var daterange = $('#daterange').val();
        var arr1 = new Array();
        arr1 = daterange.split(""-"");
        var fromDate = moment(arr1[0], 'DD/MM/YYYY').format('YYYY-MM-DD');
        var toDate = moment(arr1[1], 'DD/MM/YYYY').format('YYYY-MM-DD');
        var country = $('select#country option:selected').val();
        //var state = $('select#state option:selected').val();

        let site= """";
        let spv = """";
        let wtg = """";
        let state = """";
        $('select#site option:selected').each(function () {
            site += $(this).val() + "","";
        });
        site = site != """" ? site.slice(0, -1) : site;
       

        if(!site){
            $('select#state option:selected').each(function () {
                state +=  $(this).val() + "","";
            });
            state = state != """" ? state.slice(0, -1) : state;

            $('sele");
            WriteLiteral(@"ct#spv option:selected').each(function () {
                spv += $(this).val() + "","";
            });
            spv = spv != """" ? spv.slice(0, -1) : spv;
        }

        $('select#wtg option:selected').each(function () {
            wtg +=  $(this).val() + "","";
        });
        wtg = wtg != """" ? wtg.slice(0, -1) : wtg;


        if (userRole == ""User"" && site == """") {
            site = windUserAccess;
        }

        var reportType = ""WTG"";
        var reporthead = ""WTG Wise Report"";
        document.getElementById(""loaderD"").style.display = 'flex';
        $.ajax({
            type: ""GET"",
            url: '");
#nullable restore
#line 941 "G:\solarproject\04092023\DGR_Main\DGRA\DGRA_V1\Views\Home\WindGenReport.cshtml"
             Write(Url.Action("GetWindDailyGenerationReportWTGWise", "WindReport"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"' + '?fromDate=' + fromDate + '&toDate=' + toDate + '&country=' + country + '&state=' + state + '&spv=' + spv + '&site=' + site + '&wtg=' + wtg,
            contentType: ""application/json; charset=utf-8"",
            datatype: ""JSON"",
            success: function (result, status, xhr) {

                //var tbl = '<div class=""text-center""><h5></h5></div>';
                var tbl = '<table id=""example1""  class=""table table-bordered table-striped"" style=""width: 160%;"">';
                tbl += '<thead class=""tbl-head""><tr>';
                tbl += '<th >Date</th>';
                tbl += '<th>Country</th>';
                tbl += '<th>State</th>';
                tbl += '<th>SPV</th>';
                tbl += '<th>Site</th>';
                tbl += '<th>WTG</th>';
                tbl += '<th>Wind<br>(m/s)</th>';
                tbl += '<th>kWh</th>';
                tbl += '<th>PLF<br>(%)</th>';
                tbl += '<th>MA_ACT<br>(%)</th>';
                tbl += '<th>MA_CON<br>(%)</th>'");
            WriteLiteral(@";
                tbl += '<th>IGA<br>(%)</th>';
                tbl += '<th>EGA_A<br>(%) <span class=""information"">i<span></th>';
                tbl += '<th>EGA_B<br>(%) <span class=""information"">i<span></th>';
                tbl += '<th>EGA_C<br>(%) <span class=""information"">i<span></th>';
                tbl += '<th>Gen_Hrs</th>';
                tbl += '<th>Lull_Hrs</th>';

                tbl += '<th>USMH</th>';
                tbl += '<th>SMH</th>';
                tbl += '<th>Others</th>';
                tbl += '<th>IGBDH</th>';
                tbl += '<th>EGBDH</th>';
                tbl += '<th>LS</th>';
                tbl += '<th>Total_BD</th>';


                tbl += '<th>USMH_Loss</th>';
                tbl += '<th>SMH_Loss</th>';
                tbl += '<th>Others_Loss</th>';
                tbl += '<th>IGBDH_Loss</th>';
                tbl += '<th>EGBDH_Loss</th>';
                tbl += '<th>LS_Loss</th>';
                tbl += '<th>Total_Loss</th>';
              ");
            WriteLiteral(@"  tbl += '</tr></thead>';

                if (result.length > 0) {
                    //result.sort(function (a, b) {
                    //    var dateA = new Date(a.date);
                    //    var dateB = new Date(b.date);
                    //    return dateA - dateB;
                    //});
                    var total_losses = 0;
                    for (var i = 0; i < result.length; i++) {
                        //var formattedDate = moment(result[i].date, 'YYYY/MM/DD').format('DD-MM-YYYY');
                        //var dateOnly = result[i].date.split(""T"")[0];
                        //var splitDate = dateOnly.split(""-"");
                        //var finalDate = splitDate[2] + ""-"" + splitDate[1] + ""-"" + splitDate[0];
                        //console.log(""Date : "" + formattedDate + "", Site : "" + result[i].site + "", WTG : "" + result[i].wtg);
                        //console.log(""USMH : "" + result[i].unschedule_num + "" SMH : "" + result[i].schedule_num);
                     ");
            WriteLiteral(@"   //console.log("" Others : "" + result[i].others_num + "" IGBDH : "" + result[i].igbdh_num + "" EGBD : "" + result[i].egbdh_num + "" load Shedding : "" + result[i].load_shedding_num);
                        total_losses = Math.abs(parseFloat(result[i].usmh_loss)) + Math.abs(parseFloat(result[i].smh_loss)) + Math.abs(parseFloat(result[i].others_loss)) + Math.abs(parseFloat(result[i].igbdh_loss)) + Math.abs(parseFloat(result[i].egbdh_loss)) + Math.abs(parseFloat(result[i].load_Shedding_loss));
                        tbl += '<tr>';
                        tbl += '<td class=""text-left"" style=""text-wrap: nowrap;"">' + result[i].date.split(""T"")[0].split(""-"").reverse().join(""-""); + '</td>';
                        tbl += '<td class=""text-left"">' + result[i].country + '</td>';
                        tbl += '<td class=""text-left"">' + result[i].state + '</td>';
                        tbl += '<td class=""text-left"" style=""text-wrap: nowrap;"">' + result[i].spv + '</td>';
                        tbl += '<td class=""text");
            WriteLiteral(@"-left"">' + result[i].site + '</td>';
                        tbl += '<td class=""text-left"">' + result[i].wtg + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].wind_speed.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].kwh.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].plf.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].ma_actual.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].ma_contractual.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].iga.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].ega.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].ega_b.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].ega_c.toFixed(2) + '</td>';
          ");
            WriteLiteral(@"              tbl += '<td class=""text-right"">' + result[i].production_hrs.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].lull_hrs.toFixed(2) + '</td>';

                        tbl += '<td  class=""text-right"">' + result[i].unschedule_num.toFixed(2) + '</td>';
                        tbl += '<td  class=""text-right"">' + result[i].schedule_num.toFixed(2) + '</td>';
                        tbl += '<td  class=""text-right"">' + result[i].others_num.toFixed(2) + '</td>';
                        tbl += '<td  class=""text-right"">' + result[i].igbdh_num.toFixed(2) + '</td>';
                        tbl += '<td  class=""text-right"">' + result[i].egbdh_num.toFixed(2) + '</td>';
                        tbl += '<td  class=""text-right"">' + result[i].load_shedding_num.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].total_hrs.toFixed(2) + '</td>';

                        //tbl += '<td  class=""text-right"">' + result[i].usmh_loss.toF");
            WriteLiteral(@"ixed(2) + '</td>';
                        //tbl += '<td  class=""text-right"">' + result[i].smh_loss.toFixed(2) + '</td>';
                        //tbl += '<td  class=""text-right"">' + result[i].others_loss.toFixed(2) + '</td>';
                        //tbl += '<td  class=""text-right"">' + result[i].igbdh_loss.toFixed(2) + '</td>';
                        //tbl += '<td  class=""text-right"">' + result[i].egbdh_loss.toFixed(2) + '</td>';
                        //tbl += '<td  class=""text-right"">' + result[i].load_Shedding_loss.toFixed(2) + '</td>';
                        //tbl += '<td  class=""text-right"">' + result[i].total_loss.toFixed(2) + '</td>';

                        tbl += '<td  class=""text-right"">' + Math.abs(parseFloat(result[i].usmh_loss)).toFixed(2) + '</td>';
                        tbl += '<td  class=""text-right"">' + Math.abs(parseFloat(result[i].smh_loss)).toFixed(2) + '</td>';
                        tbl += '<td  class=""text-right"">' + Math.abs(parseFloat(result[i].others_loss)).toFixe");
            WriteLiteral(@"d(2) + '</td>';
                        tbl += '<td  class=""text-right"">' + Math.abs(parseFloat(result[i].igbdh_loss)).toFixed(2) + '</td>';
                        tbl += '<td  class=""text-right"">' + Math.abs(parseFloat(result[i].egbdh_loss)).toFixed(2) + '</td>';
                        tbl += '<td  class=""text-right"">' + Math.abs(parseFloat(result[i].load_Shedding_loss)).toFixed(2) + '</td>';
                        tbl += '<td  class=""text-right"">' + Math.abs(parseFloat(total_losses)).toFixed(2) + '</td>';
                            
                        tbl += '</tr>';
                    }
                }
                else {
                    console.log(""Data not available"");

                }
                tbl += '</table>';
                $(""#reportsDaily"").html(tbl);
                $.fn.DataTable.ext.pager.numbers_length = 6;
                $('#example1').DataTable({
                    dom: 'Bfrtip',
                    title: '',
                    responsive: ");
            WriteLiteral(@"false,
                    lengthChange: false,
                    autoWidth: true,
                    paging: true,
                    searching: true,
                    ordering: true,
                    info: true,                  
                    pageLength: 50,
                    ""order"": [[4, ""asc""]],
                    buttons: [
                        {
                            extend: 'excel',
                            title: 'WTG Wise Daily Generation Report',
                            exportOptions: {
                                columns: ':visible'
                            }
                        },
                        {
                            extend: 'csv',
                            title: 'WTG Wise Daily Generation Report',
                            exportOptions: {
                                columns: ':visible'
                            }
                        },
                        'colvis'
                    ],
");
            WriteLiteral(@"                    initComplete: function () {
                        this.api().columns().header().to$().each(function () {
                            //$(this).attr('title', 'title for ' + $(this).text())
                            if ($(this).text() == ""EGA_A(%) i"") {
                                $(this).attr('title', 'External Grid Breakdown, Shutdown & Load Shedding')
                            }
                            if ($(this).text() == ""EGA_B(%) i"") {
                                $(this).attr('title', 'External Grid Breakdown & Shutdown')
                            }
                            if ($(this).text() == ""EGA_C(%) i"") {
                                $(this).attr('title', 'Load Shedding')
                            }
                        })
                    }
                    /* ""buttons"": [
                         'copy', 'excel', 'csv', 'colvis'
                     ]*/
                });


                $("".dt-buttons"").addClass('btn");
            WriteLiteral(@"-group flex-wrap');
                $("".dt-buttons > button"").addClass('btn btn-secondary');
                $("".dataTables_filter> label >input"").addClass('form-control form-control-sm');
                $(document).on(""click"", ""div.dt-button-collection > div > button"", function () {
                    if ($(this).hasClass(""active"")) {
                        $(this).css(""background-color"", ""white"");
                    } else {
                        $(this).css(""background-color"", ""#31576d"");
                    }
                });
                //$('#example1').removeClass('dataTable');
                $('#example1').wrap(""<div class='scrolledTable'></div>"");
                document.getElementById(""loaderD"").style.display = 'none';

            }
        });

    }
   // -----------------------------------------------

    // Daily Gen Report Site WIse
    function GetDailyGenReportSiteWise() {
        var daterange = $('#daterange').val();
        var arr1 = new Array();
  ");
            WriteLiteral(@"      arr1 = daterange.split(""-"");
        var fromDate = moment(arr1[0], 'DD/MM/YYYY').format('YYYY-MM-DD');
        var toDate = moment(arr1[1], 'DD/MM/YYYY').format('YYYY-MM-DD');
        var country = $('select#country option:selected').val();
        let state = """";
        $('select#state option:selected').each(function () {
            state += $(this).val() + "","";
        });
        state = state != """" ? state.slice(0, -1) : state;
        console.log(""selected  states :"" + state);
        let spv = """";
        $('select#spv option:selected').each(function () {
            spv += $(this).val() + "","";
        });
        spv = spv != """" ? spv.slice(0, -1) : spv;
        let site = """";
        $('select#site option:selected').each(function () {
            site +=  $(this).val() + "","";
        });
        site = site != """" ? site.slice(0, -1) : site;


        let wtg = """";
        $('select#wtg option:selected').each(function () {
            wtg += $(this).val() + "","";
      ");
            WriteLiteral(@"  });
        wtg = wtg != """" ? wtg.slice(0, -1) : wtg;

        if (userRole == ""User"" && site == """") {
            site = windUserAccess;
        }

        var reportType = ""WTG"";
        var reporthead = ""Site Wise Report"";
        document.getElementById(""loaderD"").style.display = 'flex';
        $.ajax({
            type: ""GET"",
            url: '");
#nullable restore
#line 1164 "G:\solarproject\04092023\DGR_Main\DGRA\DGRA_V1\Views\Home\WindGenReport.cshtml"
             Write(Url.Action("GetWindDailyGenerationReportSiteWise", "WindReport"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"' + '?fromDate=' + fromDate + '&toDate=' + toDate + '&country=' + country + '&state=' + state + '&spv=' + spv + '&site=' + site + '&wtg=' + wtg + '&reportType=' + reportType,
            contentType: ""application/json; charset=utf-8"",
            datatype: ""JSON"",
            success: function (result, status, xhr) {
                //var tbl = '<div class=""text-center""><h5></h5></div>';
                var tbl = '<table id=""example1""  class=""table table-bordered table-striped"" style=""width: 160%;"">';
                tbl += '<thead class=""tbl-head""><tr>';
                tbl += '<th >Date</th>';
                tbl += '<th>Country</th>';
                tbl += '<th>State</th>';
                tbl += '<th>SPV</th>';
                tbl += '<th>Site</th>';
                tbl += '<th>Capacity<br>(MW)</th>';
                tbl += '<th>Wind<br>(m/s)</th>';
                tbl += '<th>kWh</th>';
                tbl += '<th>PLF<br>(%)</th>';
                tbl += '<th>MA_ACT<br>(%)</th>';
      ");
            WriteLiteral(@"          tbl += '<th>MA_CON<br>(%)</th>';
                tbl += '<th>IGA<br>(%)</th>';
                tbl += '<th>EGA_A<br>(%) <span class=""information"">i<span></th>';
                tbl += '<th>EGA_B<br>(%) <span class=""information"">i<span></th>';
                tbl += '<th>EGA_C<br>(%) <span class=""information"">i<span></th>';
                tbl += '<th>Gen_Hrs</th>';
                tbl += '<th>Lull_Hrs</th>';
                tbl += '<th>USMH</th>';
                tbl += '<th>SMH</th>';
                tbl += '<th>Others</th>';
                tbl += '<th>IGBDH</th>';
                tbl += '<th>EGBDH</th>';
                tbl += '<th>LS</th>';
                tbl += '<th>Total_BD</th>';

                tbl += '<th>USMH_Loss</th>';
                tbl += '<th>SMH_Loss</th>';
                tbl += '<th>Others_Loss</th>';
                tbl += '<th>IGBDH_Loss</th>';
                tbl += '<th>EGBDH_Loss</th>';
                tbl += '<th>LS_Loss</th>';
                tbl += '");
            WriteLiteral(@"<th>Total_Loss</th>';
                tbl += '</tr></thead>';

                if (result.length > 0) {
                    var total_losses = 0;
                    for (var i = 0; i < result.length; i++) {
                        //var formattedDate = moment(result[i].date, 'YYYY/MM/DD').format('DD-MM-YYYY');
                        total_losses = Math.abs(parseFloat(result[i].usmh_loss)) + Math.abs(parseFloat(result[i].smh_loss)) + Math.abs(parseFloat(result[i].others_loss)) + Math.abs(parseFloat(result[i].igbdh_loss)) + Math.abs(parseFloat(result[i].egbdh_loss)) + Math.abs(parseFloat(result[i].load_Shedding_loss));
                        tbl += '<tr>';
                        tbl += '<td class=""text-left"" style=""text-wrap: nowrap;"">' + result[i].date.split(""T"")[0].split(""-"").reverse().join(""-""); + '</td>';
                        tbl += '<td class=""text-left"">' + result[i].country + '</td>';
                        tbl += '<td class=""text-left"">' + result[i].state + '</td>';
                 ");
            WriteLiteral(@"       tbl += '<td class=""text-left"" style=""text-wrap: nowrap;"">' + result[i].spv + '</td>';
                        tbl += '<td class=""text-left"">' + result[i].site + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].total_mw.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].wind_speed.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].kwh.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].plf.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].ma_actual.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].ma_contractual.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].iga.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].ega.toFixed(2) + '</td>';
                        tbl += '<td class=""text-");
            WriteLiteral(@"right"">' + result[i].ega_b.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].ega_c.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].grid_hrs.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].lull_hrs.toFixed(2) + '</td>';
                        tbl += '<td  class=""text-right"">' + result[i].unschedule_num.toFixed(2) + '</td>';
                        tbl += '<td  class=""text-right"">' + result[i].schedule_num.toFixed(2) + '</td>';
                        tbl += '<td  class=""text-right"">' + result[i].others_num.toFixed(2) + '</td>';
                        tbl += '<td  class=""text-right"">' + result[i].igbdh_num.toFixed(2) + '</td>';
                        tbl += '<td  class=""text-right"">' + result[i].egbdh_num.toFixed(2) + '</td>';
                        tbl += '<td  class=""text-right"">' + result[i].load_shedding_num.toFixed(2) + '</td>';
                        tbl += '<td cla");
            WriteLiteral(@"ss=""text-right"">' + result[i].total_hrs.toFixed(2) + '</td>';

                        //tbl += '<td  class=""text-right"">' + result[i].usmh_loss.toFixed(2) + '</td>';
                        //tbl += '<td  class=""text-right"">' + result[i].smh_loss.toFixed(2) + '</td>';
                        //tbl += '<td  class=""text-right"">' + result[i].others_loss.toFixed(2) + '</td>';
                        //tbl += '<td  class=""text-right"">' + result[i].igbdh_loss.toFixed(2) + '</td>';
                        //tbl += '<td  class=""text-right"">' + result[i].egbdh_loss.toFixed(2) + '</td>';
                        //tbl += '<td  class=""text-right"">' + result[i].load_Shedding_loss.toFixed(2) + '</td>';
                        //tbl += '<td  class=""text-right"">' + result[i].total_loss.toFixed(2) + '</td>';

                        tbl += '<td  class=""text-right"">' + Math.abs(parseFloat(result[i].usmh_loss)).toFixed(2) + '</td>';
                        tbl += '<td  class=""text-right"">' + Math.abs(parseFloat(resu");
            WriteLiteral(@"lt[i].smh_loss)).toFixed(2) + '</td>';
                        tbl += '<td  class=""text-right"">' + Math.abs(parseFloat(result[i].others_loss)).toFixed(2) + '</td>';
                        tbl += '<td  class=""text-right"">' + Math.abs(parseFloat(result[i].igbdh_loss)).toFixed(2) + '</td>';
                        tbl += '<td  class=""text-right"">' + Math.abs(parseFloat(result[i].egbdh_loss)).toFixed(2) + '</td>';
                        tbl += '<td  class=""text-right"">' + Math.abs(parseFloat(result[i].load_Shedding_loss)).toFixed(2) + '</td>';
                        tbl += '<td  class=""text-right"">' + Math.abs(parseFloat(total_losses)).toFixed(2) + '</td>';

                        tbl += '</tr>';
                        console.log(typeof (result[i].usmh_loss));
                        console.log(Math.abs(parseFloat(result[i].usmh_loss)));
                        console.log(Math.abs(parseFloat(result[i].usmh_loss)).toFixed(2));
                    }
                }
                else {
   ");
            WriteLiteral(@"                 console.log(""Data not available"");

                }
                tbl += '</table>';
                $(""#reportsDaily"").html(tbl);
                $.fn.DataTable.ext.pager.numbers_length = 6;
                $('#example1').DataTable({
                    dom: 'Bfrtip',
                    title: 'ImportApproval',
                    responsive: false,
                    lengthChange: false,
                    autoWidth: true,
                    paging: true,
                    searching: true,
                    ordering: true,
                    info: true,
                    pageLength: 50,
                    ""order"": [[4, ""asc""]],
                    buttons: [
                        {
                            extend: 'excel',
                            title: 'Site Wise Daily Generation Report',
                            exportOptions: {
                                columns: ':visible'
                            }
                        },");
            WriteLiteral(@"
                        {
                            extend: 'csv',
                            title: 'Site Wise Daily Generation Report',
                            exportOptions: {
                                columns: ':visible'
                            }
                        },
                        'colvis'
                   ],
                   initComplete: function () {
                       this.api().columns().header().to$().each(function () {
                           //$(this).attr('title', 'title for ' + $(this).text())
                           if ($(this).text() == ""EGA_A(%) i"") {
                               $(this).attr('title', 'External Grid Breakdown, Shutdown & Load Shedding')
                           }
                           if ($(this).text() == ""EGA_B(%) i"") {
                               $(this).attr('title', 'External Grid Breakdown & Shutdown')
                           }
                           if ($(this).text() == ""EGA_C(%) i"") ");
            WriteLiteral(@"{
                               $(this).attr('title', 'Load Shedding')
                           }
                       })
                   }
                    /* ""buttons"": [
                         'copy', 'excel', 'csv', 'colvis'
                     ]*/
                });
                $("".dt-buttons"").addClass('btn-group flex-wrap');
                $("".dt-buttons > button"").addClass('btn btn-secondary');
                $("".dataTables_filter> label >input"").addClass('form-control form-control-sm');
                $(""dataTables_filter"").css(""margin-top"", ""-35px"");
                $(document).on(""click"", ""div.dt-button-collection > div > button"", function () {
                    if ($(this).hasClass(""active"")) {
                        $(this).css(""background-color"", ""white"");
                    } else {
                        $(this).css(""background-color"", ""#31576d"");
                    }
                });
                //$('#example1').removeClass('dataTable');");
            WriteLiteral(@"
                $('#example1').wrap(""<div class='scrolledTable'></div>"");
                document.getElementById(""loaderD"").style.display = 'none';

            }
        });
    }


   // -----------------------------------Monthly ---------------------//
    function GetMonthlyGenReport() {

       var ReportType = $(""input[name='monthly']:checked"").val();
        if (ReportType == ""WTG"") {
          GetMonthlyGenReportWTGWise();
        }
        else {
           GetMonthlyGenReportSiteWise();
        }
    }

    // Mothly Report WTG Wise
    function GetMonthlyGenReportWTGWise() {

        let site= """";
        let spv = """";
        let wtg = """";
        let state = """";

        $('select#siteM option:selected').each(function () {
            site += $(this).val() + "","";
        });
        site = site != """" ? site.slice(0, -1) : site;

        if(!site){
            $('select#stateM option:selected').each(function () {
                state +=  $(this).val() + "","";
");
            WriteLiteral(@"            });
            state = state != """" ? state.slice(0, -1) : state;

            $('select#spvM option:selected').each(function () {
                spv += $(this).val() + "","";
            });
            spv = spv != """" ? spv.slice(0, -1) : spv;

        }

        $('select#wtgM option:selected').each(function () {
            wtg +=  $(this).val() + "","";
        });
        wtg = wtg != """" ? wtg.slice(0, -1) : wtg;

        var country = $('select#countryM option:selected').val();
        var year = $('select#fyM option:selected').val();
        if (year == """") {
            alert(""Please select financial year"");
            return false;
        }
        let month = """";
        $('select#monthM option:selected').each(function () {

            month+= $(this).val()+"","";
        });
        month = month != """" ? month.slice(0, -1) : month;
        if (userRole == ""User"" && site == """") {
            site = windUserAccess;
        }

        var arr1 = new Array();
");
            WriteLiteral(@"        arr1 = year.split(""-"");
        var fromDate = """";

        var reportType = ""WTG"";
        var reporthead = ""WTG Wise Report"";
        document.getElementById(""loaderM"").style.display = 'flex';
        $.ajax({
            type: ""GET"",
            url: '");
#nullable restore
#line 1400 "G:\solarproject\04092023\DGR_Main\DGRA\DGRA_V1\Views\Home\WindGenReport.cshtml"
             Write(Url.Action("GetWindMonthlyGenerationReportWTGWise", "WindReport"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"' + '?fy=' + arr1[0] + '&month=' + month + '&country=' + country + '&state=' + state + '&spv=' + spv + '&site=' + site + '&wtg=' + wtg + '&reportType=' + reportType,
            contentType: ""application/json; charset=utf-8"",
            datatype: ""JSON"",
            success: function (result, status, xhr) {

                //var tbl = '<div class=""text-center""><h5></h5></div>';
                var tbl = '<table id=""example2""  class=""table table-bordered table-striped"" style=""width: 160%;"">';
                tbl += '<thead class=""tbl-head""><tr>';
                tbl += '<th style=""width: 10%;"">FY</th>';
                tbl += '<th>Month</th>';
                tbl += '<th>Country</th>';
                tbl += '<th>State</th>';
                tbl += '<th>SPV</th>';
                tbl += '<th>Site</th>';
                tbl += '<th>WTG</th>';
                tbl += '<th>Wind<br>(m/s)</th>';
                tbl += '<th>kWh</th>';
                tbl += '<th>PLF<br>(%)</th>';
                t");
            WriteLiteral(@"bl += '<th>MA_ACT<br>(%)</th>';
                tbl += '<th>MA_CON<br>(%)</th>';
                tbl += '<th>IGA<br>(%)</th>';
                tbl += '<th>EGA_A<br>(%) <span class=""information"">i<span></th>';
                tbl += '<th>EGA_B<br>(%) <span class=""information"">i<span></th>';
                tbl += '<th>EGA_C<br>(%) <span class=""information"">i<span></th>';
                tbl += '<th>Gen_Hrs</th>';
                tbl += '<th>Lull_Hrs</th>';
                tbl += '<th>USMH</th>';
                tbl += '<th>SMH</th>';
                tbl += '<th>Others</th>';
                tbl += '<th>IGBDH</th>';
                tbl += '<th>EGBDH</th>';
                tbl += '<th>LS</th>';
                tbl += '<th>Total_BD</th>';

                tbl += '<th>USMH_Loss</th>';
                tbl += '<th>SMH_Loss</th>';
                tbl += '<th>Others_Loss</th>';
                tbl += '<th>IGBDH_Loss</th>';
                tbl += '<th>EGBDH_Loss</th>';
                tbl += '<th>L");
            WriteLiteral(@"S_Loss</th>';
                tbl += '<th>Total_Loss</th>';
                tbl += '</tr></thead>';
                var total_losses = 0;
                if (result.length > 0) {
                    for (var i = 0; i < result.length; i++) {
                        total_losses = Math.abs(parseFloat(result[i].usmh_loss)) + Math.abs(parseFloat(result[i].smh_loss)) + Math.abs(parseFloat(result[i].others_loss)) + Math.abs(parseFloat(result[i].igbdh_loss)) + Math.abs(parseFloat(result[i].egbdh_loss)) + Math.abs(parseFloat(result[i].load_Shedding_loss));
                        //var formattedDate = moment(result[i].date, 'YYYY/MM/DD').format('DD-MM-YYYY');
                        tbl += '<tr>';
                        tbl += '<td class=""text-left"">' + year + '</td>';
                        tbl += '<td class=""text-left"">' + result[i].month + '</td>';
                        tbl += '<td class=""text-left"">' + result[i].country + '</td>';
                        tbl += '<td class=""text-left"">' + result[i]");
            WriteLiteral(@".state + '</td>';
                        tbl += '<td class=""text-left"" style=""text-wrap: nowrap;"">' + result[i].spv + '</td>';
                        tbl += '<td class=""text-left"">' + result[i].site + '</td>';
                        tbl += '<td class=""text-left"">' + result[i].wtg + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].wind_speed.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].kwh.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].plf.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].ma_actual.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].ma_contractual.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].iga.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].ega.toFixed(2) + '</td>';
                        tbl +");
            WriteLiteral(@"= '<td class=""text-right"">' + result[i].ega_b.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].ega_c.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].grid_hrs.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].lull_hrs.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].unschedule_hrs.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].schedule_hrs.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].others.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].igbdh.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].egbdh.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].load_shedding.toFixed(2) + '</td>';
                        tbl += '<td class=");
            WriteLiteral(@"""text-right"">' + result[i].total_hrs.toFixed(2) + '</td>';

                        //tbl += '<td  class=""text-right"">' + result[i].usmh_loss.toFixed(2) + '</td>';
                        //tbl += '<td  class=""text-right"">' + result[i].smh_loss.toFixed(2) + '</td>';
                        //tbl += '<td  class=""text-right"">' + result[i].others_loss.toFixed(2) + '</td>';
                        //tbl += '<td  class=""text-right"">' + result[i].igbdh_loss.toFixed(2) + '</td>';
                        //tbl += '<td  class=""text-right"">' + result[i].egbdh_loss.toFixed(2) + '</td>';
                        //tbl += '<td  class=""text-right"">' + result[i].load_Shedding_loss.toFixed(2) + '</td>';
                        //tbl += '<td  class=""text-right"">' + result[i].total_loss.toFixed(2) + '</td>';

                        tbl += '<td  class=""text-right"">' + Math.abs(parseFloat(result[i].usmh_loss)).toFixed(2) + '</td>';
                        tbl += '<td  class=""text-right"">' + Math.abs(parseFloat(result[");
            WriteLiteral(@"i].smh_loss)).toFixed(2) + '</td>';
                        tbl += '<td  class=""text-right"">' + Math.abs(parseFloat(result[i].others_loss)).toFixed(2) + '</td>';
                        tbl += '<td  class=""text-right"">' + Math.abs(parseFloat(result[i].igbdh_loss)).toFixed(2) + '</td>';
                        tbl += '<td  class=""text-right"">' + Math.abs(parseFloat(result[i].egbdh_loss)).toFixed(2) + '</td>';
                        tbl += '<td  class=""text-right"">' + Math.abs(parseFloat(result[i].load_Shedding_loss)).toFixed(2) + '</td>';
                        tbl += '<td  class=""text-right"">' + Math.abs(parseFloat(total_losses)).toFixed(2) + '</td>';
                        tbl += '</tr>';
                    }
                }
                else {
                    console.log(""Data not available"");
                    // tbl += '<tr><th colspan=""12"" style=""text-align:center"">Data Not Available <th></tr>';
                }
               tbl += '</table>';
                $(""#reportsMo");
            WriteLiteral(@"nthly"").html(tbl);
                $.fn.DataTable.ext.pager.numbers_length = 6;
                $('#example2').DataTable({
                    dom: 'Bfrtip',
                    title: 'ImportApproval',
                    responsive: false,
                    lengthChange: false,
                    autoWidth: true,
                    paging: true,
                    searching: true,
                    ordering: true,
                    info: true,
                    autoWidth: true,
                    pageLength: 50,
                    ""order"": [[5, ""asc""]],
                    buttons: [
                        {
                            extend: 'excel',
                            title: 'WTG Wise Monthly Generation Report',
                            exportOptions: {
                                columns: ':visible'
                            }
                        },
                        {
                            extend: 'csv',
                          ");
            WriteLiteral(@"  title: 'WTG Wise Monthly Generation Report',
                            exportOptions: {
                                columns: ':visible'
                            }
                        },
                        'colvis'
                    ],
                    initComplete: function () {
                        this.api().columns().header().to$().each(function () {
                            //$(this).attr('title', 'title for ' + $(this).text())
                            if ($(this).text() == ""EGA_A(%) i"") {
                                $(this).attr('title', 'External Grid Breakdown, Shutdown & Load Shedding')
                            }
                            if ($(this).text() == ""EGA_B(%) i"") {
                                $(this).attr('title', 'External Grid Breakdown & Shutdown')
                            }
                            if ($(this).text() == ""EGA_C(%) i"") {
                                $(this).attr('title', 'Load Shedding')
           ");
            WriteLiteral(@"                 }
                        })
                    }
                    /* ""buttons"": [
                         'copy', 'excel', 'csv', 'colvis'
                     ]*/
                });
                $("".dt-buttons"").addClass('btn-group flex-wrap');
                $("".dt-buttons > button"").addClass('btn btn-secondary');
                $("".dataTables_filter> label >input"").addClass('form-control form-control-sm');
                $(document).on(""click"", ""div.dt-button-collection > div > button"", function () {
                    if ($(this).hasClass(""active"")) {
                        $(this).css(""background-color"", ""white"");
                    } else {
                        $(this).css(""background-color"", ""#31576d"");
                    }
                });
                //$('#example2').removeClass('dataTable');
                $('#example2').wrap(""<div class='scrolledTable'></div>"");
                document.getElementById(""loaderM"").style.display = 'none';");
            WriteLiteral(@"
            }
        });

    }
    //------------------------------------
    // Mothly Report SIte Wise
    function GetMonthlyGenReportSiteWise() {
         let site= """";
        let spv = """";
        let wtg = """";
        let state = """";

        $('select#siteM option:selected').each(function () {
            site += $(this).val() + "","";
        });
        site = site != """" ? site.slice(0, -1) : site;

        if(!site){
            $('select#stateM option:selected').each(function () {
                state +=  $(this).val() + "","";
             });
            state = state != """" ? state.slice(0, -1) : state;

            $('select#spvM option:selected').each(function () {
                spv += $(this).val() + "","";
            });
            spv = spv != """" ? spv.slice(0, -1) : spv;
        }

        $('select#wtgM option:selected').each(function () {
            wtg +=  $(this).val() + "","";
          });
        wtg = wtg != """" ? wtg.slice(0, -1) : wtg;

        ");
            WriteLiteral(@"var country = $('select#countryM option:selected').val();
        var fyyear = $('select#fyM option:selected').val();
        if (fyyear == """") {
            alert(""Please select financial year"");
            return false;
        }
        let month = """";
        $('select#monthM option:selected').each(function () {

            month+= $(this).val()+"","";
        });
        month = month != """" ? month.slice(0, -1) : month;
        if (userRole == ""User"" && site == """") {
            site = windUserAccess;
        }

        var arr1 = new Array();
        arr1 = fyyear.split(""-"");
        var fromDate = """";
        var reportType = ""WTG"";
        var reporthead = ""WTG Wise Report"";
        var cnt = 0;
        document.getElementById(""loaderM"").style.display = 'flex';
        $.ajax({
            type: ""GET"",
            url: '");
#nullable restore
#line 1619 "G:\solarproject\04092023\DGR_Main\DGRA\DGRA_V1\Views\Home\WindGenReport.cshtml"
             Write(Url.Action("GetWindMonthlyGenerationReportSiteWise", "WindReport"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"' + '?fy=' + arr1[0] + '&month=' + month + '&country=' + country + '&state=' + state + '&spv=' + spv + '&site=' + site + '&wtg=' + wtg + '&reportType=' + reportType,
            contentType: ""application/json; charset=utf-8"",
            datatype: ""JSON"",
            success: function (result, status, xhr) {

                //var tbl = '<div class=""text-center""><h5></h5></div>';
                var tbl = '<table id=""example2""  class=""table table-bordered table-striped"" style=""width: 160%;"">';
                tbl += '<thead class=""tbl-head""><tr>';
                tbl += '<th style=""width: 10%"">FY</th>';
                tbl += '<th>Month</th>';
                tbl += '<th>Country</th>';
                tbl += '<th>State</th>';
                tbl += '<th>SPV</th>';
                tbl += '<th>Site</th>';
                tbl += '<th>Capacity<br>(MW)</th>';
                tbl += '<th>Wind<br>(m/s)</th>';
                tbl += '<th>kWh</th>';
                tbl += '<th>PLF<br>(%)</th>';
     ");
            WriteLiteral(@"           tbl += '<th>MA_ACT<br>(%)</th>';
                tbl += '<th>MA_CON<br>(%)</th>';
                tbl += '<th>IGA<br>(%)</th>';
                tbl += '<th>EGA_A<br>(%) <span class=""information"">i<span></th>';
                tbl += '<th>EGA_B<br>(%) <span class=""information"">i<span></th>';
                tbl += '<th>EGA_C<br>(%) <span class=""information"">i<span></th>';
                tbl += '<th>Gen_Hrs</th>';
                tbl += '<th>Lull_Hrs</th>';
                tbl += '<th>USMH</th>';
                tbl += '<th>SMH</th>';
                tbl += '<th>Others</th>';
                tbl += '<th>IGBDH</th>';
                tbl += '<th>EGBDH</th>';
                tbl += '<th>Load_Shedding</th>';
                tbl += '<th>Total_BD</th>';
                tbl += '<th>USMH_Loss</th>';
                tbl += '<th>SMH_Loss</th>';
                tbl += '<th>Others_Loss</th>';
                tbl += '<th>IGBDH_Loss</th>';
                tbl += '<th>EGBDH_Loss</th>';
        ");
            WriteLiteral(@"        tbl += '<th>LS_Loss</th>';
                tbl += '<th>Total_Loss</th>';
                tbl += '</tr></thead>';
                var  total_losses = 0;
                if (result.length > 0) {
                    for (var i = 0; i < result.length; i++) {
                        total_losses = Math.abs(parseFloat(result[i].usmh_loss)) + Math.abs(parseFloat(result[i].smh_loss)) + Math.abs(parseFloat(result[i].others_loss)) + Math.abs(parseFloat(result[i].igbdh_loss)) + Math.abs(parseFloat(result[i].egbdh_loss)) + Math.abs(parseFloat(result[i].load_Shedding_loss));
                        cnt++;
                        //var formattedDate = moment(result[i].date, 'YYYY/MM/DD').format('DD-MM-YYYY');
                        tbl += '<tr>';
                        tbl += '<td class=""text-left"">' + fyyear + '</td>';
                        tbl += '<td class=""text-left"">' + result[i].month + '</td>';
                        tbl += '<td class=""text-left"">' + result[i].country + '</td>';
           ");
            WriteLiteral(@"             tbl += '<td class=""text-left"">' + result[i].state + '</td>';
                        tbl += '<td class=""text-left"" style=""text-wrap: nowrap;"">' + result[i].spv + '</td>';
                        tbl += '<td class=""text-left"">' + result[i].site + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].total_mw.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].wind_speed.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].kwh.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].plf.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].ma_actual.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].ma_contractual.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].iga.toFixed(2) + '</td>';
                        tbl += '<td class=""text-righ");
            WriteLiteral(@"t"">' + result[i].ega.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].ega_b.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].ega_c.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].grid_hrs.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].lull_hrs.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].unschedule_hrs.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].schedule_hrs.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].others.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].igbdh.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].egbdh.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].load_s");
            WriteLiteral(@"hedding.toFixed(2) + '</td>';
                       tbl += '<td class=""text-right"">' + result[i].total_hrs.toFixed(2) + '</td>';

                       // tbl += '<td  class=""text-right"">' + result[i].usmh_loss.toFixed(2) + '</td>';
                       // tbl += '<td  class=""text-right"">' + result[i].smh_loss.toFixed(2) + '</td>';
                       // tbl += '<td  class=""text-right"">' + result[i].others_loss.toFixed(2) + '</td>';
                       // tbl += '<td  class=""text-right"">' + result[i].igbdh_loss.toFixed(2) + '</td>';
                       // tbl += '<td  class=""text-right"">' + result[i].egbdh_loss.toFixed(2) + '</td>';
                       //tbl += '<td  class=""text-right"">' + result[i].load_Shedding_loss.toFixed(2) + '</td>';
                       //tbl += '<td  class=""text-right"">' + result[i].total_loss.toFixed(2) + '</td>';

                        tbl += '<td  class=""text-right"">' + Math.abs(parseFloat(result[i].usmh_loss)).toFixed(2) + '</td>';
                 ");
            WriteLiteral(@"       tbl += '<td  class=""text-right"">' + Math.abs(parseFloat(result[i].smh_loss)).toFixed(2) + '</td>';
                        tbl += '<td  class=""text-right"">' + Math.abs(parseFloat(result[i].others_loss)).toFixed(2) + '</td>';
                        tbl += '<td  class=""text-right"">' + Math.abs(parseFloat(result[i].igbdh_loss)).toFixed(2) + '</td>';
                        tbl += '<td  class=""text-right"">' + Math.abs(parseFloat(result[i].egbdh_loss)).toFixed(2) + '</td>';
                        tbl += '<td  class=""text-right"">' + Math.abs(parseFloat(result[i].load_Shedding_loss)).toFixed(2) + '</td>';
                        tbl += '<td  class=""text-right"">' + Math.abs(parseFloat(result[i].total_losses)).toFixed(2) + '</td>';
                        tbl += '</tr>';
                    }
                }
                else {
                    console.log(""Data not available"");

                }
                tbl += '</table>';
                $(""#reportsMonthly"").html(tbl);
       ");
            WriteLiteral(@"         $.fn.DataTable.ext.pager.numbers_length = 6;
                $('#example2').DataTable({
                    dom: 'Bfrtip',
                    title: 'ImportApproval',
                    responsive: false,
                    lengthChange: false,
                    autoWidth: true,
                    paging: true,
                    searching: true,
                    ordering: true,
                    info: true,
                    autoWidth: true,
                    pageLength: 50,
                    ""order"": [[5, ""asc""]],
                    buttons: [
                        {
                            extend: 'excel',
                            title: 'Site Wise Monthly Generation Report',
                            exportOptions: {
                                columns: ':visible',
                                exportOptions: {
                                    rows: { selected: false, search: 'none', order: 'applied', page: 'all', range: ''+ cnt +'' }
 ");
            WriteLiteral(@"                               }
                            }
                        },
                        {
                            extend: 'csv',
                           title: 'Site Wise Monthly Generation Report',
                            exportOptions: {
                                columns: ':visible'
                            }
                        },
                        'colvis'
                    ],
                    initComplete: function () {
                        this.api().columns().header().to$().each(function () {
                            //$(this).attr('title', 'title for ' + $(this).text())
                            if ($(this).text() == ""EGA_A(%) i"") {
                                $(this).attr('title', 'External Grid Breakdown, Shutdown & Load Shedding')
                            }
                            if ($(this).text() == ""EGA_B(%) i"") {
                                $(this).attr('title', 'External Grid Breakdown & Shu");
            WriteLiteral(@"tdown')
                            }
                            if ($(this).text() == ""EGA_C(%) i"") {
                                $(this).attr('title', 'Load Shedding')
                            }
                        })
                    }
                    /* ""buttons"": [
                         'copy', 'excel', 'csv', 'colvis'
                     ]*/
                });
                $("".dt-buttons"").addClass('btn-group flex-wrap');
                $("".dt-buttons > button"").addClass('btn btn-secondary');
                $("".dataTables_filter> label >input"").addClass('form-control form-control-sm');
                $(document).on(""click"", ""div.dt-button-collection > div > button"", function () {
                    if ($(this).hasClass(""active"")) {
                        $(this).css(""background-color"", ""white"");
                    } else {
                        $(this).css(""background-color"", ""#31576d"");
                    }
                });
                //$");
            WriteLiteral(@"('#example2').removeClass('dataTable');
                $('#example2').wrap(""<div class='scrolledTable'></div>"");
                document.getElementById(""loaderM"").style.display = 'none';
            }
        });

    }

    // -----------------------------------Yearly ---------------------//
    function GetYearlyGenReport() {

        var ReportType = $(""input[name='yearly']:checked"").val();
        if (ReportType == ""WTG"") {
            GetYearlyGenReportWTGWise();
        }
        else {
            GetYearlyGenReportSiteWise();
        }
    }

    // Yearly WTG Wise
    function GetYearlyGenReportWTGWise() {
        var country = $('select#countryY option:selected').val();
        let site = """";
        let spv = """";
        let wtg = """";
        let state = """";

        $('select#siteY option:selected').each(function () {
            site += $(this).val() + "","";
        });
        site = site != """" ? site.slice(0, -1) : site;

        if (!site) {
            $('se");
            WriteLiteral(@"lect#stateY option:selected').each(function () {
                state += $(this).val() + "","";
            });
            state = state != """" ? state.slice(0, -1) : state;

            $('select#spvY option:selected').each(function () {
                spv += $(this).val() + "","";
           });
            spv = spv != """" ? spv.slice(0, -1) : spv;

        }

        $('select#wtgY option:selected').each(function () {
            wtg += $(this).val() + "","";
        });
        wtg = wtg != """" ? wtg.slice(0, -1) : wtg;

        var fyyear = $('select#fyY option:selected').val();
        if (fyyear == """") {
            alert(""Please select financial year"");
            return false;
        }
        //var month = $('select#monthM option:selected').val();
        var arr1 = new Array();
        arr1 = fyyear.split(""-"");
        if (userRole == ""User"" && site == """") {
            site = windUserAccess;
        }

        var fromDate = """";
        var toDate = """";
        if (fyye");
            WriteLiteral(@"ar) {
            fromDate = arr1[0] + '-04-01';
            toDate = '20' + arr1[1] + '-03-31';
        }
        var reportType = ""WTG"";
        var reporthead = ""WTG Wise Report"";
        document.getElementById(""loaderY"").style.display = 'flex';

        $.ajax({
            type: ""GET"",
            url: '");
#nullable restore
#line 1854 "G:\solarproject\04092023\DGR_Main\DGRA\DGRA_V1\Views\Home\WindGenReport.cshtml"
             Write(Url.Action("GetWindYearlyGenerationReportWTGWise", "WindReport"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"' + '?fromDate=' + fromDate + '&toDate=' + toDate + '&country=' + country + '&state=' + state + '&spv=' + spv + '&site=' + site + '&wtg=' + wtg + '&reportType=' + reportType,
            contentType: ""application/json; charset=utf-8"",
            datatype: ""JSON"",
            success: function (result, status, xhr) {

               // var tbl = '<div class=""text-center""><h5></h5></div>';
                var tbl = '<table id=""example3""  class=""table table-bordered table-striped"" style=""width: 160%;"">';
                tbl += '<thead class=""tbl-head""><tr>';
                tbl += '<th style=""width: 10%;"">FY</th>';
                tbl += '<th>Country</th>';
                tbl += '<th>State</th>';
                tbl += '<th>SPV</th>';
                tbl += '<th>Site</th>';
                tbl += '<th>WTG</th>';
                tbl += '<th>Wind<br>(m/s)</th>';
                tbl += '<th>kWh</th>';
                tbl += '<th>PLF<br>(%)</th>';
                tbl += '<th>MA_ACT<br>(%)</th>';
");
            WriteLiteral(@"                tbl += '<th>MA_CON<br>(%)</th>';
                tbl += '<th>IGA<br>(%)</th>';
                tbl += '<th>EGA_A<br>(%) <span class=""information"">i<span></th>';
                tbl += '<th>EGA_B<br>(%) <span class=""information"">i<span></th>';
                tbl += '<th>EGA_C<br>(%) <span class=""information"">i<span></th>';
                tbl += '<th>Gen_Hrs</th>';
                tbl += '<th>Lull_Hrs</th>';
                tbl += '<th>USMH</th>';
                tbl += '<th>SMH</th>';
                tbl += '<th>Others</th>';
                tbl += '<th>IGBDH</th>';
                tbl += '<th>EGBDH</th>';
                tbl += '<th>LS</th>';
                tbl += '<th>Total BD</th>';

                tbl += '<th>USMH_Loss</th>';
                tbl += '<th>SMH_Loss</th>';
                tbl += '<th>Others_Loss</th>';
                tbl += '<th>IGBDH_Loss</th>';
                tbl += '<th>EGBDH_Loss</th>';
                tbl += '<th>LS_Loss</th>';
                tb");
            WriteLiteral(@"l += '<th>Total_Loss</th>';
                tbl += '</tr></thead>';

                var total_losses = 0;
                if (result.length > 0) {

                    for (var i = 0; i < result.length; i++) {
                       // var formattedDate = moment(result[i].date, 'YYYY/MM/DD').format('DD-MM-YYYY');

                        total_losses = Math.abs(parseFloat(result[i].usmh_loss)) + Math.abs(parseFloat(result[i].smh_loss)) + Math.abs(parseFloat(result[i].others_loss)) + Math.abs(parseFloat(result[i].igbdh_loss)) + Math.abs(parseFloat(result[i].egbdh_loss)) + Math.abs(parseFloat(result[i].load_Shedding_loss));
                        tbl += '<tr>';
                        tbl += '<td class=""text-left"">' + fyyear  + '</td>';
                        tbl += '<td class=""text-left"">' + result[i].country + '</td>';
                        tbl += '<td class=""text-left"">' + result[i].state + '</td>';
                        tbl += '<td class=""text-left"" style=""text-wrap: nowrap;"">' + result");
            WriteLiteral(@"[i].spv + '</td>';
                        tbl += '<td class=""text-left"">' + result[i].site + '</td>';
                        tbl += '<td class=""text-left"">' + result[i].wtg + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].wind_speed.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].kwh.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].plf.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].ma_actual.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].ma_contractual.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].iga.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].ega.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].ega_b.toFixed(2) + '</td>';
                        tbl += '<td class");
            WriteLiteral(@"=""text-right"">' + result[i].ega_c.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].grid_hrs.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].lull_hrs.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].unschedule_hrs.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].schedule_hrs.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].others.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].igbdh.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].egbdh.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].load_shedding.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].total_hrs.toFixed(2) + '</td>';

                        //tbl += '<td  class=""te");
            WriteLiteral(@"xt-right"">' + result[i].usmh_loss.toFixed(2) + '</td>';
                        //tbl += '<td  class=""text-right"">' + result[i].smh_loss.toFixed(2) + '</td>';
                        //tbl += '<td  class=""text-right"">' + result[i].others_loss.toFixed(2) + '</td>';
                        //tbl += '<td  class=""text-right"">' + result[i].igbdh_loss.toFixed(2) + '</td>';
                        //tbl += '<td  class=""text-right"">' + result[i].egbdh_loss.toFixed(2) + '</td>';
                        //tbl += '<td  class=""text-right"">' + result[i].load_Shedding_loss.toFixed(2) + '</td>';
                        //tbl += '<td  class=""text-right"">' + result[i].total_loss.toFixed(2) + '</td>';

                        tbl += '<td  class=""text-right"">' + Math.abs(parseFloat(result[i].usmh_loss)).toFixed(2) + '</td>';
                        tbl += '<td  class=""text-right"">' + Math.abs(parseFloat(result[i].smh_loss)).toFixed(2) + '</td>';
                        tbl += '<td  class=""text-right"">' + Math.abs(pars");
            WriteLiteral(@"eFloat(result[i].others_loss)).toFixed(2) + '</td>';
                        tbl += '<td  class=""text-right"">' + Math.abs(parseFloat(result[i].igbdh_loss)).toFixed(2) + '</td>';
                        tbl += '<td  class=""text-right"">' + Math.abs(parseFloat(result[i].egbdh_loss)).toFixed(2) + '</td>';
                        tbl += '<td  class=""text-right"">' + Math.abs(parseFloat(result[i].load_Shedding_loss)).toFixed(2) + '</td>';
                        tbl += '<td  class=""text-right"">' + Math.abs(parseFloat(total_losses)).toFixed(2) + '</td>';
                        tbl += '</tr>';
                    }
                }
                else {
                    console.log(""Data not available"");
                    // tbl += '<tr><th colspan=""12"" style=""text-align:center"">Data Not Available <th></tr>';
                }
                tbl += '</table>';
                $(""#reportsYearly"").html(tbl);
                $.fn.DataTable.ext.pager.numbers_length = 6;
                $('#example3");
            WriteLiteral(@"').DataTable({
                    dom: 'Bfrtip',
                    title: 'ImportApproval',
                    responsive: false,
                    lengthChange: false,
                    autoWidth: true,
                    paging: true,
                    searching: true,
                    ordering: true,
                    info: true,
                    autoWidth: true,
                    pageLength: 50,
                    ""order"": [[4, ""asc""]],
                    buttons: [
                        {
                            extend: 'excel',
                            title: 'WTG Wise Yearly Generation Report',
                            exportOptions: {
                                columns: ':visible'
                            }
                        },
                        {
                            extend: 'csv',
                            title: 'WTG Wise Yearly Generation Report',
                            exportOptions: {
                  ");
            WriteLiteral(@"              columns: ':visible'
                            }
                        },
                        'colvis'
                    ],
                    initComplete: function () {
                        this.api().columns().header().to$().each(function () {
                            //$(this).attr('title', 'title for ' + $(this).text())
                            if ($(this).text() == ""EGA_A(%) i"") {
                                $(this).attr('title', 'External Grid Breakdown, Shutdown & Load Shedding')
                            }
                            if ($(this).text() == ""EGA_B(%) i"") {
                                $(this).attr('title', 'External Grid Breakdown & Shutdown')
                            }
                            if ($(this).text() == ""EGA_C(%) i"") {
                                $(this).attr('title', 'Load Shedding')
                            }
                        })
                    }
                    /* ""buttons"": [
    ");
            WriteLiteral(@"                     'copy', 'excel', 'csv', 'colvis'
                     ]*/
                });
                $("".dt-buttons"").addClass('btn-group flex-wrap');
                $("".dt-buttons > button"").addClass('btn btn-secondary');
                $("".dataTables_filter> label >input"").addClass('form-control form-control-sm');
                $(document).on(""click"", ""div.dt-button-collection > div > button"", function () {
                    if ($(this).hasClass(""active"")) {
                        $(this).css(""background-color"", ""white"");
                    } else {
                        $(this).css(""background-color"", ""#31576d"");
                    }
                });
                //$('#example3').removeClass('dataTable');
                $('#example3').wrap(""<div class='scrolledTable'></div>"");
                document.getElementById(""loaderY"").style.display = 'none';
            }
        });

    }

    // Yearly SIte Wise
    function GetYearlyGenReportSiteWise() {
 ");
            WriteLiteral(@"       var country = $('select#countryY option:selected').val();
        let site = """";
        let spv = """";
        let wtg = """";
        let state = """";

        $('select#siteY option:selected').each(function () {
            site += $(this).val() + "","";
        });
        site = site != """" ? site.slice(0, -1) : site;

        if (!site) {
            $('select#stateY option:selected').each(function () {
                state += $(this).val() + "","";
            });
            state = state != """" ? state.slice(0, -1) : state;

            $('select#spvY option:selected').each(function () {
                spv += $(this).val() + "","";

            });
            spv = spv != """" ? spv.slice(0, -1) : spv;

        }

        $('select#wtgY option:selected').each(function () {
            wtg += $(this).val() + "","";

        });
        wtg = wtg != """" ? wtg.slice(0, -1) : wtg;

        var fyyear = $('select#fyY option:selected').val();
        //var month = $('select#monthM ");
            WriteLiteral(@"option:selected').val();
        if (userRole == ""User"" && site == """") {
            site = windUserAccess;
        }
        if (fyyear == """") {
            alert(""Please select financial year"");
            return false;
        }
        var arr1 = new Array();
        arr1 = fyyear.split(""-"");
        var fromDate = """";
        fromDate = arr1[0] + '-04-01';
        toDate = '20' + arr1[1] + '-03-31';

        var reportType = ""Site"";
        var reporthead = ""Site Wise Report"";
        document.getElementById(""loaderY"").style.display = 'flex';
        $.ajax({
            type: ""GET"",
            url: '");
#nullable restore
#line 2073 "G:\solarproject\04092023\DGR_Main\DGRA\DGRA_V1\Views\Home\WindGenReport.cshtml"
             Write(Url.Action("GetWindYearlyGenerationReportSiteWise", "WindReport"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"' + '?fromDate=' + fromDate + '&toDate=' + toDate + '&country=' + country + '&state=' + state + '&spv=' + spv + '&site=' + site + '&wtg=' + wtg + '&reportType=' + reportType,
            contentType: ""application/json; charset=utf-8"",
            datatype: ""JSON"",
            success: function (result, status, xhr) {

                //var tbl = '<div class=""text-center""><h5></h5></div>';
                var tbl = '<table id=""example3""  class=""table table-bordered table-striped"" style=""width: 160%;"">';
                tbl += '<thead class=""tbl-head""><tr>';
                tbl += '<th style=""width: 10%"">FY</th>';
                tbl += '<th>Country</th>';
                tbl += '<th>State</th>';
                tbl += '<th>SPV</th>';
                tbl += '<th>Site</th>';
                tbl += '<th>Capacity<br>(MW)</th>';
                tbl += '<th>Wind<br>(m/s)</th>';
                tbl += '<th>kWh</th>';
                tbl += '<th>PLF<br>(%)</th>';
                tbl += '<th>MA_ACT<br>");
            WriteLiteral(@"(%)</th>';
                tbl += '<th>MA_CON<br>(%)</th>';
                tbl += '<th>IGA<br>(%)</th>';
                tbl += '<th>EGA_A<br>(%) <span class=""information"">i<span></th>';
                tbl += '<th>EGA_B<br>(%) <span class=""information"">i<span></th>';
                tbl += '<th>EGA_C<br>(%) <span class=""information"">i<span></th>';
                tbl += '<th>Gen_Hrs</th>';
                tbl += '<th>Lull_Hrs</th>';
                tbl += '<th>USMH</th>';
                tbl += '<th>SMH</th>';
                tbl += '<th>Others</th>';
                tbl += '<th>IGBDH</th>';
                tbl += '<th>EGBDH</th>';
                tbl += '<th>LS</th>';
                tbl += '<th>Total_BD</th>';

                tbl += '<th>USMH_Loss</th>';
                tbl += '<th>SMH_Loss</th>';
                tbl += '<th>Others_Loss</th>';
                tbl += '<th>IGBDH_Loss</th>';
                tbl += '<th>EGBDH_Loss</th>';
                tbl += '<th>LS_Loss</th>';
      ");
            WriteLiteral(@"          tbl += '<th>Total_Loss</th>';
                tbl += '</tr></thead>';
                var total_losses = 0;
                if (result.length > 0) {

                    for (var i = 0; i < result.length; i++) {

                        total_losses = Math.abs(parseFloat(result[i].usmh_loss)) + Math.abs(parseFloat(result[i].smh_loss)) + Math.abs(parseFloat(result[i].others_loss)) + Math.abs(parseFloat(result[i].igbdh_loss)) + Math.abs(parseFloat(result[i].egbdh_loss)) + Math.abs(parseFloat(result[i].load_Shedding_loss));
                        // var formattedDate = moment(result[i].date, 'YYYY/MM/DD').format('DD-MM-YYYY');
                        tbl += '<tr>';
                        tbl += '<td class=""text-left"">' + fyyear + '</td>';
                        tbl += '<td class=""text-left"">' + result[i].country + '</td>';
                        tbl += '<td class=""text-left"">' + result[i].state + '</td>';
                        tbl += '<td class=""text-left"" style=""text-wrap: nowrap;"">");
            WriteLiteral(@"' + result[i].spv + '</td>';
                        tbl += '<td class=""text-left"">' + result[i].site + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].total_mw.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].wind_speed.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].kwh.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].plf.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].ma_actual.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].ma_contractual.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].iga.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].ega.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].ega_b.toFixed(2) + '</td>';
              ");
            WriteLiteral(@"          tbl += '<td class=""text-right"">' + result[i].ega_c.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].grid_hrs.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].lull_hrs.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].unschedule_hrs.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].schedule_hrs.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].others.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].igbdh.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].egbdh.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].load_shedding.toFixed(2) + '</td>';
                        tbl += '<td class=""text-right"">' + result[i].total_hrs.toFixed(2) + '</td>';

                     ");
            WriteLiteral(@"   //tbl += '<td  class=""text-right"">' + result[i].usmh_loss.toFixed(2) + '</td>';
                        //tbl += '<td  class=""text-right"">' + result[i].smh_loss.toFixed(2) + '</td>';
                        //tbl += '<td  class=""text-right"">' + result[i].others_loss.toFixed(2) + '</td>';
                        //tbl += '<td  class=""text-right"">' + result[i].igbdh_loss.toFixed(2) + '</td>';
                        //tbl += '<td  class=""text-right"">' + result[i].egbdh_loss.toFixed(2) + '</td>';
                        //tbl += '<td  class=""text-right"">' + result[i].load_Shedding_loss.toFixed(2) + '</td>';
                        //tbl += '<td  class=""text-right"">' + result[i].total_loss.toFixed(2) + '</td>';

                        tbl += '<td  class=""text-right"">' + Math.abs(parseFloat(result[i].usmh_loss)).toFixed(2) + '</td>';
                        tbl += '<td  class=""text-right"">' + Math.abs(parseFloat(result[i].smh_loss)).toFixed(2) + '</td>';
                        tbl += '<td  class=""te");
            WriteLiteral(@"xt-right"">' + Math.abs(parseFloat(result[i].others_loss)).toFixed(2) + '</td>';
                        tbl += '<td  class=""text-right"">' + Math.abs(parseFloat(result[i].igbdh_loss)).toFixed(2) + '</td>';
                        tbl += '<td  class=""text-right"">' + Math.abs(parseFloat(result[i].egbdh_loss)).toFixed(2) + '</td>';
                        tbl += '<td  class=""text-right"">' + Math.abs(parseFloat(result[i].load_Shedding_loss)).toFixed(2) + '</td>';
                        tbl += '<td  class=""text-right"">' + Math.abs(parseFloat(total_losses)).toFixed(2) + '</td>';

                        tbl += '</tr>';
                    }
                }
                else {
                    console.log(""Data not available"");
                    // tbl += '<tr><th colspan=""12"" style=""text-align:center"">Data Not Available <th></tr>';
                }
                tbl += '</table>';
                $(""#reportsYearly"").html(tbl);
                $.fn.DataTable.ext.pager.numbers_length = 6;");
            WriteLiteral(@"
                $('#example3').DataTable({
                    dom: 'Bfrtip',
                    title: 'ImportApproval',
                    responsive: false,
                    lengthChange: false,
                    autoWidth: true,
                    paging: true,
                    searching: true,
                    ordering: true,
                    info: true,
                    autoWidth: true,
                    pageLength: 50,
                    ""order"": [[4, ""asc""]],
                    buttons: [
                        {
                            extend: 'excel',
                            title: 'Site Wise Yearly Generation Report',
                            exportOptions: {
                                columns: ':visible'
                            }
                        },
                        {
                            extend: 'csv',
                            title: 'Site Wise Yearly Generation Report',
                            expor");
            WriteLiteral(@"tOptions: {
                                columns: ':visible'
                            }
                        },
                        'colvis'
                    ],
                    initComplete: function () {
                        this.api().columns().header().to$().each(function () {
                            //$(this).attr('title', 'title for ' + $(this).text())
                            if ($(this).text() == ""EGA_A(%) i"") {
                                $(this).attr('title', 'External Grid Breakdown, Shutdown & Load Shedding')
                            }
                            if ($(this).text() == ""EGA_B(%) i"") {
                                $(this).attr('title', 'External Grid Breakdown & Shutdown')
                            }
                            if ($(this).text() == ""EGA_C(%) i"") {
                                $(this).attr('title', 'Load Shedding')
                            }
                        })
                    }
          ");
            WriteLiteral(@"          /* ""buttons"": [
                         'copy', 'excel', 'csv', 'colvis'
                     ]*/
                });
                $("".dt-buttons"").addClass('btn-group flex-wrap');
                $("".dt-buttons > button"").addClass('btn btn-secondary');
                $("".dataTables_filter> label >input"").addClass('form-control form-control-sm');
                $(""dataTables_filter"").css(""margin-top"", ""-35px"");
                $(document).on(""click"", ""div.dt-button-collection > div > button"", function () {
                    if ($(this).hasClass(""active"")) {
                        $(this).css(""background-color"", ""white"");
                    } else {
                        $(this).css(""background-color"", ""#31576d"");
                    }
                });
               // $('#example3').removeClass('dataTable');
                $('#example3').wrap(""<div class='scrolledTable'></div>"");
                document.getElementById(""loaderY"").style.display = 'none';
           ");
            WriteLiteral(" }\r\n        });\r\n\r\n    }\r\n\r\n</script>\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public IHttpContextAccessor HttpContextAccessor { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<DGRA_V1.Models.CountryList> Html { get; private set; }
    }
}
#pragma warning restore 1591
